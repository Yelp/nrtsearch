// Code generated by protoc-gen-go. DO NOT EDIT.
// source: yelp/nrtsearch/analysis.proto

package luceneserver

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type NameAndParams struct {
	Name                 string            `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Params               map[string]string `protobuf:"bytes,2,rep,name=params,proto3" json:"params,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *NameAndParams) Reset()         { *m = NameAndParams{} }
func (m *NameAndParams) String() string { return proto.CompactTextString(m) }
func (*NameAndParams) ProtoMessage()    {}
func (*NameAndParams) Descriptor() ([]byte, []int) {
	return fileDescriptor_faf2dd95d50cf248, []int{0}
}

func (m *NameAndParams) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_NameAndParams.Unmarshal(m, b)
}
func (m *NameAndParams) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_NameAndParams.Marshal(b, m, deterministic)
}
func (m *NameAndParams) XXX_Merge(src proto.Message) {
	xxx_messageInfo_NameAndParams.Merge(m, src)
}
func (m *NameAndParams) XXX_Size() int {
	return xxx_messageInfo_NameAndParams.Size(m)
}
func (m *NameAndParams) XXX_DiscardUnknown() {
	xxx_messageInfo_NameAndParams.DiscardUnknown(m)
}

var xxx_messageInfo_NameAndParams proto.InternalMessageInfo

func (m *NameAndParams) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *NameAndParams) GetParams() map[string]string {
	if m != nil {
		return m.Params
	}
	return nil
}

type ConditionalTokenFilter struct {
	Condition            *NameAndParams   `protobuf:"bytes,1,opt,name=condition,proto3" json:"condition,omitempty"`
	TokenFilters         []*NameAndParams `protobuf:"bytes,2,rep,name=tokenFilters,proto3" json:"tokenFilters,omitempty"`
	XXX_NoUnkeyedLiteral struct{}         `json:"-"`
	XXX_unrecognized     []byte           `json:"-"`
	XXX_sizecache        int32            `json:"-"`
}

func (m *ConditionalTokenFilter) Reset()         { *m = ConditionalTokenFilter{} }
func (m *ConditionalTokenFilter) String() string { return proto.CompactTextString(m) }
func (*ConditionalTokenFilter) ProtoMessage()    {}
func (*ConditionalTokenFilter) Descriptor() ([]byte, []int) {
	return fileDescriptor_faf2dd95d50cf248, []int{1}
}

func (m *ConditionalTokenFilter) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ConditionalTokenFilter.Unmarshal(m, b)
}
func (m *ConditionalTokenFilter) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ConditionalTokenFilter.Marshal(b, m, deterministic)
}
func (m *ConditionalTokenFilter) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ConditionalTokenFilter.Merge(m, src)
}
func (m *ConditionalTokenFilter) XXX_Size() int {
	return xxx_messageInfo_ConditionalTokenFilter.Size(m)
}
func (m *ConditionalTokenFilter) XXX_DiscardUnknown() {
	xxx_messageInfo_ConditionalTokenFilter.DiscardUnknown(m)
}

var xxx_messageInfo_ConditionalTokenFilter proto.InternalMessageInfo

func (m *ConditionalTokenFilter) GetCondition() *NameAndParams {
	if m != nil {
		return m.Condition
	}
	return nil
}

func (m *ConditionalTokenFilter) GetTokenFilters() []*NameAndParams {
	if m != nil {
		return m.TokenFilters
	}
	return nil
}

// Used to be able to check if a value was set
type IntObject struct {
	Int                  int32    `protobuf:"varint,1,opt,name=int,proto3" json:"int,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *IntObject) Reset()         { *m = IntObject{} }
func (m *IntObject) String() string { return proto.CompactTextString(m) }
func (*IntObject) ProtoMessage()    {}
func (*IntObject) Descriptor() ([]byte, []int) {
	return fileDescriptor_faf2dd95d50cf248, []int{2}
}

func (m *IntObject) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_IntObject.Unmarshal(m, b)
}
func (m *IntObject) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_IntObject.Marshal(b, m, deterministic)
}
func (m *IntObject) XXX_Merge(src proto.Message) {
	xxx_messageInfo_IntObject.Merge(m, src)
}
func (m *IntObject) XXX_Size() int {
	return xxx_messageInfo_IntObject.Size(m)
}
func (m *IntObject) XXX_DiscardUnknown() {
	xxx_messageInfo_IntObject.DiscardUnknown(m)
}

var xxx_messageInfo_IntObject proto.InternalMessageInfo

func (m *IntObject) GetInt() int32 {
	if m != nil {
		return m.Int
	}
	return 0
}

type CustomAnalyzer struct {
	CharFilters             []*NameAndParams          `protobuf:"bytes,1,rep,name=charFilters,proto3" json:"charFilters,omitempty"`
	Tokenizer               *NameAndParams            `protobuf:"bytes,2,opt,name=tokenizer,proto3" json:"tokenizer,omitempty"`
	TokenFilters            []*NameAndParams          `protobuf:"bytes,3,rep,name=tokenFilters,proto3" json:"tokenFilters,omitempty"`
	ConditionalTokenFilters []*ConditionalTokenFilter `protobuf:"bytes,4,rep,name=conditionalTokenFilters,proto3" json:"conditionalTokenFilters,omitempty"`
	DefaultMatchVersion     string                    `protobuf:"bytes,5,opt,name=defaultMatchVersion,proto3" json:"defaultMatchVersion,omitempty"`
	PositionIncrementGap    *IntObject                `protobuf:"bytes,6,opt,name=positionIncrementGap,proto3" json:"positionIncrementGap,omitempty"`
	OffsetGap               *IntObject                `protobuf:"bytes,7,opt,name=offsetGap,proto3" json:"offsetGap,omitempty"`
	XXX_NoUnkeyedLiteral    struct{}                  `json:"-"`
	XXX_unrecognized        []byte                    `json:"-"`
	XXX_sizecache           int32                     `json:"-"`
}

func (m *CustomAnalyzer) Reset()         { *m = CustomAnalyzer{} }
func (m *CustomAnalyzer) String() string { return proto.CompactTextString(m) }
func (*CustomAnalyzer) ProtoMessage()    {}
func (*CustomAnalyzer) Descriptor() ([]byte, []int) {
	return fileDescriptor_faf2dd95d50cf248, []int{3}
}

func (m *CustomAnalyzer) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CustomAnalyzer.Unmarshal(m, b)
}
func (m *CustomAnalyzer) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CustomAnalyzer.Marshal(b, m, deterministic)
}
func (m *CustomAnalyzer) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CustomAnalyzer.Merge(m, src)
}
func (m *CustomAnalyzer) XXX_Size() int {
	return xxx_messageInfo_CustomAnalyzer.Size(m)
}
func (m *CustomAnalyzer) XXX_DiscardUnknown() {
	xxx_messageInfo_CustomAnalyzer.DiscardUnknown(m)
}

var xxx_messageInfo_CustomAnalyzer proto.InternalMessageInfo

func (m *CustomAnalyzer) GetCharFilters() []*NameAndParams {
	if m != nil {
		return m.CharFilters
	}
	return nil
}

func (m *CustomAnalyzer) GetTokenizer() *NameAndParams {
	if m != nil {
		return m.Tokenizer
	}
	return nil
}

func (m *CustomAnalyzer) GetTokenFilters() []*NameAndParams {
	if m != nil {
		return m.TokenFilters
	}
	return nil
}

func (m *CustomAnalyzer) GetConditionalTokenFilters() []*ConditionalTokenFilter {
	if m != nil {
		return m.ConditionalTokenFilters
	}
	return nil
}

func (m *CustomAnalyzer) GetDefaultMatchVersion() string {
	if m != nil {
		return m.DefaultMatchVersion
	}
	return ""
}

func (m *CustomAnalyzer) GetPositionIncrementGap() *IntObject {
	if m != nil {
		return m.PositionIncrementGap
	}
	return nil
}

func (m *CustomAnalyzer) GetOffsetGap() *IntObject {
	if m != nil {
		return m.OffsetGap
	}
	return nil
}

type Analyzer struct {
	// Types that are valid to be assigned to AnalyzerType:
	//	*Analyzer_Predefined
	//	*Analyzer_Custom
	AnalyzerType         isAnalyzer_AnalyzerType `protobuf_oneof:"AnalyzerType"`
	XXX_NoUnkeyedLiteral struct{}                `json:"-"`
	XXX_unrecognized     []byte                  `json:"-"`
	XXX_sizecache        int32                   `json:"-"`
}

func (m *Analyzer) Reset()         { *m = Analyzer{} }
func (m *Analyzer) String() string { return proto.CompactTextString(m) }
func (*Analyzer) ProtoMessage()    {}
func (*Analyzer) Descriptor() ([]byte, []int) {
	return fileDescriptor_faf2dd95d50cf248, []int{4}
}

func (m *Analyzer) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Analyzer.Unmarshal(m, b)
}
func (m *Analyzer) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Analyzer.Marshal(b, m, deterministic)
}
func (m *Analyzer) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Analyzer.Merge(m, src)
}
func (m *Analyzer) XXX_Size() int {
	return xxx_messageInfo_Analyzer.Size(m)
}
func (m *Analyzer) XXX_DiscardUnknown() {
	xxx_messageInfo_Analyzer.DiscardUnknown(m)
}

var xxx_messageInfo_Analyzer proto.InternalMessageInfo

type isAnalyzer_AnalyzerType interface {
	isAnalyzer_AnalyzerType()
}

type Analyzer_Predefined struct {
	Predefined string `protobuf:"bytes,1,opt,name=predefined,proto3,oneof"`
}

type Analyzer_Custom struct {
	Custom *CustomAnalyzer `protobuf:"bytes,2,opt,name=custom,proto3,oneof"`
}

func (*Analyzer_Predefined) isAnalyzer_AnalyzerType() {}

func (*Analyzer_Custom) isAnalyzer_AnalyzerType() {}

func (m *Analyzer) GetAnalyzerType() isAnalyzer_AnalyzerType {
	if m != nil {
		return m.AnalyzerType
	}
	return nil
}

func (m *Analyzer) GetPredefined() string {
	if x, ok := m.GetAnalyzerType().(*Analyzer_Predefined); ok {
		return x.Predefined
	}
	return ""
}

func (m *Analyzer) GetCustom() *CustomAnalyzer {
	if x, ok := m.GetAnalyzerType().(*Analyzer_Custom); ok {
		return x.Custom
	}
	return nil
}

// XXX_OneofWrappers is for the internal use of the proto package.
func (*Analyzer) XXX_OneofWrappers() []interface{} {
	return []interface{}{
		(*Analyzer_Predefined)(nil),
		(*Analyzer_Custom)(nil),
	}
}

func init() {
	proto.RegisterType((*NameAndParams)(nil), "luceneserver.NameAndParams")
	proto.RegisterMapType((map[string]string)(nil), "luceneserver.NameAndParams.ParamsEntry")
	proto.RegisterType((*ConditionalTokenFilter)(nil), "luceneserver.ConditionalTokenFilter")
	proto.RegisterType((*IntObject)(nil), "luceneserver.IntObject")
	proto.RegisterType((*CustomAnalyzer)(nil), "luceneserver.CustomAnalyzer")
	proto.RegisterType((*Analyzer)(nil), "luceneserver.Analyzer")
}

func init() {
	proto.RegisterFile("yelp/nrtsearch/analysis.proto", fileDescriptor_faf2dd95d50cf248)
}

var fileDescriptor_faf2dd95d50cf248 = []byte{
	// 483 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x94, 0x53, 0x6d, 0x6b, 0x13, 0x41,
	0x10, 0xee, 0xe5, 0x9a, 0x68, 0x26, 0x69, 0x91, 0xb5, 0xd8, 0x43, 0xad, 0x84, 0x43, 0xb0, 0x9f,
	0xae, 0x52, 0xf1, 0xa5, 0x82, 0x94, 0xa4, 0xa8, 0x29, 0xbe, 0x85, 0xa3, 0xe8, 0x37, 0x61, 0xbb,
	0x37, 0x31, 0x67, 0xef, 0x76, 0x97, 0xdd, 0x4d, 0xe1, 0xfa, 0x3b, 0xfc, 0x2e, 0xf8, 0xcf, 0xfc,
	0x27, 0xb2, 0x9b, 0xcb, 0xcb, 0x69, 0x4c, 0xe8, 0xa7, 0xdb, 0x9b, 0x97, 0x67, 0xe6, 0x99, 0x67,
	0x06, 0xf6, 0x0a, 0xcc, 0xe4, 0x01, 0x57, 0x46, 0x23, 0x55, 0x6c, 0x74, 0x40, 0x39, 0xcd, 0x0a,
	0x9d, 0xea, 0x48, 0x2a, 0x61, 0x04, 0x69, 0x67, 0x63, 0x86, 0x1c, 0x35, 0xaa, 0x4b, 0x54, 0xe1,
	0x4f, 0x0f, 0xb6, 0x3e, 0xd2, 0x1c, 0xbb, 0x3c, 0x19, 0x50, 0x45, 0x73, 0x4d, 0x08, 0x6c, 0x72,
	0x9a, 0x63, 0xe0, 0x75, 0xbc, 0xfd, 0x66, 0xec, 0xde, 0xe4, 0x18, 0x1a, 0xd2, 0x79, 0x83, 0x5a,
	0xc7, 0xdf, 0x6f, 0x1d, 0x3e, 0x8a, 0x16, 0x41, 0xa2, 0x0a, 0x40, 0x34, 0xf9, 0xbc, 0xe6, 0x46,
	0x15, 0x71, 0x99, 0x76, 0xf7, 0x08, 0x5a, 0x0b, 0x66, 0x72, 0x0b, 0xfc, 0x0b, 0x2c, 0xca, 0x12,
	0xf6, 0x49, 0x76, 0xa0, 0x7e, 0x49, 0xb3, 0x31, 0x06, 0x35, 0x67, 0x9b, 0xfc, 0xbc, 0xac, 0xbd,
	0xf0, 0xc2, 0x1f, 0x1e, 0xdc, 0x39, 0x11, 0x3c, 0x49, 0x4d, 0x2a, 0x38, 0xcd, 0xce, 0xc4, 0x05,
	0xf2, 0x37, 0x69, 0x66, 0x50, 0x91, 0x23, 0x68, 0xb2, 0xa9, 0xc7, 0x81, 0xb5, 0x0e, 0xef, 0xad,
	0xe8, 0x2c, 0x9e, 0x47, 0x93, 0x63, 0x68, 0x9b, 0x39, 0xd2, 0x94, 0xd7, 0xca, 0xec, 0x4a, 0x42,
	0xb8, 0x07, 0xcd, 0x53, 0x6e, 0x3e, 0x9d, 0x7f, 0x47, 0x66, 0x2c, 0x9f, 0x94, 0x1b, 0xd7, 0x42,
	0x3d, 0xb6, 0xcf, 0xf0, 0xb7, 0x0f, 0xdb, 0x27, 0x63, 0x6d, 0x44, 0xde, 0xb5, 0xe3, 0xbf, 0x42,
	0x45, 0x5e, 0x41, 0x8b, 0x8d, 0xa8, 0x9a, 0x56, 0xf4, 0xd6, 0x57, 0x5c, 0x8c, 0xb7, 0x64, 0x5d,
	0x03, 0xe9, 0x15, 0x2a, 0x37, 0xa5, 0x75, 0x64, 0x67, 0xd1, 0xff, 0x90, 0xf5, 0xaf, 0x49, 0x96,
	0x7c, 0x85, 0x5d, 0xb6, 0x54, 0x02, 0x1d, 0x6c, 0x3a, 0xac, 0x87, 0x55, 0xac, 0xe5, 0x7a, 0xc5,
	0xff, 0x03, 0x21, 0x8f, 0xe1, 0x76, 0x82, 0x43, 0x3a, 0xce, 0xcc, 0x07, 0x6a, 0xd8, 0xe8, 0x33,
	0x2a, 0x6d, 0x25, 0xad, 0xbb, 0x5d, 0x58, 0xe6, 0x22, 0xef, 0x60, 0x47, 0x0a, 0xed, 0xb0, 0x4e,
	0x39, 0x53, 0x98, 0x23, 0x37, 0x6f, 0xa9, 0x0c, 0x1a, 0x6e, 0x30, 0xbb, 0xd5, 0x76, 0x66, 0x42,
	0xc5, 0x4b, 0x93, 0xc8, 0x53, 0x68, 0x8a, 0xe1, 0x50, 0xa3, 0x43, 0xb8, 0xb1, 0x1a, 0x61, 0x1e,
	0x19, 0x1a, 0xb8, 0x39, 0x13, 0xb7, 0x03, 0x20, 0x15, 0x26, 0x38, 0x4c, 0x39, 0x26, 0x93, 0xc5,
	0xee, 0x6f, 0xc4, 0x0b, 0x36, 0xf2, 0x0c, 0x1a, 0xcc, 0x2d, 0x44, 0x29, 0xde, 0xfd, 0xbf, 0x46,
	0x56, 0x59, 0x96, 0xfe, 0x46, 0x5c, 0x46, 0xf7, 0xb6, 0xa1, 0x3d, 0xb5, 0x9e, 0x15, 0x12, 0x7b,
	0xcf, 0xe1, 0x01, 0x13, 0x79, 0x64, 0x8f, 0x3c, 0x9a, 0x1d, 0x79, 0x54, 0xa2, 0x7c, 0x53, 0x92,
	0xf5, 0xb6, 0xba, 0xe5, 0xc5, 0x0f, 0xec, 0xc1, 0x0f, 0xbc, 0x5f, 0x35, 0xbf, 0xff, 0xfe, 0xcb,
	0x79, 0xc3, 0xdd, 0xff, 0x93, 0x3f, 0x01, 0x00, 0x00, 0xff, 0xff, 0xfd, 0x46, 0x78, 0xd4, 0x20,
	0x04, 0x00, 0x00,
}
