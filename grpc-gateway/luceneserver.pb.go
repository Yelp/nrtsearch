// Code generated by protoc-gen-go. DO NOT EDIT.
// source: yelp/nrtsearch/luceneserver.proto

package luceneserver

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

//Type of the field
type FieldType int32

const (
	FieldType_ATOM      FieldType = 0
	FieldType_TEXT      FieldType = 1
	FieldType_BOOLEAN   FieldType = 2
	FieldType_LONG      FieldType = 3
	FieldType_INT       FieldType = 4
	FieldType_DOUBLE    FieldType = 5
	FieldType_FLOAT     FieldType = 6
	FieldType_LAT_LON   FieldType = 7
	FieldType_DATE_TIME FieldType = 8
	// TODO name this "dynamic" instead of "virtual"?
	FieldType_VIRTUAL FieldType = 9
	// TODO need tests for internal:
	FieldType_INTERNAL FieldType = 10
)

var FieldType_name = map[int32]string{
	0:  "ATOM",
	1:  "TEXT",
	2:  "BOOLEAN",
	3:  "LONG",
	4:  "INT",
	5:  "DOUBLE",
	6:  "FLOAT",
	7:  "LAT_LON",
	8:  "DATE_TIME",
	9:  "VIRTUAL",
	10: "INTERNAL",
}

var FieldType_value = map[string]int32{
	"ATOM":      0,
	"TEXT":      1,
	"BOOLEAN":   2,
	"LONG":      3,
	"INT":       4,
	"DOUBLE":    5,
	"FLOAT":     6,
	"LAT_LON":   7,
	"DATE_TIME": 8,
	"VIRTUAL":   9,
	"INTERNAL":  10,
}

func (x FieldType) String() string {
	return proto.EnumName(FieldType_name, int32(x))
}

func (FieldType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_2c07125fba14e737, []int{0}
}

//How the tokens should be indexed.
type IndexOptions int32

const (
	IndexOptions_DOCS_FREQS_POSITIONS         IndexOptions = 0
	IndexOptions_DOCS                         IndexOptions = 1
	IndexOptions_DOCS_FREQS                   IndexOptions = 2
	IndexOptions_DOCS_FREQS_POSITIONS_OFFSETS IndexOptions = 3
)

var IndexOptions_name = map[int32]string{
	0: "DOCS_FREQS_POSITIONS",
	1: "DOCS",
	2: "DOCS_FREQS",
	3: "DOCS_FREQS_POSITIONS_OFFSETS",
}

var IndexOptions_value = map[string]int32{
	"DOCS_FREQS_POSITIONS":         0,
	"DOCS":                         1,
	"DOCS_FREQS":                   2,
	"DOCS_FREQS_POSITIONS_OFFSETS": 3,
}

func (x IndexOptions) String() string {
	return proto.EnumName(IndexOptions_name, int32(x))
}

func (IndexOptions) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_2c07125fba14e737, []int{1}
}

//Whether/how term vectors should be indexed.
type TermVectors int32

const (
	TermVectors_NO_TERMVECTORS                   TermVectors = 0
	TermVectors_TERMS                            TermVectors = 1
	TermVectors_TERMS_POSITIONS                  TermVectors = 2
	TermVectors_TERMS_POSITIONS_OFFSETS          TermVectors = 3
	TermVectors_TERMS_POSITIONS_OFFSETS_PAYLOADS TermVectors = 4
)

var TermVectors_name = map[int32]string{
	0: "NO_TERMVECTORS",
	1: "TERMS",
	2: "TERMS_POSITIONS",
	3: "TERMS_POSITIONS_OFFSETS",
	4: "TERMS_POSITIONS_OFFSETS_PAYLOADS",
}

var TermVectors_value = map[string]int32{
	"NO_TERMVECTORS":                   0,
	"TERMS":                            1,
	"TERMS_POSITIONS":                  2,
	"TERMS_POSITIONS_OFFSETS":          3,
	"TERMS_POSITIONS_OFFSETS_PAYLOADS": 4,
}

func (x TermVectors) String() string {
	return proto.EnumName(TermVectors_name, int32(x))
}

func (TermVectors) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_2c07125fba14e737, []int{2}
}

//Whether/How this field should index facets, and how.
type FacetType int32

const (
	FacetType_NO_FACETS             FacetType = 0
	FacetType_FLAT                  FacetType = 1
	FacetType_HIERARCHY             FacetType = 2
	FacetType_NUMERIC_RANGE         FacetType = 3
	FacetType_SORTED_SET_DOC_VALUES FacetType = 4
)

var FacetType_name = map[int32]string{
	0: "NO_FACETS",
	1: "FLAT",
	2: "HIERARCHY",
	3: "NUMERIC_RANGE",
	4: "SORTED_SET_DOC_VALUES",
}

var FacetType_value = map[string]int32{
	"NO_FACETS":             0,
	"FLAT":                  1,
	"HIERARCHY":             2,
	"NUMERIC_RANGE":         3,
	"SORTED_SET_DOC_VALUES": 4,
}

func (x FacetType) String() string {
	return proto.EnumName(FacetType_name, int32(x))
}

func (FacetType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_2c07125fba14e737, []int{3}
}

type Mode int32

const (
	Mode_STANDALONE Mode = 0
	Mode_PRIMARY    Mode = 1
	Mode_REPLICA    Mode = 2
)

var Mode_name = map[int32]string{
	0: "STANDALONE",
	1: "PRIMARY",
	2: "REPLICA",
}

var Mode_value = map[string]int32{
	"STANDALONE": 0,
	"PRIMARY":    1,
	"REPLICA":    2,
}

func (x Mode) String() string {
	return proto.EnumName(Mode_name, int32(x))
}

func (Mode) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_2c07125fba14e737, []int{4}
}

type SampleType int32

const (
	SampleType_COUNTER   SampleType = 0
	SampleType_GAUGE     SampleType = 1
	SampleType_SUMMARY   SampleType = 2
	SampleType_HISTOGRAM SampleType = 3
	SampleType_UNTYPED   SampleType = 4
)

var SampleType_name = map[int32]string{
	0: "COUNTER",
	1: "GAUGE",
	2: "SUMMARY",
	3: "HISTOGRAM",
	4: "UNTYPED",
}

var SampleType_value = map[string]int32{
	"COUNTER":   0,
	"GAUGE":     1,
	"SUMMARY":   2,
	"HISTOGRAM": 3,
	"UNTYPED":   4,
}

func (x SampleType) String() string {
	return proto.EnumName(SampleType_name, int32(x))
}

func (SampleType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_2c07125fba14e737, []int{5}
}

type TransferStatusCode int32

const (
	TransferStatusCode_Unknown TransferStatusCode = 0
	TransferStatusCode_Done    TransferStatusCode = 1
	TransferStatusCode_Failed  TransferStatusCode = 2
	TransferStatusCode_Ongoing TransferStatusCode = 3
)

var TransferStatusCode_name = map[int32]string{
	0: "Unknown",
	1: "Done",
	2: "Failed",
	3: "Ongoing",
}

var TransferStatusCode_value = map[string]int32{
	"Unknown": 0,
	"Done":    1,
	"Failed":  2,
	"Ongoing": 3,
}

func (x TransferStatusCode) String() string {
	return proto.EnumName(TransferStatusCode_name, int32(x))
}

func (TransferStatusCode) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_2c07125fba14e737, []int{6}
}

// Input to createIndex
type CreateIndexRequest struct {
	IndexName            string   `protobuf:"bytes,1,opt,name=indexName,proto3" json:"indexName,omitempty"`
	RootDir              string   `protobuf:"bytes,2,opt,name=rootDir,proto3" json:"rootDir,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CreateIndexRequest) Reset()         { *m = CreateIndexRequest{} }
func (m *CreateIndexRequest) String() string { return proto.CompactTextString(m) }
func (*CreateIndexRequest) ProtoMessage()    {}
func (*CreateIndexRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_2c07125fba14e737, []int{0}
}

func (m *CreateIndexRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CreateIndexRequest.Unmarshal(m, b)
}
func (m *CreateIndexRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CreateIndexRequest.Marshal(b, m, deterministic)
}
func (m *CreateIndexRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CreateIndexRequest.Merge(m, src)
}
func (m *CreateIndexRequest) XXX_Size() int {
	return xxx_messageInfo_CreateIndexRequest.Size(m)
}
func (m *CreateIndexRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_CreateIndexRequest.DiscardUnknown(m)
}

var xxx_messageInfo_CreateIndexRequest proto.InternalMessageInfo

func (m *CreateIndexRequest) GetIndexName() string {
	if m != nil {
		return m.IndexName
	}
	return ""
}

func (m *CreateIndexRequest) GetRootDir() string {
	if m != nil {
		return m.RootDir
	}
	return ""
}

// Response from Server to createIndex
type CreateIndexResponse struct {
	Response             string   `protobuf:"bytes,1,opt,name=response,proto3" json:"response,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CreateIndexResponse) Reset()         { *m = CreateIndexResponse{} }
func (m *CreateIndexResponse) String() string { return proto.CompactTextString(m) }
func (*CreateIndexResponse) ProtoMessage()    {}
func (*CreateIndexResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_2c07125fba14e737, []int{1}
}

func (m *CreateIndexResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CreateIndexResponse.Unmarshal(m, b)
}
func (m *CreateIndexResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CreateIndexResponse.Marshal(b, m, deterministic)
}
func (m *CreateIndexResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CreateIndexResponse.Merge(m, src)
}
func (m *CreateIndexResponse) XXX_Size() int {
	return xxx_messageInfo_CreateIndexResponse.Size(m)
}
func (m *CreateIndexResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_CreateIndexResponse.DiscardUnknown(m)
}

var xxx_messageInfo_CreateIndexResponse proto.InternalMessageInfo

func (m *CreateIndexResponse) GetResponse() string {
	if m != nil {
		return m.Response
	}
	return ""
}

// Input to liveSettings
type LiveSettingsRequest struct {
	IndexName string `protobuf:"bytes,1,opt,name=indexName,proto3" json:"indexName,omitempty"`
	//Longest time to wait before reopening IndexSearcher (i.e., periodic background reopen).
	MaxRefreshSec float64 `protobuf:"fixed64,2,opt,name=maxRefreshSec,proto3" json:"maxRefreshSec,omitempty"`
	//Shortest time to wait before reopening IndexSearcher (i.e., when a search is waiting for a specific indexGen).
	MinRefreshSec float64 `protobuf:"fixed64,3,opt,name=minRefreshSec,proto3" json:"minRefreshSec,omitempty"`
	//Non-current searchers older than this are pruned.
	MaxSearcherAgeSec float64 `protobuf:"fixed64,4,opt,name=maxSearcherAgeSec,proto3" json:"maxSearcherAgeSec,omitempty"`
	//Size (in MB) of IndexWriter's RAM buffer.
	IndexRamBufferSizeMB float64  `protobuf:"fixed64,5,opt,name=indexRamBufferSizeMB,proto3" json:"indexRamBufferSizeMB,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *LiveSettingsRequest) Reset()         { *m = LiveSettingsRequest{} }
func (m *LiveSettingsRequest) String() string { return proto.CompactTextString(m) }
func (*LiveSettingsRequest) ProtoMessage()    {}
func (*LiveSettingsRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_2c07125fba14e737, []int{2}
}

func (m *LiveSettingsRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_LiveSettingsRequest.Unmarshal(m, b)
}
func (m *LiveSettingsRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_LiveSettingsRequest.Marshal(b, m, deterministic)
}
func (m *LiveSettingsRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_LiveSettingsRequest.Merge(m, src)
}
func (m *LiveSettingsRequest) XXX_Size() int {
	return xxx_messageInfo_LiveSettingsRequest.Size(m)
}
func (m *LiveSettingsRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_LiveSettingsRequest.DiscardUnknown(m)
}

var xxx_messageInfo_LiveSettingsRequest proto.InternalMessageInfo

func (m *LiveSettingsRequest) GetIndexName() string {
	if m != nil {
		return m.IndexName
	}
	return ""
}

func (m *LiveSettingsRequest) GetMaxRefreshSec() float64 {
	if m != nil {
		return m.MaxRefreshSec
	}
	return 0
}

func (m *LiveSettingsRequest) GetMinRefreshSec() float64 {
	if m != nil {
		return m.MinRefreshSec
	}
	return 0
}

func (m *LiveSettingsRequest) GetMaxSearcherAgeSec() float64 {
	if m != nil {
		return m.MaxSearcherAgeSec
	}
	return 0
}

func (m *LiveSettingsRequest) GetIndexRamBufferSizeMB() float64 {
	if m != nil {
		return m.IndexRamBufferSizeMB
	}
	return 0
}

// Response from Server to liveSettings
type LiveSettingsResponse struct {
	Response             string   `protobuf:"bytes,1,opt,name=response,proto3" json:"response,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *LiveSettingsResponse) Reset()         { *m = LiveSettingsResponse{} }
func (m *LiveSettingsResponse) String() string { return proto.CompactTextString(m) }
func (*LiveSettingsResponse) ProtoMessage()    {}
func (*LiveSettingsResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_2c07125fba14e737, []int{3}
}

func (m *LiveSettingsResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_LiveSettingsResponse.Unmarshal(m, b)
}
func (m *LiveSettingsResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_LiveSettingsResponse.Marshal(b, m, deterministic)
}
func (m *LiveSettingsResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_LiveSettingsResponse.Merge(m, src)
}
func (m *LiveSettingsResponse) XXX_Size() int {
	return xxx_messageInfo_LiveSettingsResponse.Size(m)
}
func (m *LiveSettingsResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_LiveSettingsResponse.DiscardUnknown(m)
}

var xxx_messageInfo_LiveSettingsResponse proto.InternalMessageInfo

func (m *LiveSettingsResponse) GetResponse() string {
	if m != nil {
		return m.Response
	}
	return ""
}

type Field struct {
	Name            string       `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Type            FieldType    `protobuf:"varint,2,opt,name=type,proto3,enum=luceneserver.FieldType" json:"type,omitempty"`
	Search          bool         `protobuf:"varint,3,opt,name=search,proto3" json:"search,omitempty"`
	Store           bool         `protobuf:"varint,4,opt,name=store,proto3" json:"store,omitempty"`
	StoreDocValues  bool         `protobuf:"varint,5,opt,name=storeDocValues,proto3" json:"storeDocValues,omitempty"`
	Sort            bool         `protobuf:"varint,6,opt,name=sort,proto3" json:"sort,omitempty"`
	Tokenize        bool         `protobuf:"varint,7,opt,name=tokenize,proto3" json:"tokenize,omitempty"`
	Group           bool         `protobuf:"varint,8,opt,name=group,proto3" json:"group,omitempty"`
	MultiValued     bool         `protobuf:"varint,9,opt,name=multiValued,proto3" json:"multiValued,omitempty"`
	Highlight       bool         `protobuf:"varint,10,opt,name=highlight,proto3" json:"highlight,omitempty"`
	OmitNorms       bool         `protobuf:"varint,11,opt,name=omitNorms,proto3" json:"omitNorms,omitempty"`
	DateTimeFormat  string       `protobuf:"bytes,12,opt,name=dateTimeFormat,proto3" json:"dateTimeFormat,omitempty"`
	PostingsFormat  string       `protobuf:"bytes,13,opt,name=postingsFormat,proto3" json:"postingsFormat,omitempty"`
	DocValuesFormat string       `protobuf:"bytes,14,opt,name=docValuesFormat,proto3" json:"docValuesFormat,omitempty"`
	IndexOptions    IndexOptions `protobuf:"varint,15,opt,name=indexOptions,proto3,enum=luceneserver.IndexOptions" json:"indexOptions,omitempty"`
	Expression      string       `protobuf:"bytes,16,opt,name=expression,proto3" json:"expression,omitempty"`
	//TODO make analyzers message types i.e. StandardAnalyzer, EnglishAnalyzer, CustomAnalyzer etc
	Analyzer       *Analyzer   `protobuf:"bytes,17,opt,name=analyzer,proto3" json:"analyzer,omitempty"`
	IndexAnalyzer  *Analyzer   `protobuf:"bytes,18,opt,name=indexAnalyzer,proto3" json:"indexAnalyzer,omitempty"`
	SearchAnalyzer *Analyzer   `protobuf:"bytes,19,opt,name=searchAnalyzer,proto3" json:"searchAnalyzer,omitempty"`
	TermVectors    TermVectors `protobuf:"varint,20,opt,name=termVectors,proto3,enum=luceneserver.TermVectors" json:"termVectors,omitempty"`
	//TODO make similarity message types i.d. DefaultSimilarity, CustomSimilarity, BM25Similarity;
	Similarity           string    `protobuf:"bytes,21,opt,name=similarity,proto3" json:"similarity,omitempty"`
	Facet                FacetType `protobuf:"varint,22,opt,name=facet,proto3,enum=luceneserver.FacetType" json:"facet,omitempty"`
	FacetIndexFieldName  string    `protobuf:"bytes,23,opt,name=facetIndexFieldName,proto3" json:"facetIndexFieldName,omitempty"`
	XXX_NoUnkeyedLiteral struct{}  `json:"-"`
	XXX_unrecognized     []byte    `json:"-"`
	XXX_sizecache        int32     `json:"-"`
}

func (m *Field) Reset()         { *m = Field{} }
func (m *Field) String() string { return proto.CompactTextString(m) }
func (*Field) ProtoMessage()    {}
func (*Field) Descriptor() ([]byte, []int) {
	return fileDescriptor_2c07125fba14e737, []int{4}
}

func (m *Field) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Field.Unmarshal(m, b)
}
func (m *Field) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Field.Marshal(b, m, deterministic)
}
func (m *Field) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Field.Merge(m, src)
}
func (m *Field) XXX_Size() int {
	return xxx_messageInfo_Field.Size(m)
}
func (m *Field) XXX_DiscardUnknown() {
	xxx_messageInfo_Field.DiscardUnknown(m)
}

var xxx_messageInfo_Field proto.InternalMessageInfo

func (m *Field) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *Field) GetType() FieldType {
	if m != nil {
		return m.Type
	}
	return FieldType_ATOM
}

func (m *Field) GetSearch() bool {
	if m != nil {
		return m.Search
	}
	return false
}

func (m *Field) GetStore() bool {
	if m != nil {
		return m.Store
	}
	return false
}

func (m *Field) GetStoreDocValues() bool {
	if m != nil {
		return m.StoreDocValues
	}
	return false
}

func (m *Field) GetSort() bool {
	if m != nil {
		return m.Sort
	}
	return false
}

func (m *Field) GetTokenize() bool {
	if m != nil {
		return m.Tokenize
	}
	return false
}

func (m *Field) GetGroup() bool {
	if m != nil {
		return m.Group
	}
	return false
}

func (m *Field) GetMultiValued() bool {
	if m != nil {
		return m.MultiValued
	}
	return false
}

func (m *Field) GetHighlight() bool {
	if m != nil {
		return m.Highlight
	}
	return false
}

func (m *Field) GetOmitNorms() bool {
	if m != nil {
		return m.OmitNorms
	}
	return false
}

func (m *Field) GetDateTimeFormat() string {
	if m != nil {
		return m.DateTimeFormat
	}
	return ""
}

func (m *Field) GetPostingsFormat() string {
	if m != nil {
		return m.PostingsFormat
	}
	return ""
}

func (m *Field) GetDocValuesFormat() string {
	if m != nil {
		return m.DocValuesFormat
	}
	return ""
}

func (m *Field) GetIndexOptions() IndexOptions {
	if m != nil {
		return m.IndexOptions
	}
	return IndexOptions_DOCS_FREQS_POSITIONS
}

func (m *Field) GetExpression() string {
	if m != nil {
		return m.Expression
	}
	return ""
}

func (m *Field) GetAnalyzer() *Analyzer {
	if m != nil {
		return m.Analyzer
	}
	return nil
}

func (m *Field) GetIndexAnalyzer() *Analyzer {
	if m != nil {
		return m.IndexAnalyzer
	}
	return nil
}

func (m *Field) GetSearchAnalyzer() *Analyzer {
	if m != nil {
		return m.SearchAnalyzer
	}
	return nil
}

func (m *Field) GetTermVectors() TermVectors {
	if m != nil {
		return m.TermVectors
	}
	return TermVectors_NO_TERMVECTORS
}

func (m *Field) GetSimilarity() string {
	if m != nil {
		return m.Similarity
	}
	return ""
}

func (m *Field) GetFacet() FacetType {
	if m != nil {
		return m.Facet
	}
	return FacetType_NO_FACETS
}

func (m *Field) GetFacetIndexFieldName() string {
	if m != nil {
		return m.FacetIndexFieldName
	}
	return ""
}

// Input to registerFields
type FieldDefRequest struct {
	IndexName            string   `protobuf:"bytes,1,opt,name=indexName,proto3" json:"indexName,omitempty"`
	Field                []*Field `protobuf:"bytes,2,rep,name=field,proto3" json:"field,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *FieldDefRequest) Reset()         { *m = FieldDefRequest{} }
func (m *FieldDefRequest) String() string { return proto.CompactTextString(m) }
func (*FieldDefRequest) ProtoMessage()    {}
func (*FieldDefRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_2c07125fba14e737, []int{5}
}

func (m *FieldDefRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_FieldDefRequest.Unmarshal(m, b)
}
func (m *FieldDefRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_FieldDefRequest.Marshal(b, m, deterministic)
}
func (m *FieldDefRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_FieldDefRequest.Merge(m, src)
}
func (m *FieldDefRequest) XXX_Size() int {
	return xxx_messageInfo_FieldDefRequest.Size(m)
}
func (m *FieldDefRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_FieldDefRequest.DiscardUnknown(m)
}

var xxx_messageInfo_FieldDefRequest proto.InternalMessageInfo

func (m *FieldDefRequest) GetIndexName() string {
	if m != nil {
		return m.IndexName
	}
	return ""
}

func (m *FieldDefRequest) GetField() []*Field {
	if m != nil {
		return m.Field
	}
	return nil
}

// Response from Server for registerFields
type FieldDefResponse struct {
	Response             string   `protobuf:"bytes,1,opt,name=response,proto3" json:"response,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *FieldDefResponse) Reset()         { *m = FieldDefResponse{} }
func (m *FieldDefResponse) String() string { return proto.CompactTextString(m) }
func (*FieldDefResponse) ProtoMessage()    {}
func (*FieldDefResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_2c07125fba14e737, []int{6}
}

func (m *FieldDefResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_FieldDefResponse.Unmarshal(m, b)
}
func (m *FieldDefResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_FieldDefResponse.Marshal(b, m, deterministic)
}
func (m *FieldDefResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_FieldDefResponse.Merge(m, src)
}
func (m *FieldDefResponse) XXX_Size() int {
	return xxx_messageInfo_FieldDefResponse.Size(m)
}
func (m *FieldDefResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_FieldDefResponse.DiscardUnknown(m)
}

var xxx_messageInfo_FieldDefResponse proto.InternalMessageInfo

func (m *FieldDefResponse) GetResponse() string {
	if m != nil {
		return m.Response
	}
	return ""
}

// Input to settings
type SettingsRequest struct {
	IndexName                              string      `protobuf:"bytes,1,opt,name=indexName,proto3" json:"indexName,omitempty"`
	MergeMaxMBPerSec                       float64     `protobuf:"fixed64,2,opt,name=mergeMaxMBPerSec,proto3" json:"mergeMaxMBPerSec,omitempty"`
	NrtCachingDirectoryMaxMergeSizeMB      float64     `protobuf:"fixed64,3,opt,name=nrtCachingDirectoryMaxMergeSizeMB,proto3" json:"nrtCachingDirectoryMaxMergeSizeMB,omitempty"`
	NrtCachingDirectoryMaxSizeMB           float64     `protobuf:"fixed64,4,opt,name=nrtCachingDirectoryMaxSizeMB,proto3" json:"nrtCachingDirectoryMaxSizeMB,omitempty"`
	ConcurrentMergeSchedulerMaxThreadCount int32       `protobuf:"varint,5,opt,name=concurrentMergeSchedulerMaxThreadCount,proto3" json:"concurrentMergeSchedulerMaxThreadCount,omitempty"`
	ConcurrentMergeSchedulerMaxMergeCount  int32       `protobuf:"varint,6,opt,name=concurrentMergeSchedulerMaxMergeCount,proto3" json:"concurrentMergeSchedulerMaxMergeCount,omitempty"`
	IndexSort                              *SortFields `protobuf:"bytes,7,opt,name=indexSort,proto3" json:"indexSort,omitempty"`
	IndexVerbose                           bool        `protobuf:"varint,8,opt,name=indexVerbose,proto3" json:"indexVerbose,omitempty"`
	IndexMergeSchedulerAutoThrottle        bool        `protobuf:"varint,9,opt,name=indexMergeSchedulerAutoThrottle,proto3" json:"indexMergeSchedulerAutoThrottle,omitempty"`
	NormsFormat                            string      `protobuf:"bytes,10,opt,name=normsFormat,proto3" json:"normsFormat,omitempty"`
	// Base Directory implementation to use (NRTCachingDirectory will wrap this) either one of the core implementations (FSDirectory, MMapDirectory, NIOFSDirectory, SimpleFSDirectory, RAMDirectory (for temporary indices!) or a fully qualified path to a Directory implementation that has a public constructor taking a single File argument default: FSDirectory
	Directory            string   `protobuf:"bytes,11,opt,name=directory,proto3" json:"directory,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SettingsRequest) Reset()         { *m = SettingsRequest{} }
func (m *SettingsRequest) String() string { return proto.CompactTextString(m) }
func (*SettingsRequest) ProtoMessage()    {}
func (*SettingsRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_2c07125fba14e737, []int{7}
}

func (m *SettingsRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SettingsRequest.Unmarshal(m, b)
}
func (m *SettingsRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SettingsRequest.Marshal(b, m, deterministic)
}
func (m *SettingsRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SettingsRequest.Merge(m, src)
}
func (m *SettingsRequest) XXX_Size() int {
	return xxx_messageInfo_SettingsRequest.Size(m)
}
func (m *SettingsRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_SettingsRequest.DiscardUnknown(m)
}

var xxx_messageInfo_SettingsRequest proto.InternalMessageInfo

func (m *SettingsRequest) GetIndexName() string {
	if m != nil {
		return m.IndexName
	}
	return ""
}

func (m *SettingsRequest) GetMergeMaxMBPerSec() float64 {
	if m != nil {
		return m.MergeMaxMBPerSec
	}
	return 0
}

func (m *SettingsRequest) GetNrtCachingDirectoryMaxMergeSizeMB() float64 {
	if m != nil {
		return m.NrtCachingDirectoryMaxMergeSizeMB
	}
	return 0
}

func (m *SettingsRequest) GetNrtCachingDirectoryMaxSizeMB() float64 {
	if m != nil {
		return m.NrtCachingDirectoryMaxSizeMB
	}
	return 0
}

func (m *SettingsRequest) GetConcurrentMergeSchedulerMaxThreadCount() int32 {
	if m != nil {
		return m.ConcurrentMergeSchedulerMaxThreadCount
	}
	return 0
}

func (m *SettingsRequest) GetConcurrentMergeSchedulerMaxMergeCount() int32 {
	if m != nil {
		return m.ConcurrentMergeSchedulerMaxMergeCount
	}
	return 0
}

func (m *SettingsRequest) GetIndexSort() *SortFields {
	if m != nil {
		return m.IndexSort
	}
	return nil
}

func (m *SettingsRequest) GetIndexVerbose() bool {
	if m != nil {
		return m.IndexVerbose
	}
	return false
}

func (m *SettingsRequest) GetIndexMergeSchedulerAutoThrottle() bool {
	if m != nil {
		return m.IndexMergeSchedulerAutoThrottle
	}
	return false
}

func (m *SettingsRequest) GetNormsFormat() string {
	if m != nil {
		return m.NormsFormat
	}
	return ""
}

func (m *SettingsRequest) GetDirectory() string {
	if m != nil {
		return m.Directory
	}
	return ""
}

// Settings Response returned from Server
type SettingsResponse struct {
	Response             string   `protobuf:"bytes,1,opt,name=response,proto3" json:"response,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SettingsResponse) Reset()         { *m = SettingsResponse{} }
func (m *SettingsResponse) String() string { return proto.CompactTextString(m) }
func (*SettingsResponse) ProtoMessage()    {}
func (*SettingsResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_2c07125fba14e737, []int{8}
}

func (m *SettingsResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SettingsResponse.Unmarshal(m, b)
}
func (m *SettingsResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SettingsResponse.Marshal(b, m, deterministic)
}
func (m *SettingsResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SettingsResponse.Merge(m, src)
}
func (m *SettingsResponse) XXX_Size() int {
	return xxx_messageInfo_SettingsResponse.Size(m)
}
func (m *SettingsResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_SettingsResponse.DiscardUnknown(m)
}

var xxx_messageInfo_SettingsResponse proto.InternalMessageInfo

func (m *SettingsResponse) GetResponse() string {
	if m != nil {
		return m.Response
	}
	return ""
}

// Start the index
type StartIndexRequest struct {
	IndexName            string        `protobuf:"bytes,1,opt,name=indexName,proto3" json:"indexName,omitempty"`
	Mode                 Mode          `protobuf:"varint,2,opt,name=mode,proto3,enum=luceneserver.Mode" json:"mode,omitempty"`
	PrimaryGen           int64         `protobuf:"varint,3,opt,name=primaryGen,proto3" json:"primaryGen,omitempty"`
	PrimaryAddress       string        `protobuf:"bytes,4,opt,name=primaryAddress,proto3" json:"primaryAddress,omitempty"`
	Port                 int32         `protobuf:"varint,5,opt,name=port,proto3" json:"port,omitempty"`
	Restore              *RestoreIndex `protobuf:"bytes,6,opt,name=restore,proto3" json:"restore,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *StartIndexRequest) Reset()         { *m = StartIndexRequest{} }
func (m *StartIndexRequest) String() string { return proto.CompactTextString(m) }
func (*StartIndexRequest) ProtoMessage()    {}
func (*StartIndexRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_2c07125fba14e737, []int{9}
}

func (m *StartIndexRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_StartIndexRequest.Unmarshal(m, b)
}
func (m *StartIndexRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_StartIndexRequest.Marshal(b, m, deterministic)
}
func (m *StartIndexRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_StartIndexRequest.Merge(m, src)
}
func (m *StartIndexRequest) XXX_Size() int {
	return xxx_messageInfo_StartIndexRequest.Size(m)
}
func (m *StartIndexRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_StartIndexRequest.DiscardUnknown(m)
}

var xxx_messageInfo_StartIndexRequest proto.InternalMessageInfo

func (m *StartIndexRequest) GetIndexName() string {
	if m != nil {
		return m.IndexName
	}
	return ""
}

func (m *StartIndexRequest) GetMode() Mode {
	if m != nil {
		return m.Mode
	}
	return Mode_STANDALONE
}

func (m *StartIndexRequest) GetPrimaryGen() int64 {
	if m != nil {
		return m.PrimaryGen
	}
	return 0
}

func (m *StartIndexRequest) GetPrimaryAddress() string {
	if m != nil {
		return m.PrimaryAddress
	}
	return ""
}

func (m *StartIndexRequest) GetPort() int32 {
	if m != nil {
		return m.Port
	}
	return 0
}

func (m *StartIndexRequest) GetRestore() *RestoreIndex {
	if m != nil {
		return m.Restore
	}
	return nil
}

type StartIndexResponse struct {
	MaxDoc               int32    `protobuf:"varint,1,opt,name=maxDoc,proto3" json:"maxDoc,omitempty"`
	NumDocs              int32    `protobuf:"varint,2,opt,name=numDocs,proto3" json:"numDocs,omitempty"`
	Segments             string   `protobuf:"bytes,3,opt,name=segments,proto3" json:"segments,omitempty"`
	StartTimeMS          float64  `protobuf:"fixed64,4,opt,name=startTimeMS,proto3" json:"startTimeMS,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *StartIndexResponse) Reset()         { *m = StartIndexResponse{} }
func (m *StartIndexResponse) String() string { return proto.CompactTextString(m) }
func (*StartIndexResponse) ProtoMessage()    {}
func (*StartIndexResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_2c07125fba14e737, []int{10}
}

func (m *StartIndexResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_StartIndexResponse.Unmarshal(m, b)
}
func (m *StartIndexResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_StartIndexResponse.Marshal(b, m, deterministic)
}
func (m *StartIndexResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_StartIndexResponse.Merge(m, src)
}
func (m *StartIndexResponse) XXX_Size() int {
	return xxx_messageInfo_StartIndexResponse.Size(m)
}
func (m *StartIndexResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_StartIndexResponse.DiscardUnknown(m)
}

var xxx_messageInfo_StartIndexResponse proto.InternalMessageInfo

func (m *StartIndexResponse) GetMaxDoc() int32 {
	if m != nil {
		return m.MaxDoc
	}
	return 0
}

func (m *StartIndexResponse) GetNumDocs() int32 {
	if m != nil {
		return m.NumDocs
	}
	return 0
}

func (m *StartIndexResponse) GetSegments() string {
	if m != nil {
		return m.Segments
	}
	return ""
}

func (m *StartIndexResponse) GetStartTimeMS() float64 {
	if m != nil {
		return m.StartTimeMS
	}
	return 0
}

type AddDocumentRequest struct {
	IndexName            string                                          `protobuf:"bytes,1,opt,name=indexName,proto3" json:"indexName,omitempty"`
	Fields               map[string]*AddDocumentRequest_MultiValuedField `protobuf:"bytes,3,rep,name=fields,proto3" json:"fields,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	XXX_NoUnkeyedLiteral struct{}                                        `json:"-"`
	XXX_unrecognized     []byte                                          `json:"-"`
	XXX_sizecache        int32                                           `json:"-"`
}

func (m *AddDocumentRequest) Reset()         { *m = AddDocumentRequest{} }
func (m *AddDocumentRequest) String() string { return proto.CompactTextString(m) }
func (*AddDocumentRequest) ProtoMessage()    {}
func (*AddDocumentRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_2c07125fba14e737, []int{11}
}

func (m *AddDocumentRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AddDocumentRequest.Unmarshal(m, b)
}
func (m *AddDocumentRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AddDocumentRequest.Marshal(b, m, deterministic)
}
func (m *AddDocumentRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AddDocumentRequest.Merge(m, src)
}
func (m *AddDocumentRequest) XXX_Size() int {
	return xxx_messageInfo_AddDocumentRequest.Size(m)
}
func (m *AddDocumentRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_AddDocumentRequest.DiscardUnknown(m)
}

var xxx_messageInfo_AddDocumentRequest proto.InternalMessageInfo

func (m *AddDocumentRequest) GetIndexName() string {
	if m != nil {
		return m.IndexName
	}
	return ""
}

func (m *AddDocumentRequest) GetFields() map[string]*AddDocumentRequest_MultiValuedField {
	if m != nil {
		return m.Fields
	}
	return nil
}

//we use this wrapper object to represent each field as a multivalued field.
type AddDocumentRequest_MultiValuedField struct {
	Value                []string `protobuf:"bytes,1,rep,name=value,proto3" json:"value,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *AddDocumentRequest_MultiValuedField) Reset()         { *m = AddDocumentRequest_MultiValuedField{} }
func (m *AddDocumentRequest_MultiValuedField) String() string { return proto.CompactTextString(m) }
func (*AddDocumentRequest_MultiValuedField) ProtoMessage()    {}
func (*AddDocumentRequest_MultiValuedField) Descriptor() ([]byte, []int) {
	return fileDescriptor_2c07125fba14e737, []int{11, 0}
}

func (m *AddDocumentRequest_MultiValuedField) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AddDocumentRequest_MultiValuedField.Unmarshal(m, b)
}
func (m *AddDocumentRequest_MultiValuedField) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AddDocumentRequest_MultiValuedField.Marshal(b, m, deterministic)
}
func (m *AddDocumentRequest_MultiValuedField) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AddDocumentRequest_MultiValuedField.Merge(m, src)
}
func (m *AddDocumentRequest_MultiValuedField) XXX_Size() int {
	return xxx_messageInfo_AddDocumentRequest_MultiValuedField.Size(m)
}
func (m *AddDocumentRequest_MultiValuedField) XXX_DiscardUnknown() {
	xxx_messageInfo_AddDocumentRequest_MultiValuedField.DiscardUnknown(m)
}

var xxx_messageInfo_AddDocumentRequest_MultiValuedField proto.InternalMessageInfo

func (m *AddDocumentRequest_MultiValuedField) GetValue() []string {
	if m != nil {
		return m.Value
	}
	return nil
}

type AddDocumentResponse struct {
	GenId                string   `protobuf:"bytes,1,opt,name=genId,proto3" json:"genId,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *AddDocumentResponse) Reset()         { *m = AddDocumentResponse{} }
func (m *AddDocumentResponse) String() string { return proto.CompactTextString(m) }
func (*AddDocumentResponse) ProtoMessage()    {}
func (*AddDocumentResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_2c07125fba14e737, []int{12}
}

func (m *AddDocumentResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AddDocumentResponse.Unmarshal(m, b)
}
func (m *AddDocumentResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AddDocumentResponse.Marshal(b, m, deterministic)
}
func (m *AddDocumentResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AddDocumentResponse.Merge(m, src)
}
func (m *AddDocumentResponse) XXX_Size() int {
	return xxx_messageInfo_AddDocumentResponse.Size(m)
}
func (m *AddDocumentResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_AddDocumentResponse.DiscardUnknown(m)
}

var xxx_messageInfo_AddDocumentResponse proto.InternalMessageInfo

func (m *AddDocumentResponse) GetGenId() string {
	if m != nil {
		return m.GenId
	}
	return ""
}

type RefreshRequest struct {
	IndexName            string   `protobuf:"bytes,1,opt,name=indexName,proto3" json:"indexName,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *RefreshRequest) Reset()         { *m = RefreshRequest{} }
func (m *RefreshRequest) String() string { return proto.CompactTextString(m) }
func (*RefreshRequest) ProtoMessage()    {}
func (*RefreshRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_2c07125fba14e737, []int{13}
}

func (m *RefreshRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RefreshRequest.Unmarshal(m, b)
}
func (m *RefreshRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RefreshRequest.Marshal(b, m, deterministic)
}
func (m *RefreshRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RefreshRequest.Merge(m, src)
}
func (m *RefreshRequest) XXX_Size() int {
	return xxx_messageInfo_RefreshRequest.Size(m)
}
func (m *RefreshRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_RefreshRequest.DiscardUnknown(m)
}

var xxx_messageInfo_RefreshRequest proto.InternalMessageInfo

func (m *RefreshRequest) GetIndexName() string {
	if m != nil {
		return m.IndexName
	}
	return ""
}

type RefreshResponse struct {
	RefreshTimeMS        float64  `protobuf:"fixed64,1,opt,name=refreshTimeMS,proto3" json:"refreshTimeMS,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *RefreshResponse) Reset()         { *m = RefreshResponse{} }
func (m *RefreshResponse) String() string { return proto.CompactTextString(m) }
func (*RefreshResponse) ProtoMessage()    {}
func (*RefreshResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_2c07125fba14e737, []int{14}
}

func (m *RefreshResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RefreshResponse.Unmarshal(m, b)
}
func (m *RefreshResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RefreshResponse.Marshal(b, m, deterministic)
}
func (m *RefreshResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RefreshResponse.Merge(m, src)
}
func (m *RefreshResponse) XXX_Size() int {
	return xxx_messageInfo_RefreshResponse.Size(m)
}
func (m *RefreshResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_RefreshResponse.DiscardUnknown(m)
}

var xxx_messageInfo_RefreshResponse proto.InternalMessageInfo

func (m *RefreshResponse) GetRefreshTimeMS() float64 {
	if m != nil {
		return m.RefreshTimeMS
	}
	return 0
}

type CommitRequest struct {
	IndexName            string   `protobuf:"bytes,1,opt,name=indexName,proto3" json:"indexName,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CommitRequest) Reset()         { *m = CommitRequest{} }
func (m *CommitRequest) String() string { return proto.CompactTextString(m) }
func (*CommitRequest) ProtoMessage()    {}
func (*CommitRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_2c07125fba14e737, []int{15}
}

func (m *CommitRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CommitRequest.Unmarshal(m, b)
}
func (m *CommitRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CommitRequest.Marshal(b, m, deterministic)
}
func (m *CommitRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CommitRequest.Merge(m, src)
}
func (m *CommitRequest) XXX_Size() int {
	return xxx_messageInfo_CommitRequest.Size(m)
}
func (m *CommitRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_CommitRequest.DiscardUnknown(m)
}

var xxx_messageInfo_CommitRequest proto.InternalMessageInfo

func (m *CommitRequest) GetIndexName() string {
	if m != nil {
		return m.IndexName
	}
	return ""
}

type CommitResponse struct {
	//  sequence number of the last operation in the commit.  All sequence numbers less than this value
	//will be reflected in the commit, and all others will not.
	Gen                  int64    `protobuf:"varint,1,opt,name=gen,proto3" json:"gen,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CommitResponse) Reset()         { *m = CommitResponse{} }
func (m *CommitResponse) String() string { return proto.CompactTextString(m) }
func (*CommitResponse) ProtoMessage()    {}
func (*CommitResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_2c07125fba14e737, []int{16}
}

func (m *CommitResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CommitResponse.Unmarshal(m, b)
}
func (m *CommitResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CommitResponse.Marshal(b, m, deterministic)
}
func (m *CommitResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CommitResponse.Merge(m, src)
}
func (m *CommitResponse) XXX_Size() int {
	return xxx_messageInfo_CommitResponse.Size(m)
}
func (m *CommitResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_CommitResponse.DiscardUnknown(m)
}

var xxx_messageInfo_CommitResponse proto.InternalMessageInfo

func (m *CommitResponse) GetGen() int64 {
	if m != nil {
		return m.Gen
	}
	return 0
}

type StatsRequest struct {
	IndexName            string   `protobuf:"bytes,1,opt,name=indexName,proto3" json:"indexName,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *StatsRequest) Reset()         { *m = StatsRequest{} }
func (m *StatsRequest) String() string { return proto.CompactTextString(m) }
func (*StatsRequest) ProtoMessage()    {}
func (*StatsRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_2c07125fba14e737, []int{17}
}

func (m *StatsRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_StatsRequest.Unmarshal(m, b)
}
func (m *StatsRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_StatsRequest.Marshal(b, m, deterministic)
}
func (m *StatsRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_StatsRequest.Merge(m, src)
}
func (m *StatsRequest) XXX_Size() int {
	return xxx_messageInfo_StatsRequest.Size(m)
}
func (m *StatsRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_StatsRequest.DiscardUnknown(m)
}

var xxx_messageInfo_StatsRequest proto.InternalMessageInfo

func (m *StatsRequest) GetIndexName() string {
	if m != nil {
		return m.IndexName
	}
	return ""
}

type StatsResponse struct {
	Ord int32 `protobuf:"varint,1,opt,name=ord,proto3" json:"ord,omitempty"`
	// The total number of docs in this index, including docs not yet flushed (still in the RAM buffer),
	//not counting deletions.
	MaxDoc int32 `protobuf:"varint,2,opt,name=maxDoc,proto3" json:"maxDoc,omitempty"`
	//*
	// The total number of docs in this index, including
	// docs not yet flushed (still in the RAM buffer), and
	// including deletions. NOTE: buffered deletions
	// are not counted.  If you really need these to be
	// counted you should call {@link IndexWriter#commit()} first.
	NumDocs              int32       `protobuf:"varint,3,opt,name=numDocs,proto3" json:"numDocs,omitempty"`
	DirSize              int64       `protobuf:"varint,4,opt,name=dirSize,proto3" json:"dirSize,omitempty"`
	State                string      `protobuf:"bytes,5,opt,name=state,proto3" json:"state,omitempty"`
	Taxonomy             *Taxonomy   `protobuf:"bytes,6,opt,name=taxonomy,proto3" json:"taxonomy,omitempty"`
	Searchers            []*Searcher `protobuf:"bytes,7,rep,name=searchers,proto3" json:"searchers,omitempty"`
	CurrentSearcher      *Searcher   `protobuf:"bytes,8,opt,name=currentSearcher,proto3" json:"currentSearcher,omitempty"`
	XXX_NoUnkeyedLiteral struct{}    `json:"-"`
	XXX_unrecognized     []byte      `json:"-"`
	XXX_sizecache        int32       `json:"-"`
}

func (m *StatsResponse) Reset()         { *m = StatsResponse{} }
func (m *StatsResponse) String() string { return proto.CompactTextString(m) }
func (*StatsResponse) ProtoMessage()    {}
func (*StatsResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_2c07125fba14e737, []int{18}
}

func (m *StatsResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_StatsResponse.Unmarshal(m, b)
}
func (m *StatsResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_StatsResponse.Marshal(b, m, deterministic)
}
func (m *StatsResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_StatsResponse.Merge(m, src)
}
func (m *StatsResponse) XXX_Size() int {
	return xxx_messageInfo_StatsResponse.Size(m)
}
func (m *StatsResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_StatsResponse.DiscardUnknown(m)
}

var xxx_messageInfo_StatsResponse proto.InternalMessageInfo

func (m *StatsResponse) GetOrd() int32 {
	if m != nil {
		return m.Ord
	}
	return 0
}

func (m *StatsResponse) GetMaxDoc() int32 {
	if m != nil {
		return m.MaxDoc
	}
	return 0
}

func (m *StatsResponse) GetNumDocs() int32 {
	if m != nil {
		return m.NumDocs
	}
	return 0
}

func (m *StatsResponse) GetDirSize() int64 {
	if m != nil {
		return m.DirSize
	}
	return 0
}

func (m *StatsResponse) GetState() string {
	if m != nil {
		return m.State
	}
	return ""
}

func (m *StatsResponse) GetTaxonomy() *Taxonomy {
	if m != nil {
		return m.Taxonomy
	}
	return nil
}

func (m *StatsResponse) GetSearchers() []*Searcher {
	if m != nil {
		return m.Searchers
	}
	return nil
}

func (m *StatsResponse) GetCurrentSearcher() *Searcher {
	if m != nil {
		return m.CurrentSearcher
	}
	return nil
}

type Taxonomy struct {
	NumOrds              int32    `protobuf:"varint,1,opt,name=numOrds,proto3" json:"numOrds,omitempty"`
	Segments             string   `protobuf:"bytes,2,opt,name=segments,proto3" json:"segments,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Taxonomy) Reset()         { *m = Taxonomy{} }
func (m *Taxonomy) String() string { return proto.CompactTextString(m) }
func (*Taxonomy) ProtoMessage()    {}
func (*Taxonomy) Descriptor() ([]byte, []int) {
	return fileDescriptor_2c07125fba14e737, []int{19}
}

func (m *Taxonomy) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Taxonomy.Unmarshal(m, b)
}
func (m *Taxonomy) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Taxonomy.Marshal(b, m, deterministic)
}
func (m *Taxonomy) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Taxonomy.Merge(m, src)
}
func (m *Taxonomy) XXX_Size() int {
	return xxx_messageInfo_Taxonomy.Size(m)
}
func (m *Taxonomy) XXX_DiscardUnknown() {
	xxx_messageInfo_Taxonomy.DiscardUnknown(m)
}

var xxx_messageInfo_Taxonomy proto.InternalMessageInfo

func (m *Taxonomy) GetNumOrds() int32 {
	if m != nil {
		return m.NumOrds
	}
	return 0
}

func (m *Taxonomy) GetSegments() string {
	if m != nil {
		return m.Segments
	}
	return ""
}

type Searcher struct {
	// the version recorded in the commit that the reader opened.
	//This version is advanced every time a change is made with IndexWriter.
	Version              int64    `protobuf:"varint,1,opt,name=version,proto3" json:"version,omitempty"`
	NumDocs              int32    `protobuf:"varint,2,opt,name=numDocs,proto3" json:"numDocs,omitempty"`
	Segments             string   `protobuf:"bytes,3,opt,name=segments,proto3" json:"segments,omitempty"`
	StaleAgeSeconds      float64  `protobuf:"fixed64,4,opt,name=staleAgeSeconds,proto3" json:"staleAgeSeconds,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Searcher) Reset()         { *m = Searcher{} }
func (m *Searcher) String() string { return proto.CompactTextString(m) }
func (*Searcher) ProtoMessage()    {}
func (*Searcher) Descriptor() ([]byte, []int) {
	return fileDescriptor_2c07125fba14e737, []int{20}
}

func (m *Searcher) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Searcher.Unmarshal(m, b)
}
func (m *Searcher) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Searcher.Marshal(b, m, deterministic)
}
func (m *Searcher) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Searcher.Merge(m, src)
}
func (m *Searcher) XXX_Size() int {
	return xxx_messageInfo_Searcher.Size(m)
}
func (m *Searcher) XXX_DiscardUnknown() {
	xxx_messageInfo_Searcher.DiscardUnknown(m)
}

var xxx_messageInfo_Searcher proto.InternalMessageInfo

func (m *Searcher) GetVersion() int64 {
	if m != nil {
		return m.Version
	}
	return 0
}

func (m *Searcher) GetNumDocs() int32 {
	if m != nil {
		return m.NumDocs
	}
	return 0
}

func (m *Searcher) GetSegments() string {
	if m != nil {
		return m.Segments
	}
	return ""
}

func (m *Searcher) GetStaleAgeSeconds() float64 {
	if m != nil {
		return m.StaleAgeSeconds
	}
	return 0
}

type DeleteAllDocumentsRequest struct {
	IndexName            string   `protobuf:"bytes,1,opt,name=indexName,proto3" json:"indexName,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DeleteAllDocumentsRequest) Reset()         { *m = DeleteAllDocumentsRequest{} }
func (m *DeleteAllDocumentsRequest) String() string { return proto.CompactTextString(m) }
func (*DeleteAllDocumentsRequest) ProtoMessage()    {}
func (*DeleteAllDocumentsRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_2c07125fba14e737, []int{21}
}

func (m *DeleteAllDocumentsRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DeleteAllDocumentsRequest.Unmarshal(m, b)
}
func (m *DeleteAllDocumentsRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DeleteAllDocumentsRequest.Marshal(b, m, deterministic)
}
func (m *DeleteAllDocumentsRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DeleteAllDocumentsRequest.Merge(m, src)
}
func (m *DeleteAllDocumentsRequest) XXX_Size() int {
	return xxx_messageInfo_DeleteAllDocumentsRequest.Size(m)
}
func (m *DeleteAllDocumentsRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_DeleteAllDocumentsRequest.DiscardUnknown(m)
}

var xxx_messageInfo_DeleteAllDocumentsRequest proto.InternalMessageInfo

func (m *DeleteAllDocumentsRequest) GetIndexName() string {
	if m != nil {
		return m.IndexName
	}
	return ""
}

type DeleteAllDocumentsResponse struct {
	GenId                string   `protobuf:"bytes,1,opt,name=genId,proto3" json:"genId,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DeleteAllDocumentsResponse) Reset()         { *m = DeleteAllDocumentsResponse{} }
func (m *DeleteAllDocumentsResponse) String() string { return proto.CompactTextString(m) }
func (*DeleteAllDocumentsResponse) ProtoMessage()    {}
func (*DeleteAllDocumentsResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_2c07125fba14e737, []int{22}
}

func (m *DeleteAllDocumentsResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DeleteAllDocumentsResponse.Unmarshal(m, b)
}
func (m *DeleteAllDocumentsResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DeleteAllDocumentsResponse.Marshal(b, m, deterministic)
}
func (m *DeleteAllDocumentsResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DeleteAllDocumentsResponse.Merge(m, src)
}
func (m *DeleteAllDocumentsResponse) XXX_Size() int {
	return xxx_messageInfo_DeleteAllDocumentsResponse.Size(m)
}
func (m *DeleteAllDocumentsResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_DeleteAllDocumentsResponse.DiscardUnknown(m)
}

var xxx_messageInfo_DeleteAllDocumentsResponse proto.InternalMessageInfo

func (m *DeleteAllDocumentsResponse) GetGenId() string {
	if m != nil {
		return m.GenId
	}
	return ""
}

type DeleteIndexRequest struct {
	IndexName            string   `protobuf:"bytes,1,opt,name=indexName,proto3" json:"indexName,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DeleteIndexRequest) Reset()         { *m = DeleteIndexRequest{} }
func (m *DeleteIndexRequest) String() string { return proto.CompactTextString(m) }
func (*DeleteIndexRequest) ProtoMessage()    {}
func (*DeleteIndexRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_2c07125fba14e737, []int{23}
}

func (m *DeleteIndexRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DeleteIndexRequest.Unmarshal(m, b)
}
func (m *DeleteIndexRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DeleteIndexRequest.Marshal(b, m, deterministic)
}
func (m *DeleteIndexRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DeleteIndexRequest.Merge(m, src)
}
func (m *DeleteIndexRequest) XXX_Size() int {
	return xxx_messageInfo_DeleteIndexRequest.Size(m)
}
func (m *DeleteIndexRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_DeleteIndexRequest.DiscardUnknown(m)
}

var xxx_messageInfo_DeleteIndexRequest proto.InternalMessageInfo

func (m *DeleteIndexRequest) GetIndexName() string {
	if m != nil {
		return m.IndexName
	}
	return ""
}

type DeleteIndexResponse struct {
	Ok                   string   `protobuf:"bytes,1,opt,name=ok,proto3" json:"ok,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DeleteIndexResponse) Reset()         { *m = DeleteIndexResponse{} }
func (m *DeleteIndexResponse) String() string { return proto.CompactTextString(m) }
func (*DeleteIndexResponse) ProtoMessage()    {}
func (*DeleteIndexResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_2c07125fba14e737, []int{24}
}

func (m *DeleteIndexResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DeleteIndexResponse.Unmarshal(m, b)
}
func (m *DeleteIndexResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DeleteIndexResponse.Marshal(b, m, deterministic)
}
func (m *DeleteIndexResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DeleteIndexResponse.Merge(m, src)
}
func (m *DeleteIndexResponse) XXX_Size() int {
	return xxx_messageInfo_DeleteIndexResponse.Size(m)
}
func (m *DeleteIndexResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_DeleteIndexResponse.DiscardUnknown(m)
}

var xxx_messageInfo_DeleteIndexResponse proto.InternalMessageInfo

func (m *DeleteIndexResponse) GetOk() string {
	if m != nil {
		return m.Ok
	}
	return ""
}

type DummyResponse struct {
	Ok                   string   `protobuf:"bytes,1,opt,name=ok,proto3" json:"ok,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DummyResponse) Reset()         { *m = DummyResponse{} }
func (m *DummyResponse) String() string { return proto.CompactTextString(m) }
func (*DummyResponse) ProtoMessage()    {}
func (*DummyResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_2c07125fba14e737, []int{25}
}

func (m *DummyResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DummyResponse.Unmarshal(m, b)
}
func (m *DummyResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DummyResponse.Marshal(b, m, deterministic)
}
func (m *DummyResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DummyResponse.Merge(m, src)
}
func (m *DummyResponse) XXX_Size() int {
	return xxx_messageInfo_DummyResponse.Size(m)
}
func (m *DummyResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_DummyResponse.DiscardUnknown(m)
}

var xxx_messageInfo_DummyResponse proto.InternalMessageInfo

func (m *DummyResponse) GetOk() string {
	if m != nil {
		return m.Ok
	}
	return ""
}

type StopIndexRequest struct {
	IndexName            string   `protobuf:"bytes,1,opt,name=indexName,proto3" json:"indexName,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *StopIndexRequest) Reset()         { *m = StopIndexRequest{} }
func (m *StopIndexRequest) String() string { return proto.CompactTextString(m) }
func (*StopIndexRequest) ProtoMessage()    {}
func (*StopIndexRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_2c07125fba14e737, []int{26}
}

func (m *StopIndexRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_StopIndexRequest.Unmarshal(m, b)
}
func (m *StopIndexRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_StopIndexRequest.Marshal(b, m, deterministic)
}
func (m *StopIndexRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_StopIndexRequest.Merge(m, src)
}
func (m *StopIndexRequest) XXX_Size() int {
	return xxx_messageInfo_StopIndexRequest.Size(m)
}
func (m *StopIndexRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_StopIndexRequest.DiscardUnknown(m)
}

var xxx_messageInfo_StopIndexRequest proto.InternalMessageInfo

func (m *StopIndexRequest) GetIndexName() string {
	if m != nil {
		return m.IndexName
	}
	return ""
}

type BuildSuggestRequest struct {
	IndexName string `protobuf:"bytes,1,opt,name=indexName,proto3" json:"indexName,omitempty"`
	// Types that are valid to be assigned to Suggester:
	//	*BuildSuggestRequest_InfixSuggester
	//	*BuildSuggestRequest_AnalyzingSuggester
	//	*BuildSuggestRequest_FuzzySuggester
	Suggester isBuildSuggestRequest_Suggester `protobuf_oneof:"Suggester"`
	// Types that are valid to be assigned to Source:
	//	*BuildSuggestRequest_LocalSource
	//	*BuildSuggestRequest_NonLocalSource
	Source               isBuildSuggestRequest_Source `protobuf_oneof:"Source"`
	SuggestName          string                       `protobuf:"bytes,7,opt,name=suggestName,proto3" json:"suggestName,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                     `json:"-"`
	XXX_unrecognized     []byte                       `json:"-"`
	XXX_sizecache        int32                        `json:"-"`
}

func (m *BuildSuggestRequest) Reset()         { *m = BuildSuggestRequest{} }
func (m *BuildSuggestRequest) String() string { return proto.CompactTextString(m) }
func (*BuildSuggestRequest) ProtoMessage()    {}
func (*BuildSuggestRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_2c07125fba14e737, []int{27}
}

func (m *BuildSuggestRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_BuildSuggestRequest.Unmarshal(m, b)
}
func (m *BuildSuggestRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_BuildSuggestRequest.Marshal(b, m, deterministic)
}
func (m *BuildSuggestRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_BuildSuggestRequest.Merge(m, src)
}
func (m *BuildSuggestRequest) XXX_Size() int {
	return xxx_messageInfo_BuildSuggestRequest.Size(m)
}
func (m *BuildSuggestRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_BuildSuggestRequest.DiscardUnknown(m)
}

var xxx_messageInfo_BuildSuggestRequest proto.InternalMessageInfo

func (m *BuildSuggestRequest) GetIndexName() string {
	if m != nil {
		return m.IndexName
	}
	return ""
}

type isBuildSuggestRequest_Suggester interface {
	isBuildSuggestRequest_Suggester()
}

type BuildSuggestRequest_InfixSuggester struct {
	InfixSuggester *InfixSuggester `protobuf:"bytes,2,opt,name=infixSuggester,proto3,oneof"`
}

type BuildSuggestRequest_AnalyzingSuggester struct {
	AnalyzingSuggester *AnalyzingSuggester `protobuf:"bytes,3,opt,name=analyzingSuggester,proto3,oneof"`
}

type BuildSuggestRequest_FuzzySuggester struct {
	FuzzySuggester *FuzzySuggester `protobuf:"bytes,4,opt,name=fuzzySuggester,proto3,oneof"`
}

func (*BuildSuggestRequest_InfixSuggester) isBuildSuggestRequest_Suggester() {}

func (*BuildSuggestRequest_AnalyzingSuggester) isBuildSuggestRequest_Suggester() {}

func (*BuildSuggestRequest_FuzzySuggester) isBuildSuggestRequest_Suggester() {}

func (m *BuildSuggestRequest) GetSuggester() isBuildSuggestRequest_Suggester {
	if m != nil {
		return m.Suggester
	}
	return nil
}

func (m *BuildSuggestRequest) GetInfixSuggester() *InfixSuggester {
	if x, ok := m.GetSuggester().(*BuildSuggestRequest_InfixSuggester); ok {
		return x.InfixSuggester
	}
	return nil
}

func (m *BuildSuggestRequest) GetAnalyzingSuggester() *AnalyzingSuggester {
	if x, ok := m.GetSuggester().(*BuildSuggestRequest_AnalyzingSuggester); ok {
		return x.AnalyzingSuggester
	}
	return nil
}

func (m *BuildSuggestRequest) GetFuzzySuggester() *FuzzySuggester {
	if x, ok := m.GetSuggester().(*BuildSuggestRequest_FuzzySuggester); ok {
		return x.FuzzySuggester
	}
	return nil
}

type isBuildSuggestRequest_Source interface {
	isBuildSuggestRequest_Source()
}

type BuildSuggestRequest_LocalSource struct {
	LocalSource *SuggestLocalSource `protobuf:"bytes,5,opt,name=localSource,proto3,oneof"`
}

type BuildSuggestRequest_NonLocalSource struct {
	NonLocalSource *SuggestNonLocalSource `protobuf:"bytes,6,opt,name=nonLocalSource,proto3,oneof"`
}

func (*BuildSuggestRequest_LocalSource) isBuildSuggestRequest_Source() {}

func (*BuildSuggestRequest_NonLocalSource) isBuildSuggestRequest_Source() {}

func (m *BuildSuggestRequest) GetSource() isBuildSuggestRequest_Source {
	if m != nil {
		return m.Source
	}
	return nil
}

func (m *BuildSuggestRequest) GetLocalSource() *SuggestLocalSource {
	if x, ok := m.GetSource().(*BuildSuggestRequest_LocalSource); ok {
		return x.LocalSource
	}
	return nil
}

func (m *BuildSuggestRequest) GetNonLocalSource() *SuggestNonLocalSource {
	if x, ok := m.GetSource().(*BuildSuggestRequest_NonLocalSource); ok {
		return x.NonLocalSource
	}
	return nil
}

func (m *BuildSuggestRequest) GetSuggestName() string {
	if m != nil {
		return m.SuggestName
	}
	return ""
}

// XXX_OneofWrappers is for the internal use of the proto package.
func (*BuildSuggestRequest) XXX_OneofWrappers() []interface{} {
	return []interface{}{
		(*BuildSuggestRequest_InfixSuggester)(nil),
		(*BuildSuggestRequest_AnalyzingSuggester)(nil),
		(*BuildSuggestRequest_FuzzySuggester)(nil),
		(*BuildSuggestRequest_LocalSource)(nil),
		(*BuildSuggestRequest_NonLocalSource)(nil),
	}
}

type BuildSuggestResponse struct {
	SizeInBytes          int64    `protobuf:"varint,1,opt,name=sizeInBytes,proto3" json:"sizeInBytes,omitempty"`
	Count                int64    `protobuf:"varint,2,opt,name=count,proto3" json:"count,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *BuildSuggestResponse) Reset()         { *m = BuildSuggestResponse{} }
func (m *BuildSuggestResponse) String() string { return proto.CompactTextString(m) }
func (*BuildSuggestResponse) ProtoMessage()    {}
func (*BuildSuggestResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_2c07125fba14e737, []int{28}
}

func (m *BuildSuggestResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_BuildSuggestResponse.Unmarshal(m, b)
}
func (m *BuildSuggestResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_BuildSuggestResponse.Marshal(b, m, deterministic)
}
func (m *BuildSuggestResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_BuildSuggestResponse.Merge(m, src)
}
func (m *BuildSuggestResponse) XXX_Size() int {
	return xxx_messageInfo_BuildSuggestResponse.Size(m)
}
func (m *BuildSuggestResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_BuildSuggestResponse.DiscardUnknown(m)
}

var xxx_messageInfo_BuildSuggestResponse proto.InternalMessageInfo

func (m *BuildSuggestResponse) GetSizeInBytes() int64 {
	if m != nil {
		return m.SizeInBytes
	}
	return 0
}

func (m *BuildSuggestResponse) GetCount() int64 {
	if m != nil {
		return m.Count
	}
	return 0
}

type SuggestLookupRequest struct {
	IndexName            string   `protobuf:"bytes,1,opt,name=indexName,proto3" json:"indexName,omitempty"`
	SuggestName          string   `protobuf:"bytes,2,opt,name=suggestName,proto3" json:"suggestName,omitempty"`
	Text                 string   `protobuf:"bytes,3,opt,name=text,proto3" json:"text,omitempty"`
	Highlight            bool     `protobuf:"varint,4,opt,name=highlight,proto3" json:"highlight,omitempty"`
	AllTermsRequired     bool     `protobuf:"varint,5,opt,name=allTermsRequired,proto3" json:"allTermsRequired,omitempty"`
	Contexts             []string `protobuf:"bytes,6,rep,name=contexts,proto3" json:"contexts,omitempty"`
	Count                int32    `protobuf:"varint,7,opt,name=count,proto3" json:"count,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SuggestLookupRequest) Reset()         { *m = SuggestLookupRequest{} }
func (m *SuggestLookupRequest) String() string { return proto.CompactTextString(m) }
func (*SuggestLookupRequest) ProtoMessage()    {}
func (*SuggestLookupRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_2c07125fba14e737, []int{29}
}

func (m *SuggestLookupRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SuggestLookupRequest.Unmarshal(m, b)
}
func (m *SuggestLookupRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SuggestLookupRequest.Marshal(b, m, deterministic)
}
func (m *SuggestLookupRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SuggestLookupRequest.Merge(m, src)
}
func (m *SuggestLookupRequest) XXX_Size() int {
	return xxx_messageInfo_SuggestLookupRequest.Size(m)
}
func (m *SuggestLookupRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_SuggestLookupRequest.DiscardUnknown(m)
}

var xxx_messageInfo_SuggestLookupRequest proto.InternalMessageInfo

func (m *SuggestLookupRequest) GetIndexName() string {
	if m != nil {
		return m.IndexName
	}
	return ""
}

func (m *SuggestLookupRequest) GetSuggestName() string {
	if m != nil {
		return m.SuggestName
	}
	return ""
}

func (m *SuggestLookupRequest) GetText() string {
	if m != nil {
		return m.Text
	}
	return ""
}

func (m *SuggestLookupRequest) GetHighlight() bool {
	if m != nil {
		return m.Highlight
	}
	return false
}

func (m *SuggestLookupRequest) GetAllTermsRequired() bool {
	if m != nil {
		return m.AllTermsRequired
	}
	return false
}

func (m *SuggestLookupRequest) GetContexts() []string {
	if m != nil {
		return m.Contexts
	}
	return nil
}

func (m *SuggestLookupRequest) GetCount() int32 {
	if m != nil {
		return m.Count
	}
	return 0
}

type SuggestLookupResponse struct {
	Results              []*OneSuggestLookupResponse `protobuf:"bytes,1,rep,name=results,proto3" json:"results,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                    `json:"-"`
	XXX_unrecognized     []byte                      `json:"-"`
	XXX_sizecache        int32                       `json:"-"`
}

func (m *SuggestLookupResponse) Reset()         { *m = SuggestLookupResponse{} }
func (m *SuggestLookupResponse) String() string { return proto.CompactTextString(m) }
func (*SuggestLookupResponse) ProtoMessage()    {}
func (*SuggestLookupResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_2c07125fba14e737, []int{30}
}

func (m *SuggestLookupResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SuggestLookupResponse.Unmarshal(m, b)
}
func (m *SuggestLookupResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SuggestLookupResponse.Marshal(b, m, deterministic)
}
func (m *SuggestLookupResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SuggestLookupResponse.Merge(m, src)
}
func (m *SuggestLookupResponse) XXX_Size() int {
	return xxx_messageInfo_SuggestLookupResponse.Size(m)
}
func (m *SuggestLookupResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_SuggestLookupResponse.DiscardUnknown(m)
}

var xxx_messageInfo_SuggestLookupResponse proto.InternalMessageInfo

func (m *SuggestLookupResponse) GetResults() []*OneSuggestLookupResponse {
	if m != nil {
		return m.Results
	}
	return nil
}

type OneSuggestLookupResponse struct {
	// Types that are valid to be assigned to HighlightKey:
	//	*OneSuggestLookupResponse_SuggestLookupHighlight
	//	*OneSuggestLookupResponse_Key
	HighlightKey         isOneSuggestLookupResponse_HighlightKey `protobuf_oneof:"HighlightKey"`
	Weight               int64                                   `protobuf:"varint,3,opt,name=weight,proto3" json:"weight,omitempty"`
	Payload              string                                  `protobuf:"bytes,4,opt,name=payload,proto3" json:"payload,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                                `json:"-"`
	XXX_unrecognized     []byte                                  `json:"-"`
	XXX_sizecache        int32                                   `json:"-"`
}

func (m *OneSuggestLookupResponse) Reset()         { *m = OneSuggestLookupResponse{} }
func (m *OneSuggestLookupResponse) String() string { return proto.CompactTextString(m) }
func (*OneSuggestLookupResponse) ProtoMessage()    {}
func (*OneSuggestLookupResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_2c07125fba14e737, []int{31}
}

func (m *OneSuggestLookupResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_OneSuggestLookupResponse.Unmarshal(m, b)
}
func (m *OneSuggestLookupResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_OneSuggestLookupResponse.Marshal(b, m, deterministic)
}
func (m *OneSuggestLookupResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_OneSuggestLookupResponse.Merge(m, src)
}
func (m *OneSuggestLookupResponse) XXX_Size() int {
	return xxx_messageInfo_OneSuggestLookupResponse.Size(m)
}
func (m *OneSuggestLookupResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_OneSuggestLookupResponse.DiscardUnknown(m)
}

var xxx_messageInfo_OneSuggestLookupResponse proto.InternalMessageInfo

type isOneSuggestLookupResponse_HighlightKey interface {
	isOneSuggestLookupResponse_HighlightKey()
}

type OneSuggestLookupResponse_SuggestLookupHighlight struct {
	SuggestLookupHighlight *SuggestLookupHighlight `protobuf:"bytes,1,opt,name=suggestLookupHighlight,proto3,oneof"`
}

type OneSuggestLookupResponse_Key struct {
	Key string `protobuf:"bytes,2,opt,name=key,proto3,oneof"`
}

func (*OneSuggestLookupResponse_SuggestLookupHighlight) isOneSuggestLookupResponse_HighlightKey() {}

func (*OneSuggestLookupResponse_Key) isOneSuggestLookupResponse_HighlightKey() {}

func (m *OneSuggestLookupResponse) GetHighlightKey() isOneSuggestLookupResponse_HighlightKey {
	if m != nil {
		return m.HighlightKey
	}
	return nil
}

func (m *OneSuggestLookupResponse) GetSuggestLookupHighlight() *SuggestLookupHighlight {
	if x, ok := m.GetHighlightKey().(*OneSuggestLookupResponse_SuggestLookupHighlight); ok {
		return x.SuggestLookupHighlight
	}
	return nil
}

func (m *OneSuggestLookupResponse) GetKey() string {
	if x, ok := m.GetHighlightKey().(*OneSuggestLookupResponse_Key); ok {
		return x.Key
	}
	return ""
}

func (m *OneSuggestLookupResponse) GetWeight() int64 {
	if m != nil {
		return m.Weight
	}
	return 0
}

func (m *OneSuggestLookupResponse) GetPayload() string {
	if m != nil {
		return m.Payload
	}
	return ""
}

// XXX_OneofWrappers is for the internal use of the proto package.
func (*OneSuggestLookupResponse) XXX_OneofWrappers() []interface{} {
	return []interface{}{
		(*OneSuggestLookupResponse_SuggestLookupHighlight)(nil),
		(*OneSuggestLookupResponse_Key)(nil),
	}
}

type SuggestLookupHighlight struct {
	OneHighlight         []*OneHighlight `protobuf:"bytes,1,rep,name=oneHighlight,proto3" json:"oneHighlight,omitempty"`
	XXX_NoUnkeyedLiteral struct{}        `json:"-"`
	XXX_unrecognized     []byte          `json:"-"`
	XXX_sizecache        int32           `json:"-"`
}

func (m *SuggestLookupHighlight) Reset()         { *m = SuggestLookupHighlight{} }
func (m *SuggestLookupHighlight) String() string { return proto.CompactTextString(m) }
func (*SuggestLookupHighlight) ProtoMessage()    {}
func (*SuggestLookupHighlight) Descriptor() ([]byte, []int) {
	return fileDescriptor_2c07125fba14e737, []int{32}
}

func (m *SuggestLookupHighlight) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SuggestLookupHighlight.Unmarshal(m, b)
}
func (m *SuggestLookupHighlight) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SuggestLookupHighlight.Marshal(b, m, deterministic)
}
func (m *SuggestLookupHighlight) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SuggestLookupHighlight.Merge(m, src)
}
func (m *SuggestLookupHighlight) XXX_Size() int {
	return xxx_messageInfo_SuggestLookupHighlight.Size(m)
}
func (m *SuggestLookupHighlight) XXX_DiscardUnknown() {
	xxx_messageInfo_SuggestLookupHighlight.DiscardUnknown(m)
}

var xxx_messageInfo_SuggestLookupHighlight proto.InternalMessageInfo

func (m *SuggestLookupHighlight) GetOneHighlight() []*OneHighlight {
	if m != nil {
		return m.OneHighlight
	}
	return nil
}

type OneHighlight struct {
	IsHit                bool     `protobuf:"varint,1,opt,name=isHit,proto3" json:"isHit,omitempty"`
	Text                 string   `protobuf:"bytes,2,opt,name=text,proto3" json:"text,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *OneHighlight) Reset()         { *m = OneHighlight{} }
func (m *OneHighlight) String() string { return proto.CompactTextString(m) }
func (*OneHighlight) ProtoMessage()    {}
func (*OneHighlight) Descriptor() ([]byte, []int) {
	return fileDescriptor_2c07125fba14e737, []int{33}
}

func (m *OneHighlight) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_OneHighlight.Unmarshal(m, b)
}
func (m *OneHighlight) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_OneHighlight.Marshal(b, m, deterministic)
}
func (m *OneHighlight) XXX_Merge(src proto.Message) {
	xxx_messageInfo_OneHighlight.Merge(m, src)
}
func (m *OneHighlight) XXX_Size() int {
	return xxx_messageInfo_OneHighlight.Size(m)
}
func (m *OneHighlight) XXX_DiscardUnknown() {
	xxx_messageInfo_OneHighlight.DiscardUnknown(m)
}

var xxx_messageInfo_OneHighlight proto.InternalMessageInfo

func (m *OneHighlight) GetIsHit() bool {
	if m != nil {
		return m.IsHit
	}
	return false
}

func (m *OneHighlight) GetText() string {
	if m != nil {
		return m.Text
	}
	return ""
}

type SuggestLocalSource struct {
	// Local file (to the server) to read suggestions + weights from; format is weight U+001F suggestion U+001F payload,
	//one per line, with suggestion UTF-8 encoded. If this option is used then searcher, suggestField,
	//weightField/Expression, payloadField should not be specified.
	LocalFile            string   `protobuf:"bytes,1,opt,name=localFile,proto3" json:"localFile,omitempty"`
	HasContexts          bool     `protobuf:"varint,2,opt,name=hasContexts,proto3" json:"hasContexts,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SuggestLocalSource) Reset()         { *m = SuggestLocalSource{} }
func (m *SuggestLocalSource) String() string { return proto.CompactTextString(m) }
func (*SuggestLocalSource) ProtoMessage()    {}
func (*SuggestLocalSource) Descriptor() ([]byte, []int) {
	return fileDescriptor_2c07125fba14e737, []int{34}
}

func (m *SuggestLocalSource) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SuggestLocalSource.Unmarshal(m, b)
}
func (m *SuggestLocalSource) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SuggestLocalSource.Marshal(b, m, deterministic)
}
func (m *SuggestLocalSource) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SuggestLocalSource.Merge(m, src)
}
func (m *SuggestLocalSource) XXX_Size() int {
	return xxx_messageInfo_SuggestLocalSource.Size(m)
}
func (m *SuggestLocalSource) XXX_DiscardUnknown() {
	xxx_messageInfo_SuggestLocalSource.DiscardUnknown(m)
}

var xxx_messageInfo_SuggestLocalSource proto.InternalMessageInfo

func (m *SuggestLocalSource) GetLocalFile() string {
	if m != nil {
		return m.LocalFile
	}
	return ""
}

func (m *SuggestLocalSource) GetHasContexts() bool {
	if m != nil {
		return m.HasContexts
	}
	return false
}

type SuggestNonLocalSource struct {
	// Specific searcher version to use for pull suggestions to build.  There are three different ways to specify a searcher version.
	//
	// Types that are valid to be assigned to Searcher:
	//	*SuggestNonLocalSource_IndexGen
	//	*SuggestNonLocalSource_Version
	//	*SuggestNonLocalSource_Snapshot
	Searcher     isSuggestNonLocalSource_Searcher `protobuf_oneof:"Searcher"`
	SuggestField string                           `protobuf:"bytes,4,opt,name=suggestField,proto3" json:"suggestField,omitempty"`
	// Types that are valid to be assigned to Weight:
	//	*SuggestNonLocalSource_WeightField
	//	*SuggestNonLocalSource_WeightExpression
	Weight               isSuggestNonLocalSource_Weight `protobuf_oneof:"Weight"`
	PayloadField         string                         `protobuf:"bytes,7,opt,name=payloadField,proto3" json:"payloadField,omitempty"`
	ContextField         string                         `protobuf:"bytes,8,opt,name=contextField,proto3" json:"contextField,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                       `json:"-"`
	XXX_unrecognized     []byte                         `json:"-"`
	XXX_sizecache        int32                          `json:"-"`
}

func (m *SuggestNonLocalSource) Reset()         { *m = SuggestNonLocalSource{} }
func (m *SuggestNonLocalSource) String() string { return proto.CompactTextString(m) }
func (*SuggestNonLocalSource) ProtoMessage()    {}
func (*SuggestNonLocalSource) Descriptor() ([]byte, []int) {
	return fileDescriptor_2c07125fba14e737, []int{35}
}

func (m *SuggestNonLocalSource) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SuggestNonLocalSource.Unmarshal(m, b)
}
func (m *SuggestNonLocalSource) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SuggestNonLocalSource.Marshal(b, m, deterministic)
}
func (m *SuggestNonLocalSource) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SuggestNonLocalSource.Merge(m, src)
}
func (m *SuggestNonLocalSource) XXX_Size() int {
	return xxx_messageInfo_SuggestNonLocalSource.Size(m)
}
func (m *SuggestNonLocalSource) XXX_DiscardUnknown() {
	xxx_messageInfo_SuggestNonLocalSource.DiscardUnknown(m)
}

var xxx_messageInfo_SuggestNonLocalSource proto.InternalMessageInfo

type isSuggestNonLocalSource_Searcher interface {
	isSuggestNonLocalSource_Searcher()
}

type SuggestNonLocalSource_IndexGen struct {
	IndexGen int64 `protobuf:"varint,1,opt,name=indexGen,proto3,oneof"`
}

type SuggestNonLocalSource_Version struct {
	Version int64 `protobuf:"varint,2,opt,name=version,proto3,oneof"`
}

type SuggestNonLocalSource_Snapshot struct {
	Snapshot string `protobuf:"bytes,3,opt,name=snapshot,proto3,oneof"`
}

func (*SuggestNonLocalSource_IndexGen) isSuggestNonLocalSource_Searcher() {}

func (*SuggestNonLocalSource_Version) isSuggestNonLocalSource_Searcher() {}

func (*SuggestNonLocalSource_Snapshot) isSuggestNonLocalSource_Searcher() {}

func (m *SuggestNonLocalSource) GetSearcher() isSuggestNonLocalSource_Searcher {
	if m != nil {
		return m.Searcher
	}
	return nil
}

func (m *SuggestNonLocalSource) GetIndexGen() int64 {
	if x, ok := m.GetSearcher().(*SuggestNonLocalSource_IndexGen); ok {
		return x.IndexGen
	}
	return 0
}

func (m *SuggestNonLocalSource) GetVersion() int64 {
	if x, ok := m.GetSearcher().(*SuggestNonLocalSource_Version); ok {
		return x.Version
	}
	return 0
}

func (m *SuggestNonLocalSource) GetSnapshot() string {
	if x, ok := m.GetSearcher().(*SuggestNonLocalSource_Snapshot); ok {
		return x.Snapshot
	}
	return ""
}

func (m *SuggestNonLocalSource) GetSuggestField() string {
	if m != nil {
		return m.SuggestField
	}
	return ""
}

type isSuggestNonLocalSource_Weight interface {
	isSuggestNonLocalSource_Weight()
}

type SuggestNonLocalSource_WeightField struct {
	WeightField string `protobuf:"bytes,5,opt,name=weightField,proto3,oneof"`
}

type SuggestNonLocalSource_WeightExpression struct {
	WeightExpression string `protobuf:"bytes,6,opt,name=weightExpression,proto3,oneof"`
}

func (*SuggestNonLocalSource_WeightField) isSuggestNonLocalSource_Weight() {}

func (*SuggestNonLocalSource_WeightExpression) isSuggestNonLocalSource_Weight() {}

func (m *SuggestNonLocalSource) GetWeight() isSuggestNonLocalSource_Weight {
	if m != nil {
		return m.Weight
	}
	return nil
}

func (m *SuggestNonLocalSource) GetWeightField() string {
	if x, ok := m.GetWeight().(*SuggestNonLocalSource_WeightField); ok {
		return x.WeightField
	}
	return ""
}

func (m *SuggestNonLocalSource) GetWeightExpression() string {
	if x, ok := m.GetWeight().(*SuggestNonLocalSource_WeightExpression); ok {
		return x.WeightExpression
	}
	return ""
}

func (m *SuggestNonLocalSource) GetPayloadField() string {
	if m != nil {
		return m.PayloadField
	}
	return ""
}

func (m *SuggestNonLocalSource) GetContextField() string {
	if m != nil {
		return m.ContextField
	}
	return ""
}

// XXX_OneofWrappers is for the internal use of the proto package.
func (*SuggestNonLocalSource) XXX_OneofWrappers() []interface{} {
	return []interface{}{
		(*SuggestNonLocalSource_IndexGen)(nil),
		(*SuggestNonLocalSource_Version)(nil),
		(*SuggestNonLocalSource_Snapshot)(nil),
		(*SuggestNonLocalSource_WeightField)(nil),
		(*SuggestNonLocalSource_WeightExpression)(nil),
	}
}

// A suggester that matches terms anywhere in the input text, not just as a prefix. (see @lucene:org:server.InfixSuggester)
type InfixSuggester struct {
	Analyzer             string   `protobuf:"bytes,1,opt,name=analyzer,proto3" json:"analyzer,omitempty"`
	IndexAnalyzer        string   `protobuf:"bytes,2,opt,name=indexAnalyzer,proto3" json:"indexAnalyzer,omitempty"`
	QueryAnalyzer        string   `protobuf:"bytes,3,opt,name=queryAnalyzer,proto3" json:"queryAnalyzer,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *InfixSuggester) Reset()         { *m = InfixSuggester{} }
func (m *InfixSuggester) String() string { return proto.CompactTextString(m) }
func (*InfixSuggester) ProtoMessage()    {}
func (*InfixSuggester) Descriptor() ([]byte, []int) {
	return fileDescriptor_2c07125fba14e737, []int{36}
}

func (m *InfixSuggester) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_InfixSuggester.Unmarshal(m, b)
}
func (m *InfixSuggester) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_InfixSuggester.Marshal(b, m, deterministic)
}
func (m *InfixSuggester) XXX_Merge(src proto.Message) {
	xxx_messageInfo_InfixSuggester.Merge(m, src)
}
func (m *InfixSuggester) XXX_Size() int {
	return xxx_messageInfo_InfixSuggester.Size(m)
}
func (m *InfixSuggester) XXX_DiscardUnknown() {
	xxx_messageInfo_InfixSuggester.DiscardUnknown(m)
}

var xxx_messageInfo_InfixSuggester proto.InternalMessageInfo

func (m *InfixSuggester) GetAnalyzer() string {
	if m != nil {
		return m.Analyzer
	}
	return ""
}

func (m *InfixSuggester) GetIndexAnalyzer() string {
	if m != nil {
		return m.IndexAnalyzer
	}
	return ""
}

func (m *InfixSuggester) GetQueryAnalyzer() string {
	if m != nil {
		return m.QueryAnalyzer
	}
	return ""
}

// Suggester that first analyzes the surface form, adds the analyzed form to a weighted FST, and then does the same thing at lookup time (see @lucene:suggest:org.apache.lucene.search.suggest.analyzing.AnalyzingSuggester
type AnalyzingSuggester struct {
	Analyzer                       string   `protobuf:"bytes,1,opt,name=analyzer,proto3" json:"analyzer,omitempty"`
	IndexAnalyzer                  string   `protobuf:"bytes,2,opt,name=indexAnalyzer,proto3" json:"indexAnalyzer,omitempty"`
	QueryAnalyzer                  string   `protobuf:"bytes,3,opt,name=queryAnalyzer,proto3" json:"queryAnalyzer,omitempty"`
	MaxSurfaceFormsPerAnalyzedForm int32    `protobuf:"varint,4,opt,name=maxSurfaceFormsPerAnalyzedForm,proto3" json:"maxSurfaceFormsPerAnalyzedForm,omitempty"`
	MaxGraphExpansions             int32    `protobuf:"varint,5,opt,name=maxGraphExpansions,proto3" json:"maxGraphExpansions,omitempty"`
	PreserveSep                    bool     `protobuf:"varint,6,opt,name=preserveSep,proto3" json:"preserveSep,omitempty"`
	ExactFirst                     bool     `protobuf:"varint,7,opt,name=exactFirst,proto3" json:"exactFirst,omitempty"`
	XXX_NoUnkeyedLiteral           struct{} `json:"-"`
	XXX_unrecognized               []byte   `json:"-"`
	XXX_sizecache                  int32    `json:"-"`
}

func (m *AnalyzingSuggester) Reset()         { *m = AnalyzingSuggester{} }
func (m *AnalyzingSuggester) String() string { return proto.CompactTextString(m) }
func (*AnalyzingSuggester) ProtoMessage()    {}
func (*AnalyzingSuggester) Descriptor() ([]byte, []int) {
	return fileDescriptor_2c07125fba14e737, []int{37}
}

func (m *AnalyzingSuggester) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AnalyzingSuggester.Unmarshal(m, b)
}
func (m *AnalyzingSuggester) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AnalyzingSuggester.Marshal(b, m, deterministic)
}
func (m *AnalyzingSuggester) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AnalyzingSuggester.Merge(m, src)
}
func (m *AnalyzingSuggester) XXX_Size() int {
	return xxx_messageInfo_AnalyzingSuggester.Size(m)
}
func (m *AnalyzingSuggester) XXX_DiscardUnknown() {
	xxx_messageInfo_AnalyzingSuggester.DiscardUnknown(m)
}

var xxx_messageInfo_AnalyzingSuggester proto.InternalMessageInfo

func (m *AnalyzingSuggester) GetAnalyzer() string {
	if m != nil {
		return m.Analyzer
	}
	return ""
}

func (m *AnalyzingSuggester) GetIndexAnalyzer() string {
	if m != nil {
		return m.IndexAnalyzer
	}
	return ""
}

func (m *AnalyzingSuggester) GetQueryAnalyzer() string {
	if m != nil {
		return m.QueryAnalyzer
	}
	return ""
}

func (m *AnalyzingSuggester) GetMaxSurfaceFormsPerAnalyzedForm() int32 {
	if m != nil {
		return m.MaxSurfaceFormsPerAnalyzedForm
	}
	return 0
}

func (m *AnalyzingSuggester) GetMaxGraphExpansions() int32 {
	if m != nil {
		return m.MaxGraphExpansions
	}
	return 0
}

func (m *AnalyzingSuggester) GetPreserveSep() bool {
	if m != nil {
		return m.PreserveSep
	}
	return false
}

func (m *AnalyzingSuggester) GetExactFirst() bool {
	if m != nil {
		return m.ExactFirst
	}
	return false
}

// Implements a fuzzy AnalyzingSuggester (see @lucene:suggest:org.apache.lucene.search.suggest.analyzing.FuzzySuggester
type FuzzySuggester struct {
	Analyzer                       string   `protobuf:"bytes,1,opt,name=analyzer,proto3" json:"analyzer,omitempty"`
	IndexAnalyzer                  string   `protobuf:"bytes,2,opt,name=indexAnalyzer,proto3" json:"indexAnalyzer,omitempty"`
	QueryAnalyzer                  string   `protobuf:"bytes,3,opt,name=queryAnalyzer,proto3" json:"queryAnalyzer,omitempty"`
	MaxSurfaceFormsPerAnalyzedForm int32    `protobuf:"varint,4,opt,name=maxSurfaceFormsPerAnalyzedForm,proto3" json:"maxSurfaceFormsPerAnalyzedForm,omitempty"`
	MaxGraphExpansions             int32    `protobuf:"varint,5,opt,name=maxGraphExpansions,proto3" json:"maxGraphExpansions,omitempty"`
	PreserveSep                    bool     `protobuf:"varint,6,opt,name=preserveSep,proto3" json:"preserveSep,omitempty"`
	ExactFirst                     bool     `protobuf:"varint,7,opt,name=exactFirst,proto3" json:"exactFirst,omitempty"`
	MinFuzzyLength                 int32    `protobuf:"varint,8,opt,name=minFuzzyLength,proto3" json:"minFuzzyLength,omitempty"`
	NonFuzzyPrefix                 int32    `protobuf:"varint,9,opt,name=nonFuzzyPrefix,proto3" json:"nonFuzzyPrefix,omitempty"`
	MaxEdits                       int32    `protobuf:"varint,10,opt,name=maxEdits,proto3" json:"maxEdits,omitempty"`
	Transpositions                 bool     `protobuf:"varint,11,opt,name=transpositions,proto3" json:"transpositions,omitempty"`
	UnicodeAware                   bool     `protobuf:"varint,12,opt,name=unicodeAware,proto3" json:"unicodeAware,omitempty"`
	XXX_NoUnkeyedLiteral           struct{} `json:"-"`
	XXX_unrecognized               []byte   `json:"-"`
	XXX_sizecache                  int32    `json:"-"`
}

func (m *FuzzySuggester) Reset()         { *m = FuzzySuggester{} }
func (m *FuzzySuggester) String() string { return proto.CompactTextString(m) }
func (*FuzzySuggester) ProtoMessage()    {}
func (*FuzzySuggester) Descriptor() ([]byte, []int) {
	return fileDescriptor_2c07125fba14e737, []int{38}
}

func (m *FuzzySuggester) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_FuzzySuggester.Unmarshal(m, b)
}
func (m *FuzzySuggester) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_FuzzySuggester.Marshal(b, m, deterministic)
}
func (m *FuzzySuggester) XXX_Merge(src proto.Message) {
	xxx_messageInfo_FuzzySuggester.Merge(m, src)
}
func (m *FuzzySuggester) XXX_Size() int {
	return xxx_messageInfo_FuzzySuggester.Size(m)
}
func (m *FuzzySuggester) XXX_DiscardUnknown() {
	xxx_messageInfo_FuzzySuggester.DiscardUnknown(m)
}

var xxx_messageInfo_FuzzySuggester proto.InternalMessageInfo

func (m *FuzzySuggester) GetAnalyzer() string {
	if m != nil {
		return m.Analyzer
	}
	return ""
}

func (m *FuzzySuggester) GetIndexAnalyzer() string {
	if m != nil {
		return m.IndexAnalyzer
	}
	return ""
}

func (m *FuzzySuggester) GetQueryAnalyzer() string {
	if m != nil {
		return m.QueryAnalyzer
	}
	return ""
}

func (m *FuzzySuggester) GetMaxSurfaceFormsPerAnalyzedForm() int32 {
	if m != nil {
		return m.MaxSurfaceFormsPerAnalyzedForm
	}
	return 0
}

func (m *FuzzySuggester) GetMaxGraphExpansions() int32 {
	if m != nil {
		return m.MaxGraphExpansions
	}
	return 0
}

func (m *FuzzySuggester) GetPreserveSep() bool {
	if m != nil {
		return m.PreserveSep
	}
	return false
}

func (m *FuzzySuggester) GetExactFirst() bool {
	if m != nil {
		return m.ExactFirst
	}
	return false
}

func (m *FuzzySuggester) GetMinFuzzyLength() int32 {
	if m != nil {
		return m.MinFuzzyLength
	}
	return 0
}

func (m *FuzzySuggester) GetNonFuzzyPrefix() int32 {
	if m != nil {
		return m.NonFuzzyPrefix
	}
	return 0
}

func (m *FuzzySuggester) GetMaxEdits() int32 {
	if m != nil {
		return m.MaxEdits
	}
	return 0
}

func (m *FuzzySuggester) GetTranspositions() bool {
	if m != nil {
		return m.Transpositions
	}
	return false
}

func (m *FuzzySuggester) GetUnicodeAware() bool {
	if m != nil {
		return m.UnicodeAware
	}
	return false
}

//
//Creates a snapshot in the index, which is saved point-in-time view of the last commit in the
//index such that no files referenced by that snapshot will be deleted by ongoing indexing until
//the snapshot is released with @releaseSnapshot.  Note that this will reference the last commit,
//so be sure to call commit first if you have pending changes that you'd like to be included in
//the snapshot.<p>This can be used for backup purposes, i.e. after creating the snapshot you can
//copy all referenced files to backup storage, and then release the snapshot once complete.
//To restore the backup, just copy all the files back and restart the server.  It can also
//be used for transactional purposes, i.e. if you sometimes need to search a specific snapshot
//instead of the current live index.<p>Creating a snapshot is very fast (does not require any
//file copying), but over time it will consume extra disk space as old segments are merged in
//the index.  Be sure to release the snapshot once you're done.  Snapshots survive shutdown
//and restart of the server.  Returns all protected filenames referenced by this snapshot:
//these files will not change and will not be deleted until the snapshot is released.
//This returns the directories and files referenced by the snapshot.
type CreateSnapshotRequest struct {
	IndexName            string   `protobuf:"bytes,1,opt,name=indexName,proto3" json:"indexName,omitempty"`
	OpenSearcher         bool     `protobuf:"varint,2,opt,name=openSearcher,proto3" json:"openSearcher,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CreateSnapshotRequest) Reset()         { *m = CreateSnapshotRequest{} }
func (m *CreateSnapshotRequest) String() string { return proto.CompactTextString(m) }
func (*CreateSnapshotRequest) ProtoMessage()    {}
func (*CreateSnapshotRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_2c07125fba14e737, []int{39}
}

func (m *CreateSnapshotRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CreateSnapshotRequest.Unmarshal(m, b)
}
func (m *CreateSnapshotRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CreateSnapshotRequest.Marshal(b, m, deterministic)
}
func (m *CreateSnapshotRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CreateSnapshotRequest.Merge(m, src)
}
func (m *CreateSnapshotRequest) XXX_Size() int {
	return xxx_messageInfo_CreateSnapshotRequest.Size(m)
}
func (m *CreateSnapshotRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_CreateSnapshotRequest.DiscardUnknown(m)
}

var xxx_messageInfo_CreateSnapshotRequest proto.InternalMessageInfo

func (m *CreateSnapshotRequest) GetIndexName() string {
	if m != nil {
		return m.IndexName
	}
	return ""
}

func (m *CreateSnapshotRequest) GetOpenSearcher() bool {
	if m != nil {
		return m.OpenSearcher
	}
	return false
}

type CreateSnapshotResponse struct {
	IndexFiles           []string    `protobuf:"bytes,1,rep,name=indexFiles,proto3" json:"indexFiles,omitempty"`
	TaxonomyFiles        []string    `protobuf:"bytes,2,rep,name=taxonomyFiles,proto3" json:"taxonomyFiles,omitempty"`
	StateFiles           []string    `protobuf:"bytes,3,rep,name=stateFiles,proto3" json:"stateFiles,omitempty"`
	SnapshotId           *SnapshotId `protobuf:"bytes,4,opt,name=snapshotId,proto3" json:"snapshotId,omitempty"`
	XXX_NoUnkeyedLiteral struct{}    `json:"-"`
	XXX_unrecognized     []byte      `json:"-"`
	XXX_sizecache        int32       `json:"-"`
}

func (m *CreateSnapshotResponse) Reset()         { *m = CreateSnapshotResponse{} }
func (m *CreateSnapshotResponse) String() string { return proto.CompactTextString(m) }
func (*CreateSnapshotResponse) ProtoMessage()    {}
func (*CreateSnapshotResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_2c07125fba14e737, []int{40}
}

func (m *CreateSnapshotResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CreateSnapshotResponse.Unmarshal(m, b)
}
func (m *CreateSnapshotResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CreateSnapshotResponse.Marshal(b, m, deterministic)
}
func (m *CreateSnapshotResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CreateSnapshotResponse.Merge(m, src)
}
func (m *CreateSnapshotResponse) XXX_Size() int {
	return xxx_messageInfo_CreateSnapshotResponse.Size(m)
}
func (m *CreateSnapshotResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_CreateSnapshotResponse.DiscardUnknown(m)
}

var xxx_messageInfo_CreateSnapshotResponse proto.InternalMessageInfo

func (m *CreateSnapshotResponse) GetIndexFiles() []string {
	if m != nil {
		return m.IndexFiles
	}
	return nil
}

func (m *CreateSnapshotResponse) GetTaxonomyFiles() []string {
	if m != nil {
		return m.TaxonomyFiles
	}
	return nil
}

func (m *CreateSnapshotResponse) GetStateFiles() []string {
	if m != nil {
		return m.StateFiles
	}
	return nil
}

func (m *CreateSnapshotResponse) GetSnapshotId() *SnapshotId {
	if m != nil {
		return m.SnapshotId
	}
	return nil
}

type SnapshotId struct {
	IndexGen             int64    `protobuf:"varint,1,opt,name=indexGen,proto3" json:"indexGen,omitempty"`
	TaxonomyGen          int64    `protobuf:"varint,2,opt,name=taxonomyGen,proto3" json:"taxonomyGen,omitempty"`
	StateGen             int64    `protobuf:"varint,3,opt,name=stateGen,proto3" json:"stateGen,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SnapshotId) Reset()         { *m = SnapshotId{} }
func (m *SnapshotId) String() string { return proto.CompactTextString(m) }
func (*SnapshotId) ProtoMessage()    {}
func (*SnapshotId) Descriptor() ([]byte, []int) {
	return fileDescriptor_2c07125fba14e737, []int{41}
}

func (m *SnapshotId) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SnapshotId.Unmarshal(m, b)
}
func (m *SnapshotId) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SnapshotId.Marshal(b, m, deterministic)
}
func (m *SnapshotId) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SnapshotId.Merge(m, src)
}
func (m *SnapshotId) XXX_Size() int {
	return xxx_messageInfo_SnapshotId.Size(m)
}
func (m *SnapshotId) XXX_DiscardUnknown() {
	xxx_messageInfo_SnapshotId.DiscardUnknown(m)
}

var xxx_messageInfo_SnapshotId proto.InternalMessageInfo

func (m *SnapshotId) GetIndexGen() int64 {
	if m != nil {
		return m.IndexGen
	}
	return 0
}

func (m *SnapshotId) GetTaxonomyGen() int64 {
	if m != nil {
		return m.TaxonomyGen
	}
	return 0
}

func (m *SnapshotId) GetStateGen() int64 {
	if m != nil {
		return m.StateGen
	}
	return 0
}

type ReleaseSnapshotRequest struct {
	IndexName            string      `protobuf:"bytes,1,opt,name=indexName,proto3" json:"indexName,omitempty"`
	SnapshotId           *SnapshotId `protobuf:"bytes,2,opt,name=snapshotId,proto3" json:"snapshotId,omitempty"`
	XXX_NoUnkeyedLiteral struct{}    `json:"-"`
	XXX_unrecognized     []byte      `json:"-"`
	XXX_sizecache        int32       `json:"-"`
}

func (m *ReleaseSnapshotRequest) Reset()         { *m = ReleaseSnapshotRequest{} }
func (m *ReleaseSnapshotRequest) String() string { return proto.CompactTextString(m) }
func (*ReleaseSnapshotRequest) ProtoMessage()    {}
func (*ReleaseSnapshotRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_2c07125fba14e737, []int{42}
}

func (m *ReleaseSnapshotRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ReleaseSnapshotRequest.Unmarshal(m, b)
}
func (m *ReleaseSnapshotRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ReleaseSnapshotRequest.Marshal(b, m, deterministic)
}
func (m *ReleaseSnapshotRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ReleaseSnapshotRequest.Merge(m, src)
}
func (m *ReleaseSnapshotRequest) XXX_Size() int {
	return xxx_messageInfo_ReleaseSnapshotRequest.Size(m)
}
func (m *ReleaseSnapshotRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ReleaseSnapshotRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ReleaseSnapshotRequest proto.InternalMessageInfo

func (m *ReleaseSnapshotRequest) GetIndexName() string {
	if m != nil {
		return m.IndexName
	}
	return ""
}

func (m *ReleaseSnapshotRequest) GetSnapshotId() *SnapshotId {
	if m != nil {
		return m.SnapshotId
	}
	return nil
}

type ReleaseSnapshotResponse struct {
	Success              bool     `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ReleaseSnapshotResponse) Reset()         { *m = ReleaseSnapshotResponse{} }
func (m *ReleaseSnapshotResponse) String() string { return proto.CompactTextString(m) }
func (*ReleaseSnapshotResponse) ProtoMessage()    {}
func (*ReleaseSnapshotResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_2c07125fba14e737, []int{43}
}

func (m *ReleaseSnapshotResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ReleaseSnapshotResponse.Unmarshal(m, b)
}
func (m *ReleaseSnapshotResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ReleaseSnapshotResponse.Marshal(b, m, deterministic)
}
func (m *ReleaseSnapshotResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ReleaseSnapshotResponse.Merge(m, src)
}
func (m *ReleaseSnapshotResponse) XXX_Size() int {
	return xxx_messageInfo_ReleaseSnapshotResponse.Size(m)
}
func (m *ReleaseSnapshotResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_ReleaseSnapshotResponse.DiscardUnknown(m)
}

var xxx_messageInfo_ReleaseSnapshotResponse proto.InternalMessageInfo

func (m *ReleaseSnapshotResponse) GetSuccess() bool {
	if m != nil {
		return m.Success
	}
	return false
}

type BackupIndexRequest struct {
	IndexName            string   `protobuf:"bytes,1,opt,name=indexName,proto3" json:"indexName,omitempty"`
	ServiceName          string   `protobuf:"bytes,2,opt,name=serviceName,proto3" json:"serviceName,omitempty"`
	ResourceName         string   `protobuf:"bytes,3,opt,name=resourceName,proto3" json:"resourceName,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *BackupIndexRequest) Reset()         { *m = BackupIndexRequest{} }
func (m *BackupIndexRequest) String() string { return proto.CompactTextString(m) }
func (*BackupIndexRequest) ProtoMessage()    {}
func (*BackupIndexRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_2c07125fba14e737, []int{44}
}

func (m *BackupIndexRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_BackupIndexRequest.Unmarshal(m, b)
}
func (m *BackupIndexRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_BackupIndexRequest.Marshal(b, m, deterministic)
}
func (m *BackupIndexRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_BackupIndexRequest.Merge(m, src)
}
func (m *BackupIndexRequest) XXX_Size() int {
	return xxx_messageInfo_BackupIndexRequest.Size(m)
}
func (m *BackupIndexRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_BackupIndexRequest.DiscardUnknown(m)
}

var xxx_messageInfo_BackupIndexRequest proto.InternalMessageInfo

func (m *BackupIndexRequest) GetIndexName() string {
	if m != nil {
		return m.IndexName
	}
	return ""
}

func (m *BackupIndexRequest) GetServiceName() string {
	if m != nil {
		return m.ServiceName
	}
	return ""
}

func (m *BackupIndexRequest) GetResourceName() string {
	if m != nil {
		return m.ResourceName
	}
	return ""
}

type BackupIndexResponse struct {
	DataVersionHash      string   `protobuf:"bytes,1,opt,name=dataVersionHash,proto3" json:"dataVersionHash,omitempty"`
	MetadataVersionHash  string   `protobuf:"bytes,2,opt,name=metadataVersionHash,proto3" json:"metadataVersionHash,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *BackupIndexResponse) Reset()         { *m = BackupIndexResponse{} }
func (m *BackupIndexResponse) String() string { return proto.CompactTextString(m) }
func (*BackupIndexResponse) ProtoMessage()    {}
func (*BackupIndexResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_2c07125fba14e737, []int{45}
}

func (m *BackupIndexResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_BackupIndexResponse.Unmarshal(m, b)
}
func (m *BackupIndexResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_BackupIndexResponse.Marshal(b, m, deterministic)
}
func (m *BackupIndexResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_BackupIndexResponse.Merge(m, src)
}
func (m *BackupIndexResponse) XXX_Size() int {
	return xxx_messageInfo_BackupIndexResponse.Size(m)
}
func (m *BackupIndexResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_BackupIndexResponse.DiscardUnknown(m)
}

var xxx_messageInfo_BackupIndexResponse proto.InternalMessageInfo

func (m *BackupIndexResponse) GetDataVersionHash() string {
	if m != nil {
		return m.DataVersionHash
	}
	return ""
}

func (m *BackupIndexResponse) GetMetadataVersionHash() string {
	if m != nil {
		return m.MetadataVersionHash
	}
	return ""
}

type MetricsRequest struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *MetricsRequest) Reset()         { *m = MetricsRequest{} }
func (m *MetricsRequest) String() string { return proto.CompactTextString(m) }
func (*MetricsRequest) ProtoMessage()    {}
func (*MetricsRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_2c07125fba14e737, []int{46}
}

func (m *MetricsRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MetricsRequest.Unmarshal(m, b)
}
func (m *MetricsRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MetricsRequest.Marshal(b, m, deterministic)
}
func (m *MetricsRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MetricsRequest.Merge(m, src)
}
func (m *MetricsRequest) XXX_Size() int {
	return xxx_messageInfo_MetricsRequest.Size(m)
}
func (m *MetricsRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_MetricsRequest.DiscardUnknown(m)
}

var xxx_messageInfo_MetricsRequest proto.InternalMessageInfo

type MetricsResponse struct {
	MetricFamilySample   []*MetricFamilySamples `protobuf:"bytes,1,rep,name=metricFamilySample,proto3" json:"metricFamilySample,omitempty"`
	XXX_NoUnkeyedLiteral struct{}               `json:"-"`
	XXX_unrecognized     []byte                 `json:"-"`
	XXX_sizecache        int32                  `json:"-"`
}

func (m *MetricsResponse) Reset()         { *m = MetricsResponse{} }
func (m *MetricsResponse) String() string { return proto.CompactTextString(m) }
func (*MetricsResponse) ProtoMessage()    {}
func (*MetricsResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_2c07125fba14e737, []int{47}
}

func (m *MetricsResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MetricsResponse.Unmarshal(m, b)
}
func (m *MetricsResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MetricsResponse.Marshal(b, m, deterministic)
}
func (m *MetricsResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MetricsResponse.Merge(m, src)
}
func (m *MetricsResponse) XXX_Size() int {
	return xxx_messageInfo_MetricsResponse.Size(m)
}
func (m *MetricsResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MetricsResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MetricsResponse proto.InternalMessageInfo

func (m *MetricsResponse) GetMetricFamilySample() []*MetricFamilySamples {
	if m != nil {
		return m.MetricFamilySample
	}
	return nil
}

type MetricFamilySamples struct {
	Name                 string     `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Type                 SampleType `protobuf:"varint,2,opt,name=type,proto3,enum=luceneserver.SampleType" json:"type,omitempty"`
	Help                 string     `protobuf:"bytes,3,opt,name=help,proto3" json:"help,omitempty"`
	Samples              []*Sample  `protobuf:"bytes,4,rep,name=samples,proto3" json:"samples,omitempty"`
	XXX_NoUnkeyedLiteral struct{}   `json:"-"`
	XXX_unrecognized     []byte     `json:"-"`
	XXX_sizecache        int32      `json:"-"`
}

func (m *MetricFamilySamples) Reset()         { *m = MetricFamilySamples{} }
func (m *MetricFamilySamples) String() string { return proto.CompactTextString(m) }
func (*MetricFamilySamples) ProtoMessage()    {}
func (*MetricFamilySamples) Descriptor() ([]byte, []int) {
	return fileDescriptor_2c07125fba14e737, []int{48}
}

func (m *MetricFamilySamples) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MetricFamilySamples.Unmarshal(m, b)
}
func (m *MetricFamilySamples) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MetricFamilySamples.Marshal(b, m, deterministic)
}
func (m *MetricFamilySamples) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MetricFamilySamples.Merge(m, src)
}
func (m *MetricFamilySamples) XXX_Size() int {
	return xxx_messageInfo_MetricFamilySamples.Size(m)
}
func (m *MetricFamilySamples) XXX_DiscardUnknown() {
	xxx_messageInfo_MetricFamilySamples.DiscardUnknown(m)
}

var xxx_messageInfo_MetricFamilySamples proto.InternalMessageInfo

func (m *MetricFamilySamples) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *MetricFamilySamples) GetType() SampleType {
	if m != nil {
		return m.Type
	}
	return SampleType_COUNTER
}

func (m *MetricFamilySamples) GetHelp() string {
	if m != nil {
		return m.Help
	}
	return ""
}

func (m *MetricFamilySamples) GetSamples() []*Sample {
	if m != nil {
		return m.Samples
	}
	return nil
}

type Sample struct {
	Name                 string   `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	LabelValues          []string `protobuf:"bytes,2,rep,name=labelValues,proto3" json:"labelValues,omitempty"`
	LabelNames           []string `protobuf:"bytes,3,rep,name=labelNames,proto3" json:"labelNames,omitempty"`
	Value                float64  `protobuf:"fixed64,4,opt,name=value,proto3" json:"value,omitempty"`
	TimestampMs          int64    `protobuf:"varint,5,opt,name=timestampMs,proto3" json:"timestampMs,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Sample) Reset()         { *m = Sample{} }
func (m *Sample) String() string { return proto.CompactTextString(m) }
func (*Sample) ProtoMessage()    {}
func (*Sample) Descriptor() ([]byte, []int) {
	return fileDescriptor_2c07125fba14e737, []int{49}
}

func (m *Sample) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Sample.Unmarshal(m, b)
}
func (m *Sample) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Sample.Marshal(b, m, deterministic)
}
func (m *Sample) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Sample.Merge(m, src)
}
func (m *Sample) XXX_Size() int {
	return xxx_messageInfo_Sample.Size(m)
}
func (m *Sample) XXX_DiscardUnknown() {
	xxx_messageInfo_Sample.DiscardUnknown(m)
}

var xxx_messageInfo_Sample proto.InternalMessageInfo

func (m *Sample) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *Sample) GetLabelValues() []string {
	if m != nil {
		return m.LabelValues
	}
	return nil
}

func (m *Sample) GetLabelNames() []string {
	if m != nil {
		return m.LabelNames
	}
	return nil
}

func (m *Sample) GetValue() float64 {
	if m != nil {
		return m.Value
	}
	return 0
}

func (m *Sample) GetTimestampMs() int64 {
	if m != nil {
		return m.TimestampMs
	}
	return 0
}

type IndicesRequest struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *IndicesRequest) Reset()         { *m = IndicesRequest{} }
func (m *IndicesRequest) String() string { return proto.CompactTextString(m) }
func (*IndicesRequest) ProtoMessage()    {}
func (*IndicesRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_2c07125fba14e737, []int{50}
}

func (m *IndicesRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_IndicesRequest.Unmarshal(m, b)
}
func (m *IndicesRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_IndicesRequest.Marshal(b, m, deterministic)
}
func (m *IndicesRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_IndicesRequest.Merge(m, src)
}
func (m *IndicesRequest) XXX_Size() int {
	return xxx_messageInfo_IndicesRequest.Size(m)
}
func (m *IndicesRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_IndicesRequest.DiscardUnknown(m)
}

var xxx_messageInfo_IndicesRequest proto.InternalMessageInfo

type IndicesResponse struct {
	IndicesResponse      []*IndexStatsResponse `protobuf:"bytes,1,rep,name=indicesResponse,proto3" json:"indicesResponse,omitempty"`
	XXX_NoUnkeyedLiteral struct{}              `json:"-"`
	XXX_unrecognized     []byte                `json:"-"`
	XXX_sizecache        int32                 `json:"-"`
}

func (m *IndicesResponse) Reset()         { *m = IndicesResponse{} }
func (m *IndicesResponse) String() string { return proto.CompactTextString(m) }
func (*IndicesResponse) ProtoMessage()    {}
func (*IndicesResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_2c07125fba14e737, []int{51}
}

func (m *IndicesResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_IndicesResponse.Unmarshal(m, b)
}
func (m *IndicesResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_IndicesResponse.Marshal(b, m, deterministic)
}
func (m *IndicesResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_IndicesResponse.Merge(m, src)
}
func (m *IndicesResponse) XXX_Size() int {
	return xxx_messageInfo_IndicesResponse.Size(m)
}
func (m *IndicesResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_IndicesResponse.DiscardUnknown(m)
}

var xxx_messageInfo_IndicesResponse proto.InternalMessageInfo

func (m *IndicesResponse) GetIndicesResponse() []*IndexStatsResponse {
	if m != nil {
		return m.IndicesResponse
	}
	return nil
}

type IndexStatsResponse struct {
	IndexName            string         `protobuf:"bytes,1,opt,name=indexName,proto3" json:"indexName,omitempty"`
	StatsResponse        *StatsResponse `protobuf:"bytes,2,opt,name=statsResponse,proto3" json:"statsResponse,omitempty"`
	XXX_NoUnkeyedLiteral struct{}       `json:"-"`
	XXX_unrecognized     []byte         `json:"-"`
	XXX_sizecache        int32          `json:"-"`
}

func (m *IndexStatsResponse) Reset()         { *m = IndexStatsResponse{} }
func (m *IndexStatsResponse) String() string { return proto.CompactTextString(m) }
func (*IndexStatsResponse) ProtoMessage()    {}
func (*IndexStatsResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_2c07125fba14e737, []int{52}
}

func (m *IndexStatsResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_IndexStatsResponse.Unmarshal(m, b)
}
func (m *IndexStatsResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_IndexStatsResponse.Marshal(b, m, deterministic)
}
func (m *IndexStatsResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_IndexStatsResponse.Merge(m, src)
}
func (m *IndexStatsResponse) XXX_Size() int {
	return xxx_messageInfo_IndexStatsResponse.Size(m)
}
func (m *IndexStatsResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_IndexStatsResponse.DiscardUnknown(m)
}

var xxx_messageInfo_IndexStatsResponse proto.InternalMessageInfo

func (m *IndexStatsResponse) GetIndexName() string {
	if m != nil {
		return m.IndexName
	}
	return ""
}

func (m *IndexStatsResponse) GetStatsResponse() *StatsResponse {
	if m != nil {
		return m.StatsResponse
	}
	return nil
}

type RestoreIndex struct {
	ServiceName          string   `protobuf:"bytes,1,opt,name=serviceName,proto3" json:"serviceName,omitempty"`
	ResourceName         string   `protobuf:"bytes,2,opt,name=resourceName,proto3" json:"resourceName,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *RestoreIndex) Reset()         { *m = RestoreIndex{} }
func (m *RestoreIndex) String() string { return proto.CompactTextString(m) }
func (*RestoreIndex) ProtoMessage()    {}
func (*RestoreIndex) Descriptor() ([]byte, []int) {
	return fileDescriptor_2c07125fba14e737, []int{53}
}

func (m *RestoreIndex) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RestoreIndex.Unmarshal(m, b)
}
func (m *RestoreIndex) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RestoreIndex.Marshal(b, m, deterministic)
}
func (m *RestoreIndex) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RestoreIndex.Merge(m, src)
}
func (m *RestoreIndex) XXX_Size() int {
	return xxx_messageInfo_RestoreIndex.Size(m)
}
func (m *RestoreIndex) XXX_DiscardUnknown() {
	xxx_messageInfo_RestoreIndex.DiscardUnknown(m)
}

var xxx_messageInfo_RestoreIndex proto.InternalMessageInfo

func (m *RestoreIndex) GetServiceName() string {
	if m != nil {
		return m.ServiceName
	}
	return ""
}

func (m *RestoreIndex) GetResourceName() string {
	if m != nil {
		return m.ResourceName
	}
	return ""
}

type AddReplicaRequest struct {
	MagicNumber          int32    `protobuf:"varint,1,opt,name=magicNumber,proto3" json:"magicNumber,omitempty"`
	IndexName            string   `protobuf:"bytes,2,opt,name=indexName,proto3" json:"indexName,omitempty"`
	ReplicaId            int32    `protobuf:"varint,3,opt,name=replicaId,proto3" json:"replicaId,omitempty"`
	HostName             string   `protobuf:"bytes,4,opt,name=hostName,proto3" json:"hostName,omitempty"`
	Port                 int32    `protobuf:"varint,5,opt,name=port,proto3" json:"port,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *AddReplicaRequest) Reset()         { *m = AddReplicaRequest{} }
func (m *AddReplicaRequest) String() string { return proto.CompactTextString(m) }
func (*AddReplicaRequest) ProtoMessage()    {}
func (*AddReplicaRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_2c07125fba14e737, []int{54}
}

func (m *AddReplicaRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AddReplicaRequest.Unmarshal(m, b)
}
func (m *AddReplicaRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AddReplicaRequest.Marshal(b, m, deterministic)
}
func (m *AddReplicaRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AddReplicaRequest.Merge(m, src)
}
func (m *AddReplicaRequest) XXX_Size() int {
	return xxx_messageInfo_AddReplicaRequest.Size(m)
}
func (m *AddReplicaRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_AddReplicaRequest.DiscardUnknown(m)
}

var xxx_messageInfo_AddReplicaRequest proto.InternalMessageInfo

func (m *AddReplicaRequest) GetMagicNumber() int32 {
	if m != nil {
		return m.MagicNumber
	}
	return 0
}

func (m *AddReplicaRequest) GetIndexName() string {
	if m != nil {
		return m.IndexName
	}
	return ""
}

func (m *AddReplicaRequest) GetReplicaId() int32 {
	if m != nil {
		return m.ReplicaId
	}
	return 0
}

func (m *AddReplicaRequest) GetHostName() string {
	if m != nil {
		return m.HostName
	}
	return ""
}

func (m *AddReplicaRequest) GetPort() int32 {
	if m != nil {
		return m.Port
	}
	return 0
}

type AddReplicaResponse struct {
	Ok                   string   `protobuf:"bytes,1,opt,name=ok,proto3" json:"ok,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *AddReplicaResponse) Reset()         { *m = AddReplicaResponse{} }
func (m *AddReplicaResponse) String() string { return proto.CompactTextString(m) }
func (*AddReplicaResponse) ProtoMessage()    {}
func (*AddReplicaResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_2c07125fba14e737, []int{55}
}

func (m *AddReplicaResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AddReplicaResponse.Unmarshal(m, b)
}
func (m *AddReplicaResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AddReplicaResponse.Marshal(b, m, deterministic)
}
func (m *AddReplicaResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AddReplicaResponse.Merge(m, src)
}
func (m *AddReplicaResponse) XXX_Size() int {
	return xxx_messageInfo_AddReplicaResponse.Size(m)
}
func (m *AddReplicaResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_AddReplicaResponse.DiscardUnknown(m)
}

var xxx_messageInfo_AddReplicaResponse proto.InternalMessageInfo

func (m *AddReplicaResponse) GetOk() string {
	if m != nil {
		return m.Ok
	}
	return ""
}

// Holds incRef'd file level details for one point-in-time segment infos on the primary node.
type CopyState struct {
	InfoBytesLength         int32          `protobuf:"varint,1,opt,name=infoBytesLength,proto3" json:"infoBytesLength,omitempty"`
	InfoBytes               []byte         `protobuf:"bytes,2,opt,name=infoBytes,proto3" json:"infoBytes,omitempty"`
	Gen                     int64          `protobuf:"varint,3,opt,name=gen,proto3" json:"gen,omitempty"`
	Version                 int64          `protobuf:"varint,4,opt,name=version,proto3" json:"version,omitempty"`
	FilesMetadata           *FilesMetadata `protobuf:"bytes,5,opt,name=filesMetadata,proto3" json:"filesMetadata,omitempty"`
	CompletedMergeFilesSize int32          `protobuf:"varint,6,opt,name=completedMergeFilesSize,proto3" json:"completedMergeFilesSize,omitempty"`
	CompletedMergeFiles     []string       `protobuf:"bytes,7,rep,name=completedMergeFiles,proto3" json:"completedMergeFiles,omitempty"`
	PrimaryGen              int64          `protobuf:"varint,8,opt,name=primaryGen,proto3" json:"primaryGen,omitempty"`
	XXX_NoUnkeyedLiteral    struct{}       `json:"-"`
	XXX_unrecognized        []byte         `json:"-"`
	XXX_sizecache           int32          `json:"-"`
}

func (m *CopyState) Reset()         { *m = CopyState{} }
func (m *CopyState) String() string { return proto.CompactTextString(m) }
func (*CopyState) ProtoMessage()    {}
func (*CopyState) Descriptor() ([]byte, []int) {
	return fileDescriptor_2c07125fba14e737, []int{56}
}

func (m *CopyState) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CopyState.Unmarshal(m, b)
}
func (m *CopyState) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CopyState.Marshal(b, m, deterministic)
}
func (m *CopyState) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CopyState.Merge(m, src)
}
func (m *CopyState) XXX_Size() int {
	return xxx_messageInfo_CopyState.Size(m)
}
func (m *CopyState) XXX_DiscardUnknown() {
	xxx_messageInfo_CopyState.DiscardUnknown(m)
}

var xxx_messageInfo_CopyState proto.InternalMessageInfo

func (m *CopyState) GetInfoBytesLength() int32 {
	if m != nil {
		return m.InfoBytesLength
	}
	return 0
}

func (m *CopyState) GetInfoBytes() []byte {
	if m != nil {
		return m.InfoBytes
	}
	return nil
}

func (m *CopyState) GetGen() int64 {
	if m != nil {
		return m.Gen
	}
	return 0
}

func (m *CopyState) GetVersion() int64 {
	if m != nil {
		return m.Version
	}
	return 0
}

func (m *CopyState) GetFilesMetadata() *FilesMetadata {
	if m != nil {
		return m.FilesMetadata
	}
	return nil
}

func (m *CopyState) GetCompletedMergeFilesSize() int32 {
	if m != nil {
		return m.CompletedMergeFilesSize
	}
	return 0
}

func (m *CopyState) GetCompletedMergeFiles() []string {
	if m != nil {
		return m.CompletedMergeFiles
	}
	return nil
}

func (m *CopyState) GetPrimaryGen() int64 {
	if m != nil {
		return m.PrimaryGen
	}
	return 0
}

type FilesMetadata struct {
	NumFiles             int32           `protobuf:"varint,1,opt,name=numFiles,proto3" json:"numFiles,omitempty"`
	FileMetadata         []*FileMetadata `protobuf:"bytes,2,rep,name=fileMetadata,proto3" json:"fileMetadata,omitempty"`
	XXX_NoUnkeyedLiteral struct{}        `json:"-"`
	XXX_unrecognized     []byte          `json:"-"`
	XXX_sizecache        int32           `json:"-"`
}

func (m *FilesMetadata) Reset()         { *m = FilesMetadata{} }
func (m *FilesMetadata) String() string { return proto.CompactTextString(m) }
func (*FilesMetadata) ProtoMessage()    {}
func (*FilesMetadata) Descriptor() ([]byte, []int) {
	return fileDescriptor_2c07125fba14e737, []int{57}
}

func (m *FilesMetadata) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_FilesMetadata.Unmarshal(m, b)
}
func (m *FilesMetadata) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_FilesMetadata.Marshal(b, m, deterministic)
}
func (m *FilesMetadata) XXX_Merge(src proto.Message) {
	xxx_messageInfo_FilesMetadata.Merge(m, src)
}
func (m *FilesMetadata) XXX_Size() int {
	return xxx_messageInfo_FilesMetadata.Size(m)
}
func (m *FilesMetadata) XXX_DiscardUnknown() {
	xxx_messageInfo_FilesMetadata.DiscardUnknown(m)
}

var xxx_messageInfo_FilesMetadata proto.InternalMessageInfo

func (m *FilesMetadata) GetNumFiles() int32 {
	if m != nil {
		return m.NumFiles
	}
	return 0
}

func (m *FilesMetadata) GetFileMetadata() []*FileMetadata {
	if m != nil {
		return m.FileMetadata
	}
	return nil
}

type FileMetadata struct {
	FileName             string   `protobuf:"bytes,1,opt,name=fileName,proto3" json:"fileName,omitempty"`
	Len                  int64    `protobuf:"varint,2,opt,name=len,proto3" json:"len,omitempty"`
	Checksum             int64    `protobuf:"varint,3,opt,name=checksum,proto3" json:"checksum,omitempty"`
	HeaderLength         int32    `protobuf:"varint,4,opt,name=headerLength,proto3" json:"headerLength,omitempty"`
	Header               []byte   `protobuf:"bytes,5,opt,name=header,proto3" json:"header,omitempty"`
	FooterLength         int32    `protobuf:"varint,6,opt,name=footerLength,proto3" json:"footerLength,omitempty"`
	Footer               []byte   `protobuf:"bytes,7,opt,name=footer,proto3" json:"footer,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *FileMetadata) Reset()         { *m = FileMetadata{} }
func (m *FileMetadata) String() string { return proto.CompactTextString(m) }
func (*FileMetadata) ProtoMessage()    {}
func (*FileMetadata) Descriptor() ([]byte, []int) {
	return fileDescriptor_2c07125fba14e737, []int{58}
}

func (m *FileMetadata) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_FileMetadata.Unmarshal(m, b)
}
func (m *FileMetadata) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_FileMetadata.Marshal(b, m, deterministic)
}
func (m *FileMetadata) XXX_Merge(src proto.Message) {
	xxx_messageInfo_FileMetadata.Merge(m, src)
}
func (m *FileMetadata) XXX_Size() int {
	return xxx_messageInfo_FileMetadata.Size(m)
}
func (m *FileMetadata) XXX_DiscardUnknown() {
	xxx_messageInfo_FileMetadata.DiscardUnknown(m)
}

var xxx_messageInfo_FileMetadata proto.InternalMessageInfo

func (m *FileMetadata) GetFileName() string {
	if m != nil {
		return m.FileName
	}
	return ""
}

func (m *FileMetadata) GetLen() int64 {
	if m != nil {
		return m.Len
	}
	return 0
}

func (m *FileMetadata) GetChecksum() int64 {
	if m != nil {
		return m.Checksum
	}
	return 0
}

func (m *FileMetadata) GetHeaderLength() int32 {
	if m != nil {
		return m.HeaderLength
	}
	return 0
}

func (m *FileMetadata) GetHeader() []byte {
	if m != nil {
		return m.Header
	}
	return nil
}

func (m *FileMetadata) GetFooterLength() int32 {
	if m != nil {
		return m.FooterLength
	}
	return 0
}

func (m *FileMetadata) GetFooter() []byte {
	if m != nil {
		return m.Footer
	}
	return nil
}

//* Primary invokes this on a replica to ask it to copy files
type CopyFiles struct {
	MagicNumber          int32          `protobuf:"varint,1,opt,name=magicNumber,proto3" json:"magicNumber,omitempty"`
	IndexName            string         `protobuf:"bytes,2,opt,name=indexName,proto3" json:"indexName,omitempty"`
	PrimaryGen           int64          `protobuf:"varint,3,opt,name=primaryGen,proto3" json:"primaryGen,omitempty"`
	FilesMetadata        *FilesMetadata `protobuf:"bytes,4,opt,name=filesMetadata,proto3" json:"filesMetadata,omitempty"`
	XXX_NoUnkeyedLiteral struct{}       `json:"-"`
	XXX_unrecognized     []byte         `json:"-"`
	XXX_sizecache        int32          `json:"-"`
}

func (m *CopyFiles) Reset()         { *m = CopyFiles{} }
func (m *CopyFiles) String() string { return proto.CompactTextString(m) }
func (*CopyFiles) ProtoMessage()    {}
func (*CopyFiles) Descriptor() ([]byte, []int) {
	return fileDescriptor_2c07125fba14e737, []int{59}
}

func (m *CopyFiles) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CopyFiles.Unmarshal(m, b)
}
func (m *CopyFiles) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CopyFiles.Marshal(b, m, deterministic)
}
func (m *CopyFiles) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CopyFiles.Merge(m, src)
}
func (m *CopyFiles) XXX_Size() int {
	return xxx_messageInfo_CopyFiles.Size(m)
}
func (m *CopyFiles) XXX_DiscardUnknown() {
	xxx_messageInfo_CopyFiles.DiscardUnknown(m)
}

var xxx_messageInfo_CopyFiles proto.InternalMessageInfo

func (m *CopyFiles) GetMagicNumber() int32 {
	if m != nil {
		return m.MagicNumber
	}
	return 0
}

func (m *CopyFiles) GetIndexName() string {
	if m != nil {
		return m.IndexName
	}
	return ""
}

func (m *CopyFiles) GetPrimaryGen() int64 {
	if m != nil {
		return m.PrimaryGen
	}
	return 0
}

func (m *CopyFiles) GetFilesMetadata() *FilesMetadata {
	if m != nil {
		return m.FilesMetadata
	}
	return nil
}

//* Replica invokes this on a primary to let primary know it needs the CopyState
type CopyStateRequest struct {
	MagicNumber          int32    `protobuf:"varint,1,opt,name=magicNumber,proto3" json:"magicNumber,omitempty"`
	IndexName            string   `protobuf:"bytes,2,opt,name=indexName,proto3" json:"indexName,omitempty"`
	ReplicaId            int32    `protobuf:"varint,3,opt,name=replicaId,proto3" json:"replicaId,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CopyStateRequest) Reset()         { *m = CopyStateRequest{} }
func (m *CopyStateRequest) String() string { return proto.CompactTextString(m) }
func (*CopyStateRequest) ProtoMessage()    {}
func (*CopyStateRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_2c07125fba14e737, []int{60}
}

func (m *CopyStateRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CopyStateRequest.Unmarshal(m, b)
}
func (m *CopyStateRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CopyStateRequest.Marshal(b, m, deterministic)
}
func (m *CopyStateRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CopyStateRequest.Merge(m, src)
}
func (m *CopyStateRequest) XXX_Size() int {
	return xxx_messageInfo_CopyStateRequest.Size(m)
}
func (m *CopyStateRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_CopyStateRequest.DiscardUnknown(m)
}

var xxx_messageInfo_CopyStateRequest proto.InternalMessageInfo

func (m *CopyStateRequest) GetMagicNumber() int32 {
	if m != nil {
		return m.MagicNumber
	}
	return 0
}

func (m *CopyStateRequest) GetIndexName() string {
	if m != nil {
		return m.IndexName
	}
	return ""
}

func (m *CopyStateRequest) GetReplicaId() int32 {
	if m != nil {
		return m.ReplicaId
	}
	return 0
}

type FilesInfo struct {
	MagicNumber          int32       `protobuf:"varint,1,opt,name=magicNumber,proto3" json:"magicNumber,omitempty"`
	IndexName            string      `protobuf:"bytes,2,opt,name=indexName,proto3" json:"indexName,omitempty"`
	ReplicaId            int32       `protobuf:"varint,3,opt,name=replicaId,proto3" json:"replicaId,omitempty"`
	FileInfo             []*FileInfo `protobuf:"bytes,4,rep,name=fileInfo,proto3" json:"fileInfo,omitempty"`
	XXX_NoUnkeyedLiteral struct{}    `json:"-"`
	XXX_unrecognized     []byte      `json:"-"`
	XXX_sizecache        int32       `json:"-"`
}

func (m *FilesInfo) Reset()         { *m = FilesInfo{} }
func (m *FilesInfo) String() string { return proto.CompactTextString(m) }
func (*FilesInfo) ProtoMessage()    {}
func (*FilesInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_2c07125fba14e737, []int{61}
}

func (m *FilesInfo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_FilesInfo.Unmarshal(m, b)
}
func (m *FilesInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_FilesInfo.Marshal(b, m, deterministic)
}
func (m *FilesInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_FilesInfo.Merge(m, src)
}
func (m *FilesInfo) XXX_Size() int {
	return xxx_messageInfo_FilesInfo.Size(m)
}
func (m *FilesInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_FilesInfo.DiscardUnknown(m)
}

var xxx_messageInfo_FilesInfo proto.InternalMessageInfo

func (m *FilesInfo) GetMagicNumber() int32 {
	if m != nil {
		return m.MagicNumber
	}
	return 0
}

func (m *FilesInfo) GetIndexName() string {
	if m != nil {
		return m.IndexName
	}
	return ""
}

func (m *FilesInfo) GetReplicaId() int32 {
	if m != nil {
		return m.ReplicaId
	}
	return 0
}

func (m *FilesInfo) GetFileInfo() []*FileInfo {
	if m != nil {
		return m.FileInfo
	}
	return nil
}

type FileInfo struct {
	FileName             string   `protobuf:"bytes,1,opt,name=fileName,proto3" json:"fileName,omitempty"`
	FpStart              int64    `protobuf:"varint,2,opt,name=fpStart,proto3" json:"fpStart,omitempty"`
	IndexName            string   `protobuf:"bytes,3,opt,name=indexName,proto3" json:"indexName,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *FileInfo) Reset()         { *m = FileInfo{} }
func (m *FileInfo) String() string { return proto.CompactTextString(m) }
func (*FileInfo) ProtoMessage()    {}
func (*FileInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_2c07125fba14e737, []int{62}
}

func (m *FileInfo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_FileInfo.Unmarshal(m, b)
}
func (m *FileInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_FileInfo.Marshal(b, m, deterministic)
}
func (m *FileInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_FileInfo.Merge(m, src)
}
func (m *FileInfo) XXX_Size() int {
	return xxx_messageInfo_FileInfo.Size(m)
}
func (m *FileInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_FileInfo.DiscardUnknown(m)
}

var xxx_messageInfo_FileInfo proto.InternalMessageInfo

func (m *FileInfo) GetFileName() string {
	if m != nil {
		return m.FileName
	}
	return ""
}

func (m *FileInfo) GetFpStart() int64 {
	if m != nil {
		return m.FpStart
	}
	return 0
}

func (m *FileInfo) GetIndexName() string {
	if m != nil {
		return m.IndexName
	}
	return ""
}

type RawFileChunk struct {
	Content              []byte   `protobuf:"bytes,1,opt,name=content,proto3" json:"content,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *RawFileChunk) Reset()         { *m = RawFileChunk{} }
func (m *RawFileChunk) String() string { return proto.CompactTextString(m) }
func (*RawFileChunk) ProtoMessage()    {}
func (*RawFileChunk) Descriptor() ([]byte, []int) {
	return fileDescriptor_2c07125fba14e737, []int{63}
}

func (m *RawFileChunk) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RawFileChunk.Unmarshal(m, b)
}
func (m *RawFileChunk) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RawFileChunk.Marshal(b, m, deterministic)
}
func (m *RawFileChunk) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RawFileChunk.Merge(m, src)
}
func (m *RawFileChunk) XXX_Size() int {
	return xxx_messageInfo_RawFileChunk.Size(m)
}
func (m *RawFileChunk) XXX_DiscardUnknown() {
	xxx_messageInfo_RawFileChunk.DiscardUnknown(m)
}

var xxx_messageInfo_RawFileChunk proto.InternalMessageInfo

func (m *RawFileChunk) GetContent() []byte {
	if m != nil {
		return m.Content
	}
	return nil
}

type HealthCheckRequest struct {
	Check                bool     `protobuf:"varint,1,opt,name=check,proto3" json:"check,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *HealthCheckRequest) Reset()         { *m = HealthCheckRequest{} }
func (m *HealthCheckRequest) String() string { return proto.CompactTextString(m) }
func (*HealthCheckRequest) ProtoMessage()    {}
func (*HealthCheckRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_2c07125fba14e737, []int{64}
}

func (m *HealthCheckRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_HealthCheckRequest.Unmarshal(m, b)
}
func (m *HealthCheckRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_HealthCheckRequest.Marshal(b, m, deterministic)
}
func (m *HealthCheckRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_HealthCheckRequest.Merge(m, src)
}
func (m *HealthCheckRequest) XXX_Size() int {
	return xxx_messageInfo_HealthCheckRequest.Size(m)
}
func (m *HealthCheckRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_HealthCheckRequest.DiscardUnknown(m)
}

var xxx_messageInfo_HealthCheckRequest proto.InternalMessageInfo

func (m *HealthCheckRequest) GetCheck() bool {
	if m != nil {
		return m.Check
	}
	return false
}

type HealthCheckResponse struct {
	Health               TransferStatusCode `protobuf:"varint,1,opt,name=health,proto3,enum=luceneserver.TransferStatusCode" json:"health,omitempty"`
	XXX_NoUnkeyedLiteral struct{}           `json:"-"`
	XXX_unrecognized     []byte             `json:"-"`
	XXX_sizecache        int32              `json:"-"`
}

func (m *HealthCheckResponse) Reset()         { *m = HealthCheckResponse{} }
func (m *HealthCheckResponse) String() string { return proto.CompactTextString(m) }
func (*HealthCheckResponse) ProtoMessage()    {}
func (*HealthCheckResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_2c07125fba14e737, []int{65}
}

func (m *HealthCheckResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_HealthCheckResponse.Unmarshal(m, b)
}
func (m *HealthCheckResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_HealthCheckResponse.Marshal(b, m, deterministic)
}
func (m *HealthCheckResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_HealthCheckResponse.Merge(m, src)
}
func (m *HealthCheckResponse) XXX_Size() int {
	return xxx_messageInfo_HealthCheckResponse.Size(m)
}
func (m *HealthCheckResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_HealthCheckResponse.DiscardUnknown(m)
}

var xxx_messageInfo_HealthCheckResponse proto.InternalMessageInfo

func (m *HealthCheckResponse) GetHealth() TransferStatusCode {
	if m != nil {
		return m.Health
	}
	return TransferStatusCode_Unknown
}

type TransferStatus struct {
	Message              string             `protobuf:"bytes,1,opt,name=Message,proto3" json:"Message,omitempty"`
	Code                 TransferStatusCode `protobuf:"varint,2,opt,name=Code,proto3,enum=luceneserver.TransferStatusCode" json:"Code,omitempty"`
	XXX_NoUnkeyedLiteral struct{}           `json:"-"`
	XXX_unrecognized     []byte             `json:"-"`
	XXX_sizecache        int32              `json:"-"`
}

func (m *TransferStatus) Reset()         { *m = TransferStatus{} }
func (m *TransferStatus) String() string { return proto.CompactTextString(m) }
func (*TransferStatus) ProtoMessage()    {}
func (*TransferStatus) Descriptor() ([]byte, []int) {
	return fileDescriptor_2c07125fba14e737, []int{66}
}

func (m *TransferStatus) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TransferStatus.Unmarshal(m, b)
}
func (m *TransferStatus) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TransferStatus.Marshal(b, m, deterministic)
}
func (m *TransferStatus) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TransferStatus.Merge(m, src)
}
func (m *TransferStatus) XXX_Size() int {
	return xxx_messageInfo_TransferStatus.Size(m)
}
func (m *TransferStatus) XXX_DiscardUnknown() {
	xxx_messageInfo_TransferStatus.DiscardUnknown(m)
}

var xxx_messageInfo_TransferStatus proto.InternalMessageInfo

func (m *TransferStatus) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

func (m *TransferStatus) GetCode() TransferStatusCode {
	if m != nil {
		return m.Code
	}
	return TransferStatusCode_Unknown
}

type NewNRTPoint struct {
	MagicNumber          int32    `protobuf:"varint,1,opt,name=magicNumber,proto3" json:"magicNumber,omitempty"`
	IndexName            string   `protobuf:"bytes,2,opt,name=indexName,proto3" json:"indexName,omitempty"`
	PrimaryGen           int64    `protobuf:"varint,3,opt,name=primaryGen,proto3" json:"primaryGen,omitempty"`
	Version              int64    `protobuf:"varint,4,opt,name=version,proto3" json:"version,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *NewNRTPoint) Reset()         { *m = NewNRTPoint{} }
func (m *NewNRTPoint) String() string { return proto.CompactTextString(m) }
func (*NewNRTPoint) ProtoMessage()    {}
func (*NewNRTPoint) Descriptor() ([]byte, []int) {
	return fileDescriptor_2c07125fba14e737, []int{67}
}

func (m *NewNRTPoint) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_NewNRTPoint.Unmarshal(m, b)
}
func (m *NewNRTPoint) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_NewNRTPoint.Marshal(b, m, deterministic)
}
func (m *NewNRTPoint) XXX_Merge(src proto.Message) {
	xxx_messageInfo_NewNRTPoint.Merge(m, src)
}
func (m *NewNRTPoint) XXX_Size() int {
	return xxx_messageInfo_NewNRTPoint.Size(m)
}
func (m *NewNRTPoint) XXX_DiscardUnknown() {
	xxx_messageInfo_NewNRTPoint.DiscardUnknown(m)
}

var xxx_messageInfo_NewNRTPoint proto.InternalMessageInfo

func (m *NewNRTPoint) GetMagicNumber() int32 {
	if m != nil {
		return m.MagicNumber
	}
	return 0
}

func (m *NewNRTPoint) GetIndexName() string {
	if m != nil {
		return m.IndexName
	}
	return ""
}

func (m *NewNRTPoint) GetPrimaryGen() int64 {
	if m != nil {
		return m.PrimaryGen
	}
	return 0
}

func (m *NewNRTPoint) GetVersion() int64 {
	if m != nil {
		return m.Version
	}
	return 0
}

type IndexName struct {
	MagicNumber          int32    `protobuf:"varint,1,opt,name=magicNumber,proto3" json:"magicNumber,omitempty"`
	IndexName            string   `protobuf:"bytes,2,opt,name=indexName,proto3" json:"indexName,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *IndexName) Reset()         { *m = IndexName{} }
func (m *IndexName) String() string { return proto.CompactTextString(m) }
func (*IndexName) ProtoMessage()    {}
func (*IndexName) Descriptor() ([]byte, []int) {
	return fileDescriptor_2c07125fba14e737, []int{68}
}

func (m *IndexName) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_IndexName.Unmarshal(m, b)
}
func (m *IndexName) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_IndexName.Marshal(b, m, deterministic)
}
func (m *IndexName) XXX_Merge(src proto.Message) {
	xxx_messageInfo_IndexName.Merge(m, src)
}
func (m *IndexName) XXX_Size() int {
	return xxx_messageInfo_IndexName.Size(m)
}
func (m *IndexName) XXX_DiscardUnknown() {
	xxx_messageInfo_IndexName.DiscardUnknown(m)
}

var xxx_messageInfo_IndexName proto.InternalMessageInfo

func (m *IndexName) GetMagicNumber() int32 {
	if m != nil {
		return m.MagicNumber
	}
	return 0
}

func (m *IndexName) GetIndexName() string {
	if m != nil {
		return m.IndexName
	}
	return ""
}

type SearcherVersion struct {
	Version              int64    `protobuf:"varint,1,opt,name=version,proto3" json:"version,omitempty"`
	DidRefresh           bool     `protobuf:"varint,2,opt,name=didRefresh,proto3" json:"didRefresh,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SearcherVersion) Reset()         { *m = SearcherVersion{} }
func (m *SearcherVersion) String() string { return proto.CompactTextString(m) }
func (*SearcherVersion) ProtoMessage()    {}
func (*SearcherVersion) Descriptor() ([]byte, []int) {
	return fileDescriptor_2c07125fba14e737, []int{69}
}

func (m *SearcherVersion) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SearcherVersion.Unmarshal(m, b)
}
func (m *SearcherVersion) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SearcherVersion.Marshal(b, m, deterministic)
}
func (m *SearcherVersion) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SearcherVersion.Merge(m, src)
}
func (m *SearcherVersion) XXX_Size() int {
	return xxx_messageInfo_SearcherVersion.Size(m)
}
func (m *SearcherVersion) XXX_DiscardUnknown() {
	xxx_messageInfo_SearcherVersion.DiscardUnknown(m)
}

var xxx_messageInfo_SearcherVersion proto.InternalMessageInfo

func (m *SearcherVersion) GetVersion() int64 {
	if m != nil {
		return m.Version
	}
	return 0
}

func (m *SearcherVersion) GetDidRefresh() bool {
	if m != nil {
		return m.DidRefresh
	}
	return false
}

func init() {
	proto.RegisterEnum("luceneserver.FieldType", FieldType_name, FieldType_value)
	proto.RegisterEnum("luceneserver.IndexOptions", IndexOptions_name, IndexOptions_value)
	proto.RegisterEnum("luceneserver.TermVectors", TermVectors_name, TermVectors_value)
	proto.RegisterEnum("luceneserver.FacetType", FacetType_name, FacetType_value)
	proto.RegisterEnum("luceneserver.Mode", Mode_name, Mode_value)
	proto.RegisterEnum("luceneserver.SampleType", SampleType_name, SampleType_value)
	proto.RegisterEnum("luceneserver.TransferStatusCode", TransferStatusCode_name, TransferStatusCode_value)
	proto.RegisterType((*CreateIndexRequest)(nil), "luceneserver.CreateIndexRequest")
	proto.RegisterType((*CreateIndexResponse)(nil), "luceneserver.CreateIndexResponse")
	proto.RegisterType((*LiveSettingsRequest)(nil), "luceneserver.LiveSettingsRequest")
	proto.RegisterType((*LiveSettingsResponse)(nil), "luceneserver.LiveSettingsResponse")
	proto.RegisterType((*Field)(nil), "luceneserver.Field")
	proto.RegisterType((*FieldDefRequest)(nil), "luceneserver.FieldDefRequest")
	proto.RegisterType((*FieldDefResponse)(nil), "luceneserver.FieldDefResponse")
	proto.RegisterType((*SettingsRequest)(nil), "luceneserver.SettingsRequest")
	proto.RegisterType((*SettingsResponse)(nil), "luceneserver.SettingsResponse")
	proto.RegisterType((*StartIndexRequest)(nil), "luceneserver.StartIndexRequest")
	proto.RegisterType((*StartIndexResponse)(nil), "luceneserver.StartIndexResponse")
	proto.RegisterType((*AddDocumentRequest)(nil), "luceneserver.AddDocumentRequest")
	proto.RegisterMapType((map[string]*AddDocumentRequest_MultiValuedField)(nil), "luceneserver.AddDocumentRequest.FieldsEntry")
	proto.RegisterType((*AddDocumentRequest_MultiValuedField)(nil), "luceneserver.AddDocumentRequest.MultiValuedField")
	proto.RegisterType((*AddDocumentResponse)(nil), "luceneserver.AddDocumentResponse")
	proto.RegisterType((*RefreshRequest)(nil), "luceneserver.RefreshRequest")
	proto.RegisterType((*RefreshResponse)(nil), "luceneserver.RefreshResponse")
	proto.RegisterType((*CommitRequest)(nil), "luceneserver.CommitRequest")
	proto.RegisterType((*CommitResponse)(nil), "luceneserver.CommitResponse")
	proto.RegisterType((*StatsRequest)(nil), "luceneserver.StatsRequest")
	proto.RegisterType((*StatsResponse)(nil), "luceneserver.StatsResponse")
	proto.RegisterType((*Taxonomy)(nil), "luceneserver.Taxonomy")
	proto.RegisterType((*Searcher)(nil), "luceneserver.Searcher")
	proto.RegisterType((*DeleteAllDocumentsRequest)(nil), "luceneserver.DeleteAllDocumentsRequest")
	proto.RegisterType((*DeleteAllDocumentsResponse)(nil), "luceneserver.DeleteAllDocumentsResponse")
	proto.RegisterType((*DeleteIndexRequest)(nil), "luceneserver.DeleteIndexRequest")
	proto.RegisterType((*DeleteIndexResponse)(nil), "luceneserver.DeleteIndexResponse")
	proto.RegisterType((*DummyResponse)(nil), "luceneserver.DummyResponse")
	proto.RegisterType((*StopIndexRequest)(nil), "luceneserver.StopIndexRequest")
	proto.RegisterType((*BuildSuggestRequest)(nil), "luceneserver.BuildSuggestRequest")
	proto.RegisterType((*BuildSuggestResponse)(nil), "luceneserver.BuildSuggestResponse")
	proto.RegisterType((*SuggestLookupRequest)(nil), "luceneserver.SuggestLookupRequest")
	proto.RegisterType((*SuggestLookupResponse)(nil), "luceneserver.SuggestLookupResponse")
	proto.RegisterType((*OneSuggestLookupResponse)(nil), "luceneserver.OneSuggestLookupResponse")
	proto.RegisterType((*SuggestLookupHighlight)(nil), "luceneserver.SuggestLookupHighlight")
	proto.RegisterType((*OneHighlight)(nil), "luceneserver.OneHighlight")
	proto.RegisterType((*SuggestLocalSource)(nil), "luceneserver.SuggestLocalSource")
	proto.RegisterType((*SuggestNonLocalSource)(nil), "luceneserver.SuggestNonLocalSource")
	proto.RegisterType((*InfixSuggester)(nil), "luceneserver.InfixSuggester")
	proto.RegisterType((*AnalyzingSuggester)(nil), "luceneserver.AnalyzingSuggester")
	proto.RegisterType((*FuzzySuggester)(nil), "luceneserver.FuzzySuggester")
	proto.RegisterType((*CreateSnapshotRequest)(nil), "luceneserver.CreateSnapshotRequest")
	proto.RegisterType((*CreateSnapshotResponse)(nil), "luceneserver.CreateSnapshotResponse")
	proto.RegisterType((*SnapshotId)(nil), "luceneserver.SnapshotId")
	proto.RegisterType((*ReleaseSnapshotRequest)(nil), "luceneserver.ReleaseSnapshotRequest")
	proto.RegisterType((*ReleaseSnapshotResponse)(nil), "luceneserver.ReleaseSnapshotResponse")
	proto.RegisterType((*BackupIndexRequest)(nil), "luceneserver.BackupIndexRequest")
	proto.RegisterType((*BackupIndexResponse)(nil), "luceneserver.BackupIndexResponse")
	proto.RegisterType((*MetricsRequest)(nil), "luceneserver.MetricsRequest")
	proto.RegisterType((*MetricsResponse)(nil), "luceneserver.MetricsResponse")
	proto.RegisterType((*MetricFamilySamples)(nil), "luceneserver.MetricFamilySamples")
	proto.RegisterType((*Sample)(nil), "luceneserver.Sample")
	proto.RegisterType((*IndicesRequest)(nil), "luceneserver.IndicesRequest")
	proto.RegisterType((*IndicesResponse)(nil), "luceneserver.IndicesResponse")
	proto.RegisterType((*IndexStatsResponse)(nil), "luceneserver.IndexStatsResponse")
	proto.RegisterType((*RestoreIndex)(nil), "luceneserver.RestoreIndex")
	proto.RegisterType((*AddReplicaRequest)(nil), "luceneserver.AddReplicaRequest")
	proto.RegisterType((*AddReplicaResponse)(nil), "luceneserver.AddReplicaResponse")
	proto.RegisterType((*CopyState)(nil), "luceneserver.CopyState")
	proto.RegisterType((*FilesMetadata)(nil), "luceneserver.FilesMetadata")
	proto.RegisterType((*FileMetadata)(nil), "luceneserver.FileMetadata")
	proto.RegisterType((*CopyFiles)(nil), "luceneserver.CopyFiles")
	proto.RegisterType((*CopyStateRequest)(nil), "luceneserver.CopyStateRequest")
	proto.RegisterType((*FilesInfo)(nil), "luceneserver.FilesInfo")
	proto.RegisterType((*FileInfo)(nil), "luceneserver.FileInfo")
	proto.RegisterType((*RawFileChunk)(nil), "luceneserver.RawFileChunk")
	proto.RegisterType((*HealthCheckRequest)(nil), "luceneserver.HealthCheckRequest")
	proto.RegisterType((*HealthCheckResponse)(nil), "luceneserver.HealthCheckResponse")
	proto.RegisterType((*TransferStatus)(nil), "luceneserver.TransferStatus")
	proto.RegisterType((*NewNRTPoint)(nil), "luceneserver.NewNRTPoint")
	proto.RegisterType((*IndexName)(nil), "luceneserver.IndexName")
	proto.RegisterType((*SearcherVersion)(nil), "luceneserver.SearcherVersion")
}

func init() {
	proto.RegisterFile("yelp/nrtsearch/luceneserver.proto", fileDescriptor_2c07125fba14e737)
}

var fileDescriptor_2c07125fba14e737 = []byte{
	// 4400 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xec, 0x7b, 0xcf, 0x6f, 0x1b, 0x49,
	0x76, 0xbf, 0x48, 0xea, 0x07, 0xf9, 0x48, 0x51, 0x74, 0x49, 0x23, 0xd3, 0xb4, 0xec, 0xd1, 0xf4,
	0x78, 0xe6, 0xab, 0xaf, 0xd6, 0x6b, 0x7b, 0xb4, 0x83, 0xc4, 0x99, 0x0d, 0x06, 0x43, 0x89, 0x94,
	0xc5, 0x1d, 0xfe, 0xd0, 0x36, 0x69, 0xed, 0x7a, 0x83, 0x8c, 0xd2, 0xee, 0x2e, 0x91, 0x0d, 0x35,
	0xbb, 0x39, 0xdd, 0x4d, 0x5b, 0x74, 0x0e, 0x41, 0x82, 0x05, 0x72, 0x49, 0x80, 0x00, 0x01, 0x72,
	0x09, 0x72, 0x48, 0xfe, 0x80, 0xe4, 0x96, 0xe4, 0x9e, 0x7b, 0x10, 0x20, 0x7f, 0x41, 0x80, 0x24,
	0x87, 0xe4, 0x4f, 0xc8, 0x25, 0xa8, 0x57, 0xd5, 0x3f, 0xaa, 0xd9, 0x94, 0xe4, 0xdd, 0xd9, 0x3d,
	0xe5, 0x24, 0xd6, 0x7b, 0x9f, 0x7a, 0xaf, 0xaa, 0xde, 0x8f, 0xaa, 0x7a, 0x5d, 0x82, 0x8f, 0x66,
	0xd4, 0x9a, 0x3c, 0xb5, 0x5d, 0xdf, 0xa3, 0x9a, 0xab, 0x8f, 0x9e, 0x5a, 0x53, 0x9d, 0xda, 0xd4,
	0xa3, 0xee, 0x1b, 0xea, 0x3e, 0x99, 0xb8, 0x8e, 0xef, 0x90, 0x52, 0x9c, 0x56, 0xbb, 0x9f, 0xe8,
	0xc0, 0xff, 0x70, 0x68, 0xed, 0x41, 0x82, 0xa9, 0xd9, 0x9a, 0x35, 0xf3, 0x4c, 0x4f, 0xb0, 0x77,
	0x86, 0x8e, 0x33, 0xb4, 0xe8, 0x53, 0x6d, 0x62, 0x3e, 0xd5, 0x6c, 0xdb, 0xf1, 0x35, 0xdf, 0x74,
	0x6c, 0xc1, 0x55, 0xda, 0x40, 0x8e, 0x5c, 0xaa, 0xf9, 0xb4, 0x65, 0x1b, 0xf4, 0x4a, 0xa5, 0xdf,
	0x4e, 0xa9, 0xe7, 0x93, 0x1d, 0x28, 0x98, 0xac, 0xdd, 0xd5, 0xc6, 0xb4, 0x9a, 0xd9, 0xcd, 0xec,
	0x15, 0xd4, 0x88, 0x40, 0xaa, 0xb0, 0xe6, 0x3a, 0x8e, 0xdf, 0x30, 0xdd, 0x6a, 0x16, 0x79, 0x41,
	0x53, 0xf9, 0x0c, 0x36, 0x25, 0x69, 0xde, 0xc4, 0xb1, 0x3d, 0x4a, 0x6a, 0x90, 0x77, 0xc5, 0x6f,
	0x21, 0x2d, 0x6c, 0x2b, 0xff, 0x96, 0x81, 0xcd, 0xb6, 0xf9, 0x86, 0xf6, 0xa9, 0xef, 0x9b, 0xf6,
	0xd0, 0xbb, 0xdd, 0x10, 0x1e, 0xc1, 0xfa, 0x58, 0xbb, 0x52, 0xe9, 0x85, 0x4b, 0xbd, 0x51, 0x9f,
	0xea, 0x38, 0x90, 0x8c, 0x2a, 0x13, 0x11, 0x65, 0xda, 0x31, 0x54, 0x4e, 0xa0, 0xe2, 0x44, 0xf2,
	0x18, 0xee, 0x8c, 0xb5, 0xab, 0x3e, 0x2e, 0x1e, 0x75, 0xeb, 0x43, 0xca, 0x90, 0xcb, 0x88, 0x9c,
	0x67, 0x90, 0x03, 0xd8, 0xc2, 0x61, 0xa8, 0xda, 0xf8, 0x70, 0x7a, 0x71, 0x41, 0xdd, 0xbe, 0xf9,
	0x8e, 0x76, 0x0e, 0xab, 0x2b, 0xd8, 0x21, 0x95, 0xa7, 0x1c, 0xc0, 0x96, 0x3c, 0xc5, 0x5b, 0xac,
	0xcb, 0x9f, 0xac, 0xc1, 0xca, 0xb1, 0x49, 0x2d, 0x83, 0x10, 0x58, 0xb6, 0xa3, 0x45, 0xc0, 0xdf,
	0xe4, 0x7b, 0xb0, 0xec, 0xcf, 0x26, 0x14, 0xa7, 0x5d, 0x3e, 0xb8, 0xfb, 0x44, 0xf2, 0x20, 0xec,
	0x36, 0x98, 0x4d, 0xa8, 0x8a, 0x20, 0xb2, 0x0d, 0xab, 0xdc, 0x35, 0x70, 0xfe, 0x79, 0x55, 0xb4,
	0xc8, 0x16, 0xac, 0x78, 0xbe, 0xe3, 0x52, 0x9c, 0x6c, 0x5e, 0xe5, 0x0d, 0xf2, 0x29, 0x94, 0xf1,
	0x47, 0xc3, 0xd1, 0xcf, 0x34, 0x6b, 0x4a, 0x3d, 0x9c, 0x5a, 0x5e, 0x4d, 0x50, 0xd9, 0xb0, 0x3c,
	0xc7, 0xf5, 0xab, 0xab, 0xc8, 0xc5, 0xdf, 0x6c, 0x42, 0xbe, 0x73, 0x49, 0x6d, 0xf3, 0x1d, 0xad,
	0xae, 0x21, 0x3d, 0x6c, 0x33, 0x6d, 0x43, 0xd7, 0x99, 0x4e, 0xaa, 0x79, 0xae, 0x0d, 0x1b, 0x64,
	0x17, 0x8a, 0xe3, 0xa9, 0xe5, 0x9b, 0x28, 0xd4, 0xa8, 0x16, 0x90, 0x17, 0x27, 0x31, 0x47, 0x18,
	0x99, 0xc3, 0x91, 0x65, 0x0e, 0x47, 0x7e, 0x15, 0x90, 0x1f, 0x11, 0x18, 0xd7, 0x19, 0x9b, 0x7e,
	0xd7, 0x71, 0xc7, 0x5e, 0xb5, 0xc8, 0xb9, 0x21, 0x81, 0xcd, 0xc5, 0xd0, 0x7c, 0x3a, 0x30, 0xc7,
	0xf4, 0xd8, 0x71, 0xc7, 0x9a, 0x5f, 0x2d, 0xe1, 0x22, 0x26, 0xa8, 0x0c, 0x37, 0x71, 0x3c, 0x34,
	0x8e, 0xc0, 0xad, 0x73, 0x9c, 0x4c, 0x25, 0x7b, 0xb0, 0x61, 0x04, 0x0b, 0x20, 0x80, 0x65, 0x04,
	0x26, 0xc9, 0xe4, 0x4b, 0x28, 0xa1, 0x2b, 0xf4, 0x26, 0x18, 0x6d, 0xd5, 0x0d, 0x34, 0x54, 0x4d,
	0x36, 0x54, 0x2b, 0x86, 0x50, 0x25, 0x3c, 0x79, 0x08, 0x40, 0xaf, 0x26, 0x2e, 0xf5, 0x3c, 0xd3,
	0xb1, 0xab, 0x15, 0x54, 0x12, 0xa3, 0x90, 0x03, 0xc8, 0x63, 0x9c, 0xbf, 0xa3, 0x6e, 0xf5, 0xce,
	0x6e, 0x66, 0xaf, 0x78, 0xb0, 0x2d, 0xcb, 0xae, 0x0b, 0xae, 0x1a, 0xe2, 0xc8, 0x6f, 0xc3, 0x3a,
	0xea, 0x08, 0x58, 0x55, 0x72, 0x6d, 0x47, 0x19, 0x4c, 0xbe, 0x84, 0x32, 0xf7, 0x9b, 0xb0, 0xfb,
	0xe6, 0xb5, 0xdd, 0x13, 0x68, 0xf2, 0x43, 0x28, 0xfa, 0xd4, 0x1d, 0x9f, 0x51, 0xdd, 0x77, 0x5c,
	0xaf, 0xba, 0x85, 0x0b, 0x72, 0x4f, 0xee, 0x3c, 0x88, 0x00, 0x6a, 0x1c, 0xcd, 0x96, 0xc3, 0x33,
	0xc7, 0xa6, 0xa5, 0xb9, 0xa6, 0x3f, 0xab, 0x7e, 0xc0, 0x97, 0x23, 0xa2, 0x90, 0xef, 0xc3, 0xca,
	0x85, 0xa6, 0x53, 0xbf, 0xba, 0x9d, 0x1a, 0x10, 0x8c, 0x85, 0x01, 0xc1, 0x51, 0xe4, 0x19, 0x6c,
	0xe2, 0x0f, 0x34, 0x00, 0x86, 0x0b, 0xa6, 0x99, 0xbb, 0x28, 0x37, 0x8d, 0xa5, 0xfc, 0x0c, 0x36,
	0xb0, 0xd1, 0xa0, 0x17, 0xb7, 0xcb, 0x50, 0xff, 0x1f, 0x56, 0x2e, 0x58, 0x87, 0x6a, 0x76, 0x37,
	0xb7, 0x57, 0x3c, 0xd8, 0x4c, 0x09, 0x51, 0x95, 0x23, 0x94, 0x27, 0x50, 0x89, 0x64, 0xdf, 0x22,
	0x35, 0xfc, 0xe1, 0x0a, 0x6c, 0xbc, 0x5f, 0xba, 0xdc, 0x87, 0xca, 0x98, 0xba, 0x43, 0xda, 0xd1,
	0xae, 0x3a, 0x87, 0xa7, 0xd4, 0x8d, 0x32, 0xe6, 0x1c, 0x9d, 0xb4, 0xe1, 0x23, 0xdb, 0xf5, 0x8f,
	0x34, 0x7d, 0x64, 0xda, 0xc3, 0x86, 0xe9, 0xa2, 0x05, 0x66, 0x0c, 0xc1, 0x90, 0x22, 0xdb, 0xf1,
	0x44, 0x7a, 0x33, 0x90, 0x1c, 0xc2, 0x4e, 0x3a, 0x48, 0x08, 0xe2, 0x79, 0xf6, 0x5a, 0x0c, 0x39,
	0x83, 0x4f, 0x75, 0xc7, 0xd6, 0xa7, 0xae, 0x4b, 0x6d, 0x9f, 0x0b, 0xd7, 0x47, 0xd4, 0x98, 0x5a,
	0xd4, 0xed, 0x68, 0x57, 0x83, 0x91, 0x4b, 0x35, 0xe3, 0xc8, 0x99, 0xda, 0x3e, 0x66, 0xaa, 0x15,
	0xf5, 0x96, 0x68, 0x32, 0x80, 0x4f, 0xae, 0x41, 0x22, 0x81, 0x8b, 0x5d, 0x45, 0xb1, 0xb7, 0x03,
	0x93, 0xdf, 0x10, 0x96, 0xe8, 0xb3, 0xe4, 0xb8, 0x86, 0x21, 0x52, 0x95, 0x8d, 0xcf, 0x38, 0x68,
	0x70, 0x4f, 0x8d, 0xa0, 0x44, 0x11, 0x19, 0xe3, 0x8c, 0xba, 0xaf, 0x1d, 0x8f, 0x8a, 0x34, 0x29,
	0xd1, 0xc8, 0x09, 0x7c, 0x88, 0x6d, 0x59, 0x7f, 0x7d, 0xea, 0x3b, 0x83, 0x91, 0xeb, 0xf8, 0xbe,
	0x45, 0x45, 0x06, 0xbd, 0x09, 0xc6, 0xf2, 0xae, 0xcd, 0x52, 0xa4, 0xc8, 0x62, 0x80, 0x1e, 0x13,
	0x27, 0x31, 0x8f, 0x32, 0x02, 0x5b, 0x60, 0x66, 0x2d, 0xa8, 0x11, 0x81, 0xf9, 0xec, 0x7b, 0x6d,
	0x67, 0xff, 0x9d, 0x81, 0x3b, 0x7d, 0x5f, 0x73, 0xfd, 0xf7, 0x38, 0x67, 0x7c, 0x0a, 0xcb, 0x63,
	0xc7, 0x08, 0x36, 0x39, 0x22, 0x2f, 0x62, 0xc7, 0x31, 0xa8, 0x8a, 0x7c, 0x96, 0x1c, 0x26, 0xae,
	0x39, 0xd6, 0xdc, 0xd9, 0x0b, 0x6a, 0xa3, 0x6b, 0xe6, 0xd4, 0x18, 0x05, 0xb3, 0x3b, 0x6f, 0xd5,
	0x0d, 0x83, 0x25, 0x50, 0xf4, 0x3a, 0x96, 0xdd, 0x25, 0x2a, 0xdb, 0xd1, 0x26, 0xcc, 0x68, 0xdc,
	0x8b, 0xf0, 0x37, 0xf9, 0x1c, 0xd6, 0x5c, 0xca, 0x77, 0xc9, 0x55, 0xb4, 0x65, 0x22, 0x85, 0xab,
	0x9c, 0xc9, 0x67, 0x15, 0x40, 0x95, 0x9f, 0x67, 0x80, 0xc4, 0x67, 0x2b, 0x16, 0x68, 0x1b, 0x56,
	0xc7, 0xda, 0x55, 0xc3, 0xd1, 0x71, 0xae, 0x2b, 0xaa, 0x68, 0xb1, 0x03, 0x95, 0x3d, 0x1d, 0x37,
	0x1c, 0xdd, 0xc3, 0xb9, 0xae, 0xa8, 0x41, 0x93, 0x2d, 0xa9, 0x47, 0x87, 0x63, 0x6a, 0xfb, 0x1e,
	0x4e, 0xac, 0xa0, 0x86, 0x6d, 0x66, 0x42, 0x8f, 0xe9, 0x60, 0xfb, 0x58, 0xa7, 0x2f, 0x22, 0x29,
	0x4e, 0x52, 0xfe, 0x2c, 0x0b, 0xa4, 0x6e, 0x18, 0x0d, 0x47, 0x9f, 0xb2, 0x2e, 0xb7, 0x5b, 0xf5,
	0x06, 0xac, 0x62, 0x5a, 0x62, 0x0a, 0x59, 0xe6, 0x7a, 0x9c, 0xc8, 0xef, 0x73, 0xf2, 0x78, 0x32,
	0xf3, 0x9a, 0xb6, 0xef, 0xce, 0x54, 0xd1, 0xb7, 0xb6, 0x07, 0x95, 0x4e, 0xb4, 0x89, 0xf3, 0x83,
	0xcc, 0x16, 0xac, 0xbc, 0x61, 0xcd, 0x6a, 0x66, 0x37, 0xb7, 0x57, 0x50, 0x79, 0xa3, 0x66, 0x41,
	0x31, 0x26, 0x80, 0x54, 0x20, 0x77, 0x49, 0x67, 0x62, 0x58, 0xec, 0x27, 0x79, 0x11, 0x74, 0xcb,
	0xa2, 0x01, 0x3e, 0xbb, 0x71, 0x3c, 0x49, 0xc5, 0x42, 0xd3, 0x17, 0xd9, 0xe7, 0x19, 0xe5, 0x7b,
	0xb0, 0x29, 0xf5, 0x10, 0x96, 0x61, 0x87, 0x13, 0x6a, 0xb7, 0x0c, 0xa1, 0x97, 0x37, 0x94, 0x27,
	0x50, 0x16, 0xe7, 0xc4, 0x5b, 0x2d, 0x9d, 0xf2, 0x9b, 0xb0, 0x11, 0xe2, 0x85, 0xe0, 0x47, 0xb0,
	0xee, 0x72, 0x92, 0x30, 0x53, 0x86, 0x1f, 0x41, 0x25, 0xa2, 0xf2, 0x7d, 0x58, 0x3f, 0x72, 0xc6,
	0x63, 0xf3, 0x76, 0x26, 0x52, 0x14, 0x28, 0x07, 0x70, 0xa1, 0xa6, 0x02, 0xb9, 0x21, 0xb5, 0x11,
	0x99, 0x53, 0xd9, 0x4f, 0xe5, 0x31, 0x94, 0xfa, 0xbe, 0xe6, 0xdf, 0x6e, 0x83, 0x50, 0xfe, 0x2e,
	0x0b, 0xeb, 0x02, 0x1e, 0x49, 0x74, 0x5c, 0x43, 0x38, 0x2a, 0xfb, 0x19, 0xf3, 0xde, 0xec, 0x22,
	0xef, 0xcd, 0xc9, 0xde, 0x5b, 0x85, 0x35, 0xc3, 0xc4, 0x43, 0x30, 0x7a, 0x67, 0x4e, 0x0d, 0x9a,
	0xfc, 0xe8, 0xa9, 0xf9, 0x14, 0x63, 0xad, 0xa0, 0xf2, 0x06, 0x3b, 0xd4, 0xf8, 0xda, 0x95, 0x63,
	0x3b, 0xe3, 0x99, 0x88, 0xb6, 0xc4, 0xe1, 0x62, 0x20, 0xb8, 0x6a, 0x88, 0x23, 0x9f, 0x43, 0xc1,
	0x13, 0x27, 0x74, 0xaf, 0xba, 0x86, 0x1e, 0x9b, 0xe8, 0x14, 0x1c, 0xe0, 0xd5, 0x08, 0x48, 0xbe,
	0x82, 0x0d, 0x91, 0xca, 0x03, 0x2e, 0xe6, 0xdb, 0xc5, 0x7d, 0x93, 0x70, 0xe5, 0x2b, 0xc8, 0x07,
	0xa3, 0x11, 0x2b, 0xd0, 0x73, 0x0d, 0x4f, 0xac, 0x57, 0xd0, 0x94, 0xe2, 0x37, 0x2b, 0xc7, 0x2f,
	0x4b, 0x12, 0xf9, 0x40, 0x1c, 0x13, 0xf1, 0x86, 0xba, 0x78, 0xd8, 0xe3, 0x46, 0x0c, 0x9a, 0xbf,
	0x60, 0x72, 0xd8, 0x83, 0x0d, 0xcf, 0xd7, 0x2c, 0xca, 0x6f, 0x2d, 0x8e, 0x6d, 0x78, 0x22, 0x41,
	0x24, 0xc9, 0xca, 0x6f, 0xc1, 0xbd, 0x06, 0xb5, 0xa8, 0x4f, 0xeb, 0x96, 0x15, 0xc4, 0xc5, 0x2d,
	0xbd, 0xe6, 0x00, 0x6a, 0x69, 0x5d, 0xaf, 0x8d, 0xa9, 0x03, 0x20, 0xbc, 0xcf, 0xed, 0x37, 0x02,
	0xe5, 0x13, 0xd8, 0x94, 0xfa, 0x08, 0x05, 0x65, 0xc8, 0x3a, 0x97, 0x02, 0x9d, 0x75, 0x2e, 0x95,
	0x0f, 0x61, 0xbd, 0x31, 0x1d, 0x8f, 0x67, 0x0b, 0x01, 0xcf, 0xa0, 0xd2, 0xf7, 0x9d, 0xc9, 0x7b,
	0x68, 0xfe, 0x8f, 0x1c, 0x6c, 0x1e, 0x4e, 0x4d, 0xcb, 0xe8, 0x4f, 0x87, 0x43, 0xea, 0xdd, 0x32,
	0x85, 0x1e, 0x43, 0xd9, 0xb4, 0x2f, 0xcc, 0x2b, 0xd1, 0x89, 0xba, 0x22, 0x75, 0xed, 0x24, 0x8f,
	0xff, 0x71, 0xcc, 0xc9, 0x92, 0x9a, 0xe8, 0x45, 0x54, 0x20, 0xfc, 0xf0, 0x6e, 0xda, 0xc3, 0x48,
	0x56, 0x0e, 0x65, 0xed, 0xa6, 0x1d, 0xbb, 0xe3, 0xb8, 0x93, 0x25, 0x35, 0xa5, 0x37, 0x1b, 0xdb,
	0xc5, 0xf4, 0xdd, 0xbb, 0x59, 0x24, 0x6f, 0x39, 0x6d, 0x6c, 0xc7, 0x12, 0x86, 0x8d, 0x4d, 0xee,
	0x45, 0x1a, 0x50, 0xb4, 0x1c, 0x5d, 0xb3, 0xfa, 0xce, 0xd4, 0xd5, 0x79, 0x1c, 0xcf, 0x0d, 0x4a,
	0xa0, 0xdb, 0x11, 0xee, 0x24, 0xa3, 0xc6, 0xbb, 0x91, 0x0e, 0x94, 0x6d, 0xc7, 0x8e, 0x01, 0x44,
	0xdc, 0x7f, 0x9c, 0x2a, 0xa8, 0x2b, 0x41, 0x4f, 0x32, 0x6a, 0xa2, 0x33, 0x6e, 0x89, 0x02, 0xca,
	0x0c, 0xb3, 0xc6, 0x4f, 0x35, 0x31, 0xd2, 0x61, 0x11, 0x0a, 0xe1, 0x1c, 0x0e, 0xf3, 0xb0, 0xca,
	0x3b, 0x2a, 0x5d, 0xd8, 0x92, 0xcd, 0x2c, 0x3c, 0x88, 0x09, 0x34, 0xdf, 0xd1, 0x96, 0x7d, 0x38,
	0xf3, 0xa9, 0x27, 0x42, 0x33, 0x4e, 0x62, 0x5e, 0xae, 0xe3, 0x21, 0x31, 0x8b, 0x3c, 0xde, 0x50,
	0xfe, 0x33, 0x03, 0x5b, 0xe1, 0xec, 0x9d, 0xcb, 0xe9, 0xe4, 0x76, 0x8e, 0x93, 0x18, 0x7f, 0x76,
	0x6e, 0xfc, 0xec, 0x8c, 0xe2, 0xd3, 0x2b, 0x5f, 0xc4, 0x3b, 0xfe, 0x96, 0x6f, 0xc8, 0xcb, 0xc9,
	0x1b, 0xf2, 0x3e, 0x54, 0x34, 0xcb, 0x62, 0x37, 0x2b, 0x8c, 0x6a, 0xd3, 0xa5, 0x86, 0xb8, 0xd1,
	0xcf, 0xd1, 0x59, 0x46, 0xd1, 0x1d, 0x9b, 0x09, 0xf5, 0xaa, 0xab, 0xb8, 0x49, 0x87, 0xed, 0x68,
	0xa2, 0x6b, 0x98, 0x85, 0xc4, 0x44, 0x5f, 0xc1, 0x07, 0x89, 0x79, 0x8a, 0x95, 0xfb, 0x0a, 0x0f,
	0x4e, 0x53, 0xcb, 0xf7, 0x70, 0xbb, 0x2f, 0x1e, 0x7c, 0x2a, 0x9b, 0xb4, 0x67, 0xd3, 0xd4, 0x8e,
	0x6a, 0xd0, 0x4d, 0xf9, 0x97, 0x0c, 0x54, 0x17, 0xa1, 0xc8, 0x37, 0xb0, 0xed, 0xc5, 0x19, 0x27,
	0xe1, 0x02, 0x64, 0xd0, 0x81, 0x1e, 0x2d, 0xf0, 0x44, 0x09, 0x7b, 0xb2, 0xa4, 0x2e, 0x90, 0x42,
	0x08, 0x3f, 0x86, 0xa0, 0x05, 0x4e, 0x96, 0xf8, 0x41, 0x64, 0x1b, 0x56, 0xdf, 0x52, 0xd4, 0xc1,
	0xcf, 0x98, 0xa2, 0xc5, 0x32, 0xf4, 0x44, 0x9b, 0x59, 0x8e, 0x66, 0x88, 0x83, 0x65, 0xd0, 0x3c,
	0x2c, 0x43, 0x29, 0x14, 0xf9, 0x35, 0x9d, 0x29, 0x3f, 0x85, 0xed, 0xf4, 0x91, 0x90, 0x2f, 0xa1,
	0xe4, 0xd8, 0x34, 0x3e, 0x8b, 0xdc, 0xfc, 0x61, 0xb3, 0x17, 0x43, 0xa8, 0x12, 0x5e, 0x79, 0x0e,
	0xa5, 0x38, 0x97, 0x59, 0xcb, 0xf4, 0x4e, 0x4c, 0xbe, 0x1c, 0x79, 0x95, 0x37, 0x42, 0xef, 0xc9,
	0x46, 0xde, 0xa3, 0x0c, 0x80, 0xcc, 0xc7, 0x29, 0xf3, 0x29, 0x8c, 0xd3, 0x63, 0xd3, 0x0a, 0xfd,
	0x34, 0x24, 0x30, 0x3f, 0x1d, 0x69, 0xde, 0x51, 0xe0, 0x2a, 0x59, 0x5e, 0xb5, 0x89, 0x91, 0x94,
	0x7f, 0xca, 0x86, 0x8e, 0x21, 0x47, 0x2d, 0xd9, 0x81, 0x3c, 0x3a, 0xfc, 0x8b, 0xe0, 0xbc, 0x72,
	0xb2, 0xa4, 0x86, 0x14, 0x52, 0x8b, 0xf6, 0xc1, 0xac, 0x60, 0x86, 0x3b, 0xe1, 0x0e, 0xe4, 0x3d,
	0x5b, 0x9b, 0x78, 0x23, 0x47, 0xf8, 0x3f, 0xeb, 0x19, 0x50, 0xd8, 0xfd, 0x49, 0xd8, 0x12, 0x0f,
	0x7d, 0xc2, 0x14, 0x12, 0x8d, 0x28, 0x50, 0xe4, 0x36, 0xe3, 0x10, 0x3c, 0x7c, 0xb0, 0x94, 0x14,
	0x23, 0x92, 0xc7, 0x50, 0xe1, 0xcd, 0x66, 0x54, 0x7f, 0x59, 0x15, 0xc0, 0x39, 0x0e, 0xd3, 0x2a,
	0x8c, 0xcd, 0x45, 0xf2, 0x94, 0x23, 0xd1, 0x18, 0x46, 0x44, 0x11, 0xc7, 0xe4, 0x39, 0x26, 0x4e,
	0x3b, 0x84, 0xe8, 0x2c, 0xc0, 0xd2, 0xd2, 0x4f, 0x50, 0x8f, 0x72, 0x05, 0x65, 0x79, 0x93, 0x60,
	0x11, 0x1a, 0xd6, 0x7d, 0xc4, 0x1d, 0x2b, 0xac, 0xef, 0x3c, 0x4a, 0xd6, 0x77, 0xb8, 0x99, 0x13,
	0x75, 0x9c, 0x47, 0xb0, 0xfe, 0xed, 0x94, 0xba, 0xb3, 0x10, 0xc5, 0x53, 0x89, 0x4c, 0x54, 0xfe,
	0x9e, 0x5d, 0x1d, 0xe6, 0x77, 0x8f, 0x5f, 0x93, 0x7a, 0x72, 0x0c, 0x0f, 0xc7, 0xda, 0x55, 0x7f,
	0xea, 0x5e, 0x68, 0x3a, 0x16, 0xe9, 0xbc, 0x53, 0xea, 0x0a, 0xae, 0xc1, 0xda, 0x68, 0xde, 0x15,
	0xf5, 0x06, 0x14, 0x79, 0x02, 0x64, 0xac, 0x5d, 0xbd, 0x70, 0xb5, 0xc9, 0xa8, 0x79, 0x35, 0xd1,
	0x6c, 0x0f, 0x8b, 0x71, 0xfc, 0x82, 0x97, 0xc2, 0x61, 0x8e, 0xcd, 0x4c, 0xcb, 0xc2, 0xad, 0x4f,
	0x27, 0xa2, 0xb6, 0x19, 0x27, 0xf1, 0xc2, 0x9c, 0xa6, 0xfb, 0xc7, 0xa6, 0xeb, 0xf9, 0xa2, 0xc8,
	0x19, 0xa3, 0x28, 0xff, 0x95, 0x83, 0xb2, 0xbc, 0x79, 0xfe, 0xdf, 0xa2, 0xdd, 0xb4, 0x68, 0xec,
	0x86, 0x3e, 0x36, 0x6d, 0x5c, 0xb6, 0x36, 0xb5, 0x87, 0xfe, 0x08, 0x63, 0x64, 0x45, 0x4d, 0x50,
	0x19, 0xce, 0x76, 0x38, 0xe5, 0xd4, 0xa5, 0x17, 0xe6, 0x15, 0x96, 0x3b, 0x56, 0xd4, 0x04, 0x95,
	0xad, 0xf8, 0x58, 0xbb, 0x6a, 0x1a, 0xa6, 0xef, 0x61, 0x69, 0x63, 0x45, 0x0d, 0xdb, 0x4c, 0x86,
	0xef, 0x6a, 0xb6, 0x37, 0x71, 0x3c, 0x93, 0xd7, 0x66, 0x79, 0xd9, 0x38, 0x41, 0x65, 0x51, 0x3b,
	0xb5, 0x4d, 0xdd, 0x31, 0x68, 0xfd, 0xad, 0xe6, 0x52, 0xac, 0x1c, 0xe7, 0x55, 0x89, 0xc6, 0x76,
	0x3f, 0xfe, 0xbd, 0xa3, 0x2f, 0xb2, 0xd0, 0xed, 0xb6, 0x79, 0x05, 0x4a, 0xce, 0x84, 0xda, 0xe1,
	0xd5, 0x83, 0xe7, 0x4f, 0x89, 0xa6, 0xfc, 0x63, 0x06, 0xb6, 0x93, 0xb2, 0xc5, 0xde, 0xf7, 0x10,
	0xc0, 0xe4, 0xd5, 0x49, 0x8b, 0x7a, 0xe2, 0x32, 0x1d, 0xa3, 0x30, 0x6f, 0x09, 0xae, 0x47, 0x1c,
	0x92, 0x45, 0x88, 0x4c, 0xc4, 0x92, 0x2a, 0xbb, 0x75, 0x71, 0x48, 0x8e, 0x4b, 0x89, 0x28, 0xe4,
	0x39, 0x40, 0x90, 0x5b, 0x5b, 0x86, 0x38, 0x24, 0x26, 0x0b, 0x59, 0x21, 0x5f, 0x8d, 0x61, 0x95,
	0x0b, 0x80, 0x88, 0xc3, 0x6c, 0x21, 0xe7, 0xfb, 0x58, 0xb6, 0xdf, 0x85, 0x62, 0x30, 0x28, 0xc6,
	0xe6, 0x47, 0xa8, 0x38, 0x09, 0xef, 0x38, 0x6c, 0x4c, 0x51, 0x65, 0x27, 0x6c, 0x2b, 0x13, 0xd8,
	0x56, 0xa9, 0x45, 0x35, 0xef, 0x3d, 0x97, 0x5f, 0x9e, 0x59, 0xf6, 0x3d, 0x66, 0xf6, 0x03, 0xb8,
	0x3b, 0xa7, 0x51, 0x18, 0xa5, 0x0a, 0x6b, 0xde, 0x54, 0xd7, 0xa9, 0xe7, 0x89, 0x2d, 0x37, 0x68,
	0x2a, 0x57, 0x40, 0x0e, 0x35, 0xfd, 0x72, 0xfa, 0x1e, 0xf7, 0x0e, 0x3c, 0x08, 0x52, 0xf7, 0x8d,
	0xa9, 0x53, 0xe9, 0x20, 0x18, 0x91, 0x98, 0x0f, 0xb9, 0xd4, 0xc3, 0x2d, 0x15, 0x21, 0x3c, 0x23,
	0x48, 0x34, 0xe5, 0x5b, 0xd8, 0x94, 0x34, 0x8b, 0xa1, 0xee, 0xc1, 0x86, 0xa1, 0xf9, 0xda, 0x19,
	0xdf, 0x56, 0x4f, 0x34, 0x6f, 0x24, 0x06, 0x90, 0x24, 0x93, 0x67, 0xb0, 0x39, 0xa6, 0xbe, 0x96,
	0x44, 0xf3, 0xe1, 0xa4, 0xb1, 0x94, 0x0a, 0x94, 0x3b, 0xd4, 0x77, 0x4d, 0x3d, 0xb8, 0x42, 0x2a,
	0x06, 0x6c, 0x84, 0x14, 0x31, 0x80, 0x1f, 0x03, 0x19, 0x23, 0xe9, 0x58, 0x1b, 0x9b, 0xd6, 0xac,
	0xaf, 0x8d, 0x27, 0x16, 0x15, 0x47, 0x9e, 0x8f, 0x12, 0x65, 0xbe, 0x39, 0x9c, 0xa7, 0xa6, 0x74,
	0x56, 0xfe, 0x32, 0x03, 0x9b, 0x29, 0xd8, 0xd4, 0x8f, 0x67, 0x8f, 0xa5, 0x8f, 0x67, 0x49, 0xcb,
	0x63, 0xc7, 0xd8, 0xd7, 0x33, 0x02, 0xcb, 0x23, 0x6a, 0x4d, 0x82, 0x13, 0x37, 0xfb, 0x4d, 0x9e,
	0xc0, 0x9a, 0xc7, 0x15, 0x54, 0x97, 0x71, 0xd4, 0x5b, 0x69, 0x42, 0xd4, 0x00, 0xa4, 0xfc, 0x45,
	0x06, 0x56, 0x39, 0x2d, 0x75, 0x40, 0xbb, 0x50, 0xb4, 0xb4, 0xd7, 0xd4, 0x12, 0xdf, 0xdb, 0x78,
	0xb8, 0xc6, 0x49, 0x2c, 0x58, 0xb1, 0xc9, 0xcc, 0x1a, 0x06, 0x6b, 0x44, 0x89, 0x4a, 0x6b, 0xfc,
	0x92, 0xcf, 0x1b, 0x18, 0x5e, 0xe6, 0x98, 0x7a, 0xbe, 0x36, 0x9e, 0x74, 0x78, 0x06, 0x67, 0xe1,
	0x15, 0x91, 0x98, 0xb9, 0x5a, 0xb6, 0x61, 0xea, 0x34, 0x34, 0xd7, 0xef, 0xc2, 0x46, 0x48, 0x11,
	0xe6, 0xfa, 0x11, 0x6c, 0x98, 0x32, 0x49, 0xd8, 0x6a, 0x37, 0xe5, 0x73, 0x96, 0x54, 0x45, 0x52,
	0x93, 0x1d, 0x95, 0x29, 0x90, 0x79, 0xd8, 0x0d, 0xc1, 0x50, 0x87, 0x75, 0x2f, 0x0e, 0x17, 0x21,
	0x7b, 0x3f, 0xb1, 0xe6, 0x92, 0x62, 0xb9, 0x87, 0x32, 0x80, 0x52, 0xbc, 0x52, 0x9b, 0x8c, 0xaf,
	0xcc, 0xcd, 0xf1, 0x95, 0x4d, 0x89, 0xaf, 0xbf, 0xce, 0xc0, 0x9d, 0xba, 0x61, 0xa8, 0x74, 0x62,
	0x99, 0xba, 0x16, 0x44, 0xf6, 0x2e, 0x14, 0xc7, 0xda, 0xd0, 0xd4, 0xbb, 0xd3, 0xf1, 0x6b, 0xb1,
	0xe3, 0xaf, 0xa8, 0x71, 0x92, 0x3c, 0xdd, 0x6c, 0x72, 0xba, 0x3b, 0x50, 0x70, 0xb9, 0xc4, 0x96,
	0x21, 0x2a, 0x6a, 0x11, 0x81, 0x25, 0xc4, 0x91, 0x23, 0xee, 0x87, 0xfc, 0x88, 0x1b, 0xb6, 0xd3,
	0x0a, 0xd8, 0xca, 0x23, 0x2c, 0x01, 0x87, 0x43, 0x5c, 0x50, 0x19, 0xf9, 0xe7, 0x2c, 0x14, 0x8e,
	0x9c, 0xc9, 0xac, 0x8f, 0x75, 0xb8, 0x3d, 0x66, 0xf0, 0x0b, 0x07, 0x2f, 0xb8, 0x62, 0x3f, 0xe6,
	0xb3, 0x48, 0x92, 0xf9, 0x4c, 0x04, 0x09, 0x67, 0x52, 0x52, 0x23, 0x42, 0x50, 0x95, 0xcc, 0x85,
	0x55, 0xc9, 0x78, 0x99, 0x6b, 0x59, 0x2e, 0x73, 0xd5, 0x61, 0xfd, 0x82, 0xed, 0x3b, 0x1d, 0x91,
	0x54, 0x44, 0x45, 0xe1, 0x7e, 0xf2, 0xbb, 0x59, 0x0c, 0xa2, 0xca, 0x3d, 0xc8, 0x73, 0xb8, 0xab,
	0x3b, 0x2c, 0xc8, 0x7c, 0x6a, 0xe0, 0xa7, 0x0f, 0x44, 0x63, 0xf9, 0x91, 0x7f, 0xc1, 0x59, 0xc4,
	0x66, 0x79, 0x2e, 0x85, 0x85, 0xe5, 0xc4, 0x82, 0x9a, 0xc6, 0x4a, 0x7c, 0x73, 0xc8, 0x27, 0xbf,
	0x39, 0x28, 0x97, 0xb0, 0x2e, 0x8d, 0x95, 0xd9, 0xcd, 0x9e, 0x8e, 0x83, 0x2d, 0x1b, 0x8f, 0x24,
	0x41, 0x9b, 0x5d, 0xfe, 0xd8, 0x4c, 0xc2, 0xa9, 0x67, 0xd3, 0x2e, 0x7f, 0xc7, 0x31, 0x84, 0x2a,
	0xe1, 0xd9, 0x4d, 0xb9, 0x14, 0x67, 0x33, 0x65, 0x0c, 0x10, 0xf3, 0xed, 0xb0, 0xcd, 0x8c, 0x62,
	0x85, 0x7b, 0x2d, 0xfb, 0x89, 0xb7, 0xfe, 0x11, 0xd5, 0x2f, 0xbd, 0xe9, 0x38, 0xd8, 0x63, 0x83,
	0x36, 0x0b, 0x83, 0x11, 0xd5, 0x0c, 0xea, 0x0a, 0x3f, 0xe0, 0x27, 0x48, 0x89, 0xc6, 0xee, 0xc5,
	0xbc, 0x8d, 0x36, 0x2b, 0xa9, 0xa2, 0xc5, 0xfa, 0x5e, 0x38, 0x8e, 0x1f, 0xf6, 0xe5, 0x46, 0x90,
	0x68, 0xac, 0x2f, 0x6f, 0xe3, 0xa9, 0xb0, 0xa4, 0x8a, 0x96, 0xf2, 0xb7, 0x19, 0xee, 0x90, 0x7c,
	0x81, 0x7e, 0xd9, 0x90, 0xba, 0xe9, 0x0b, 0xd1, 0x9c, 0xf3, 0x2d, 0xbf, 0xaf, 0xf3, 0x29, 0x13,
	0xa8, 0x84, 0x01, 0xf4, 0x6b, 0xc9, 0x04, 0xca, 0x5f, 0x65, 0xa0, 0x80, 0x43, 0x6a, 0xd9, 0x17,
	0xce, 0xaf, 0x38, 0xeb, 0x1c, 0x70, 0x87, 0x62, 0x9a, 0xc4, 0x8e, 0xb7, 0x3d, 0xbf, 0x36, 0x8c,
	0xab, 0x86, 0x38, 0xe5, 0x1b, 0xc8, 0x07, 0xd4, 0x6b, 0x1d, 0xb2, 0x0a, 0x6b, 0x17, 0x13, 0xfc,
	0x5a, 0x26, 0x9c, 0x32, 0x68, 0xca, 0x23, 0xce, 0x25, 0x6b, 0xb3, 0x7b, 0x50, 0x52, 0xb5, 0xb7,
	0x4c, 0xc5, 0xd1, 0x68, 0x6a, 0x5f, 0x32, 0x39, 0x78, 0xa5, 0xb6, 0x79, 0xd1, 0xa3, 0xa4, 0x06,
	0x4d, 0x65, 0x1f, 0xc8, 0x09, 0xd5, 0x2c, 0x7f, 0x74, 0xc4, 0xdc, 0x3a, 0xb0, 0xce, 0x16, 0xac,
	0xa0, 0x9b, 0x07, 0x25, 0x12, 0x6c, 0x28, 0x3d, 0xd8, 0x94, 0xb0, 0x22, 0x61, 0x3e, 0x47, 0x1f,
	0xb7, 0x44, 0x26, 0x2c, 0x27, 0xb7, 0xbe, 0x01, 0xbb, 0x3b, 0x5c, 0x50, 0x97, 0x99, 0x7f, 0xea,
	0x1d, 0x39, 0x06, 0x55, 0x05, 0x5e, 0xf9, 0x3d, 0x28, 0xcb, 0x5c, 0x36, 0xd0, 0x0e, 0xf5, 0x3c,
	0x6d, 0x18, 0xac, 0x45, 0xd0, 0x24, 0x9f, 0xc3, 0xf2, 0x51, 0xf4, 0xc5, 0xf3, 0x66, 0x1d, 0x88,
	0x56, 0xfe, 0x38, 0x03, 0xc5, 0x2e, 0x7d, 0xdb, 0x55, 0x07, 0xa7, 0x8e, 0x69, 0xfb, 0xbf, 0xf2,
	0x68, 0x59, 0x98, 0xc4, 0x95, 0xaf, 0xa1, 0xd0, 0x8a, 0x9f, 0x61, 0x7f, 0x99, 0x61, 0x28, 0x5f,
	0xc3, 0x46, 0x70, 0x1b, 0x3a, 0x8b, 0xbe, 0x85, 0x2c, 0xf8, 0x4a, 0xf2, 0x10, 0xc0, 0x30, 0x0d,
	0xf1, 0xf5, 0x4d, 0x5c, 0xa8, 0x62, 0x94, 0xfd, 0x3f, 0xc5, 0x60, 0x11, 0xef, 0xa2, 0x48, 0x1e,
	0x96, 0xeb, 0x83, 0x5e, 0xa7, 0xb2, 0xc4, 0x7e, 0x0d, 0x9a, 0x3f, 0x1d, 0x54, 0x32, 0xa4, 0x08,
	0x6b, 0x87, 0xbd, 0x5e, 0xbb, 0x59, 0xef, 0x56, 0xb2, 0x8c, 0xdc, 0xee, 0x75, 0x5f, 0x54, 0x72,
	0x64, 0x0d, 0x72, 0xad, 0xee, 0xa0, 0xb2, 0x4c, 0x00, 0x56, 0x1b, 0xbd, 0x97, 0x87, 0xed, 0x66,
	0x65, 0x85, 0x14, 0x60, 0xe5, 0xb8, 0xdd, 0xab, 0x0f, 0x2a, 0xab, 0xac, 0x5b, 0xbb, 0x3e, 0x38,
	0x6f, 0xf7, 0xba, 0x95, 0x35, 0xb2, 0x0e, 0x85, 0x46, 0x7d, 0xd0, 0x3c, 0x1f, 0xb4, 0x3a, 0xcd,
	0x4a, 0x9e, 0xf1, 0xce, 0x5a, 0xea, 0xe0, 0x65, 0xbd, 0x5d, 0x29, 0x90, 0x12, 0xe4, 0x5b, 0xdd,
	0x41, 0x53, 0xed, 0xd6, 0xdb, 0x15, 0xd8, 0x37, 0xa0, 0x14, 0x7f, 0xfd, 0x43, 0xaa, 0xb0, 0xd5,
	0xe8, 0x1d, 0xf5, 0xcf, 0x8f, 0xd5, 0xe6, 0x8f, 0xfb, 0xe7, 0xa7, 0xbd, 0x7e, 0x6b, 0xd0, 0xea,
	0x75, 0xfb, 0x7c, 0x84, 0x8c, 0x53, 0xc9, 0x90, 0x32, 0x40, 0x84, 0xa9, 0x64, 0xc9, 0x2e, 0xec,
	0xa4, 0xf5, 0x39, 0xef, 0x1d, 0x1f, 0xf7, 0x9b, 0x83, 0x7e, 0x25, 0xb7, 0xff, 0xf3, 0x0c, 0x14,
	0x63, 0x6f, 0x6a, 0x08, 0x81, 0x72, 0xb7, 0x77, 0x3e, 0x68, 0xaa, 0x9d, 0xb3, 0xe6, 0xd1, 0xa0,
	0xa7, 0x32, 0xf9, 0x05, 0x58, 0x61, 0x04, 0xa6, 0x60, 0x13, 0x36, 0xf0, 0x67, 0x4c, 0x7f, 0x96,
	0xdc, 0x87, 0xbb, 0x09, 0x62, 0xa4, 0x80, 0x3c, 0x82, 0xdd, 0x05, 0xcc, 0xf3, 0xd3, 0xfa, 0xab,
	0x76, 0xaf, 0xde, 0xe8, 0x57, 0x96, 0xf7, 0x35, 0x28, 0x84, 0x4f, 0x70, 0xd8, 0x1a, 0x75, 0x7b,
	0xe7, 0xc7, 0xf5, 0x23, 0x26, 0x01, 0xa7, 0x77, 0xdc, 0xae, 0x33, 0x03, 0xac, 0x43, 0xe1, 0xa4,
	0xd5, 0x54, 0xeb, 0xea, 0xd1, 0xc9, 0xab, 0x4a, 0x96, 0xdc, 0x81, 0xf5, 0xee, 0xcb, 0x4e, 0x53,
	0x6d, 0x1d, 0x9d, 0xab, 0xf5, 0xee, 0x8b, 0x66, 0x25, 0x47, 0xee, 0xc1, 0x07, 0xfd, 0x9e, 0x3a,
	0x68, 0x36, 0xce, 0xfb, 0xcd, 0xc1, 0x79, 0xa3, 0x77, 0x74, 0x7e, 0x56, 0x6f, 0xbf, 0x6c, 0x32,
	0x15, 0xcf, 0x60, 0xb9, 0xe3, 0x18, 0xec, 0x60, 0x03, 0xfd, 0x41, 0xbd, 0xdb, 0xa8, 0xb7, 0x7b,
	0xdd, 0x66, 0x65, 0x89, 0x99, 0xe0, 0x54, 0x6d, 0x75, 0xea, 0xea, 0x2b, 0x6e, 0x62, 0xb5, 0x79,
	0xda, 0x6e, 0x1d, 0xd5, 0x2b, 0xd9, 0xfd, 0x0e, 0x40, 0x74, 0xd6, 0x67, 0xac, 0xa3, 0xde, 0x4b,
	0x66, 0x1f, 0xbe, 0x24, 0x2f, 0xea, 0x2f, 0x5f, 0x34, 0x79, 0x97, 0xfe, 0xcb, 0x0e, 0xf6, 0xcf,
	0xf2, 0x11, 0xf6, 0x07, 0xbd, 0x17, 0x6a, 0xbd, 0x53, 0xc9, 0x31, 0xde, 0xcb, 0xee, 0xe0, 0xd5,
	0x69, 0xb3, 0x51, 0x59, 0xde, 0x6f, 0x00, 0x99, 0x0f, 0x50, 0x84, 0xd8, 0x97, 0xb6, 0xf3, 0xd6,
	0x16, 0x96, 0x74, 0x6c, 0x5a, 0xc9, 0x30, 0x5f, 0x3a, 0xd6, 0x4c, 0x8b, 0x1a, 0x95, 0x2c, 0x83,
	0xf4, 0xec, 0xa1, 0x63, 0xda, 0xc3, 0x4a, 0xee, 0xe0, 0x1f, 0xb6, 0xa0, 0xd4, 0xc6, 0xa0, 0xef,
	0x63, 0xd0, 0x13, 0x07, 0x8a, 0x7a, 0xf4, 0xa2, 0x92, 0x24, 0x52, 0xc2, 0xfc, 0xd3, 0xcd, 0xda,
	0x47, 0xd7, 0x20, 0xc4, 0x61, 0xf8, 0xfe, 0x1f, 0xfd, 0xeb, 0xbf, 0xff, 0x79, 0xf6, 0x03, 0xa5,
	0xf2, 0xf4, 0xcd, 0x67, 0x4f, 0xb9, 0xf4, 0x73, 0x0c, 0xbb, 0x2f, 0x32, 0xfb, 0xc4, 0x83, 0x92,
	0x15, 0x7b, 0xab, 0x48, 0x12, 0xf2, 0x52, 0x9e, 0x6a, 0xd6, 0x94, 0xeb, 0x20, 0x42, 0xe7, 0x0e,
	0xea, 0xdc, 0x56, 0xee, 0x30, 0x9d, 0x4c, 0xc1, 0xb9, 0x27, 0x20, 0x4c, 0xa9, 0x03, 0x65, 0x97,
	0x0e, 0x4d, 0xcf, 0xa7, 0x2e, 0x7f, 0x0b, 0x40, 0x1e, 0xa4, 0xbc, 0x97, 0x8a, 0xde, 0x5e, 0xd5,
	0x1e, 0x2e, 0x62, 0x0b, 0x75, 0x0f, 0x51, 0x5d, 0x55, 0xd9, 0x64, 0xea, 0x02, 0xd1, 0xe7, 0xfc,
	0x6d, 0x02, 0x53, 0x78, 0x09, 0xa5, 0xe9, 0xc4, 0xc0, 0x5a, 0xc7, 0x77, 0xa1, 0x4e, 0x9a, 0x1d,
	0x17, 0x1c, 0x53, 0xf6, 0x1a, 0xf2, 0xc1, 0x64, 0x93, 0x8a, 0x92, 0x4b, 0xf9, 0x70, 0x11, 0x5b,
	0x28, 0xba, 0x8b, 0x8a, 0xee, 0x28, 0x25, 0xa6, 0x28, 0xbe, 0x82, 0x97, 0x58, 0xcd, 0x11, 0x0f,
	0x4e, 0xc8, 0x87, 0x73, 0x57, 0x23, 0xf9, 0xe1, 0x4d, 0x6d, 0x77, 0x31, 0x40, 0x68, 0xaa, 0xa1,
	0xa6, 0x2d, 0x65, 0x03, 0x35, 0x31, 0x7e, 0xe4, 0x23, 0x3a, 0x14, 0xbc, 0xe0, 0x3b, 0x2a, 0x49,
	0x0e, 0x39, 0xf1, 0x81, 0xb5, 0x96, 0x38, 0x44, 0x49, 0x5f, 0x68, 0x95, 0x7b, 0xa8, 0x65, 0x53,
	0x29, 0x73, 0x2d, 0xce, 0x44, 0x72, 0x44, 0x2d, 0x7a, 0xa9, 0xe1, 0x25, 0x5d, 0x7f, 0xfe, 0xdd,
	0x47, 0xd2, 0xf5, 0x53, 0xde, 0x79, 0xc8, 0x86, 0xd2, 0x0c, 0xe3, 0xdc, 0x08, 0xe4, 0x7f, 0x91,
	0xd9, 0xdf, 0xcb, 0x90, 0x6f, 0x60, 0x4d, 0xbc, 0xcc, 0x20, 0x3b, 0xc9, 0x87, 0x3e, 0xf1, 0x87,
	0x20, 0xb5, 0x07, 0x0b, 0xb8, 0x42, 0xcf, 0x36, 0xea, 0xa9, 0x28, 0x45, 0xee, 0x7f, 0xc8, 0x64,
	0x93, 0xfa, 0x19, 0xac, 0xea, 0xf8, 0x72, 0x83, 0x24, 0x96, 0x45, 0x7a, 0xfe, 0x51, 0xdb, 0x49,
	0x67, 0x0a, 0xe1, 0x1f, 0xa0, 0xf0, 0x0d, 0x05, 0x30, 0x7e, 0x91, 0xc7, 0x64, 0x9f, 0xf1, 0x37,
	0x15, 0x1e, 0xa9, 0xa5, 0x5e, 0x8c, 0x53, 0xad, 0x21, 0x5d, 0x9a, 0x95, 0x2d, 0x14, 0x5c, 0x56,
	0x0a, 0xc2, 0xe6, 0xb8, 0x2a, 0x6c, 0xcc, 0xe2, 0xc1, 0xf0, 0xfd, 0xb4, 0xc7, 0x11, 0x0b, 0xc6,
	0x1c, 0x30, 0xd3, 0xc6, 0xcc, 0xc5, 0x31, 0xd9, 0x06, 0xac, 0x1a, 0xf8, 0x65, 0xff, 0xbb, 0x31,
	0xaf, 0xa4, 0x85, 0x0b, 0x66, 0x5a, 0x66, 0x50, 0x30, 0x82, 0x77, 0x0a, 0xe4, 0xff, 0x25, 0xfc,
	0x71, 0xd1, 0xdb, 0x87, 0xda, 0xde, 0xcd, 0xc0, 0x34, 0x2f, 0xe6, 0x9a, 0xce, 0x35, 0xcb, 0xe2,
	0x99, 0xad, 0x68, 0x44, 0x4f, 0x17, 0x92, 0xb3, 0x9c, 0x7f, 0x09, 0x91, 0x9c, 0x65, 0xca, 0xbb,
	0x07, 0x39, 0x7f, 0x0b, 0x75, 0x61, 0xd8, 0x18, 0xb0, 0xea, 0xf1, 0x63, 0x66, 0x42, 0xd7, 0xfc,
	0x09, 0x38, 0xa9, 0x2b, 0xe5, 0xdc, 0x9b, 0xb0, 0x1b, 0x0a, 0x16, 0xc1, 0xf9, 0x3a, 0xf6, 0xbd,
	0x3c, 0xb9, 0x4b, 0xa4, 0x3c, 0x99, 0x48, 0xee, 0x12, 0x69, 0x9f, 0xdb, 0xe5, 0xf0, 0x14, 0x5f,
	0xee, 0xce, 0x51, 0x11, 0x53, 0xfa, 0x16, 0xd6, 0xa5, 0xaf, 0xb5, 0x44, 0xb9, 0xe6, 0x23, 0x6f,
	0xa0, 0xf6, 0xe3, 0x6b, 0x31, 0x42, 0xef, 0x03, 0xd4, 0x7b, 0x57, 0x21, 0x71, 0xbd, 0x16, 0x62,
	0x98, 0xe2, 0x29, 0xac, 0xf3, 0xa4, 0xfe, 0x1d, 0x4f, 0x37, 0x55, 0x2d, 0xd7, 0xc4, 0xd4, 0xfe,
	0x3e, 0x94, 0x75, 0xe9, 0x0b, 0x00, 0xf9, 0x38, 0x6d, 0x73, 0x4f, 0x14, 0xbf, 0x6b, 0x8f, 0xae,
	0x07, 0xa5, 0xed, 0x90, 0xe2, 0x10, 0x10, 0x54, 0xba, 0x99, 0xf2, 0x3f, 0x80, 0x0d, 0x57, 0x2e,
	0x75, 0x93, 0x47, 0xc9, 0x9c, 0x97, 0x56, 0x7b, 0xaf, 0x7d, 0x72, 0x03, 0x4a, 0xe8, 0xff, 0x10,
	0xf5, 0xdf, 0x53, 0xb6, 0x78, 0x86, 0x44, 0x90, 0x34, 0x00, 0x07, 0x8a, 0xaf, 0xa3, 0xe2, 0x75,
	0xd2, 0x9b, 0xe7, 0x2b, 0xea, 0x49, 0x6f, 0x4e, 0xa9, 0x7c, 0xcb, 0x91, 0xc3, 0xa5, 0x47, 0x91,
	0x73, 0x0e, 0x6b, 0xbc, 0xb0, 0xec, 0x25, 0x73, 0xbf, 0x5c, 0xd1, 0x4e, 0xe6, 0xfe, 0x44, 0x75,
	0x3b, 0xd8, 0xa3, 0xc9, 0x86, 0x88, 0x97, 0xa7, 0x81, 0xd4, 0xdf, 0x81, 0x35, 0x51, 0x0e, 0x25,
	0x73, 0x2f, 0x81, 0xe2, 0x35, 0xd8, 0xa4, 0x82, 0x44, 0x3d, 0x56, 0xd9, 0x44, 0x05, 0xeb, 0x04,
	0x37, 0x17, 0x21, 0xf1, 0xe0, 0x7f, 0x96, 0xe1, 0x8e, 0xa8, 0xf2, 0xb1, 0x1b, 0x85, 0x38, 0x3e,
	0xaa, 0x50, 0xd4, 0xc2, 0xea, 0x9f, 0x97, 0x3c, 0x17, 0xcc, 0xd5, 0x2e, 0x6b, 0xbb, 0x8b, 0x01,
	0x42, 0xf9, 0x12, 0xf9, 0x11, 0xac, 0xbb, 0x54, 0x7f, 0x13, 0x95, 0x0b, 0x1f, 0x26, 0x77, 0x2b,
	0xb9, 0x0c, 0x52, 0xbb, 0xbb, 0x80, 0xaf, 0x2c, 0x91, 0xaf, 0xa1, 0xe8, 0x51, 0xdb, 0x10, 0xf7,
	0xf8, 0xe4, 0xce, 0x15, 0xbf, 0xde, 0x27, 0xf7, 0x17, 0xf9, 0xb0, 0xad, 0x2c, 0xed, 0x65, 0x48,
	0x13, 0x8a, 0x6c, 0x60, 0x81, 0xb0, 0x05, 0x15, 0x8a, 0xda, 0x35, 0x4a, 0x94, 0xa5, 0x67, 0x19,
	0x72, 0x0c, 0x05, 0x3d, 0xac, 0x3c, 0xa5, 0x8c, 0x1d, 0x19, 0x37, 0x0d, 0xe7, 0x59, 0x86, 0x9c,
	0x40, 0xd1, 0x8e, 0xdd, 0xca, 0x13, 0xff, 0xea, 0x10, 0xbb, 0xb0, 0xdf, 0x24, 0x8b, 0xb4, 0x60,
	0xfd, 0xad, 0x6b, 0xfa, 0x34, 0x94, 0x75, 0x37, 0xa5, 0xf0, 0xce, 0xee, 0xcc, 0xb5, 0x07, 0xe9,
	0xcf, 0x17, 0xc5, 0xfd, 0x59, 0x59, 0x22, 0x2f, 0xe1, 0xde, 0x90, 0xfa, 0x47, 0xf2, 0x63, 0xc6,
	0xe0, 0x7a, 0xfd, 0x0b, 0x8b, 0x3d, 0xfc, 0x21, 0x3c, 0xd4, 0x9d, 0xf1, 0x93, 0x19, 0xb5, 0x26,
	0x4f, 0xc2, 0xff, 0x44, 0x7b, 0x22, 0xe0, 0x43, 0x77, 0xa2, 0x1f, 0xde, 0x89, 0x5f, 0x6b, 0x4e,
	0x5d, 0xc7, 0x77, 0x4e, 0x33, 0x7f, 0x93, 0xcd, 0x9d, 0xb4, 0x7f, 0xf2, 0x7a, 0x15, 0xff, 0x15,
	0xed, 0x07, 0xff, 0x1b, 0x00, 0x00, 0xff, 0xff, 0xc9, 0x1b, 0x37, 0x9c, 0x17, 0x37, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// LuceneServerClient is the client API for LuceneServer service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type LuceneServerClient interface {
	// Create an Index
	CreateIndex(ctx context.Context, in *CreateIndexRequest, opts ...grpc.CallOption) (*CreateIndexResponse, error)
	// Change global offline or online settings for this index.
	LiveSettings(ctx context.Context, in *LiveSettingsRequest, opts ...grpc.CallOption) (*LiveSettingsResponse, error)
	// Registers one or more fields.  Fields must be registered before they can be added in a document (via @addDocument).
	//Pass a list of Fields and an indexName. Any number of fields may be registered in a single request,
	//and once a field is registered it cannot be changed (write-once).
	//This returns the full set of fields currently registered.
	RegisterFields(ctx context.Context, in *FieldDefRequest, opts ...grpc.CallOption) (*FieldDefResponse, error)
	// Adds one or more fields.  Fields must be registered before they can be added in a document (via @addDocument).
	//Pass a list of Fields and an indexName. Any number of fields may be registered in a single request,
	//and once a field is registered it cannot be changed (write-once).
	//This returns the full set of fields currently registered.
	UpdateFields(ctx context.Context, in *FieldDefRequest, opts ...grpc.CallOption) (*FieldDefResponse, error)
	// Change global offline settings for this index.
	//This returns the currently set settings; pass no settings changes to retrieve current settings.
	Settings(ctx context.Context, in *SettingsRequest, opts ...grpc.CallOption) (*SettingsResponse, error)
	// Starts an index
	StartIndex(ctx context.Context, in *StartIndexRequest, opts ...grpc.CallOption) (*StartIndexResponse, error)
	// Stops an index
	StopIndex(ctx context.Context, in *StopIndexRequest, opts ...grpc.CallOption) (*DummyResponse, error)
	// Adds a stream of Documents
	AddDocuments(ctx context.Context, opts ...grpc.CallOption) (LuceneServer_AddDocumentsClient, error)
	// Refresh the latest searcher for an index
	Refresh(ctx context.Context, in *RefreshRequest, opts ...grpc.CallOption) (*RefreshResponse, error)
	// Commits all pending changes to durable storage
	Commit(ctx context.Context, in *CommitRequest, opts ...grpc.CallOption) (*CommitResponse, error)
	// Retrieve index statistics
	Stats(ctx context.Context, in *StatsRequest, opts ...grpc.CallOption) (*StatsResponse, error)
	// Search
	Search(ctx context.Context, in *SearchRequest, opts ...grpc.CallOption) (*SearchResponse, error)
	// Delete documents
	Delete(ctx context.Context, in *AddDocumentRequest, opts ...grpc.CallOption) (*AddDocumentResponse, error)
	// Delete all documents for index
	DeleteAll(ctx context.Context, in *DeleteAllDocumentsRequest, opts ...grpc.CallOption) (*DeleteAllDocumentsResponse, error)
	// Delete index
	DeleteIndex(ctx context.Context, in *DeleteIndexRequest, opts ...grpc.CallOption) (*DeleteIndexResponse, error)
	// healthcheck
	Status(ctx context.Context, in *HealthCheckRequest, opts ...grpc.CallOption) (*HealthCheckResponse, error)
	// Builds a new auto-suggester, loading suggestions via the provided local file path.
	BuildSuggest(ctx context.Context, in *BuildSuggestRequest, opts ...grpc.CallOption) (*BuildSuggestResponse, error)
	// Perform an auto-suggest lookup.
	SuggestLookup(ctx context.Context, in *SuggestLookupRequest, opts ...grpc.CallOption) (*SuggestLookupResponse, error)
	// Updates existing suggestions, if the suggester supports near-real-time changes.
	UpdateSuggest(ctx context.Context, in *BuildSuggestRequest, opts ...grpc.CallOption) (*BuildSuggestResponse, error)
	//
	//Creates a snapshot in the index, which is saved point-in-time view of the last commit
	//in the index such that no files referenced by that snapshot will be deleted by ongoing
	//indexing until the snapshot is released with @releaseSnapshot.  Note that this will
	//reference the last commit, so be sure to call commit first if you have pending changes
	//that you'd like to be included in the snapshot.
	//This can be used for backup purposes, i.e. after creating the snapshot you can copy
	//all referenced files to backup storage, and then release the snapshot once complete.
	//To restore the backup, just copy all the files back and restart the server.
	//It can also be used for transactional purposes, i.e. if you sometimes need to search a
	//specific snapshot instead of the current live index. Creating a snapshot is very fast
	//(does not require any file copying), but over time it will consume extra disk space as
	//old segments are merged in the index.  Be sure to release the snapshot once you're done.
	//Snapshots survive shutdown and restart of the server.  Returns all protected filenames
	//referenced by this snapshot: these files will not change and will not be deleted until
	//the snapshot is released.  This returns the directories and files referenced by the snapshot.
	CreateSnapshot(ctx context.Context, in *CreateSnapshotRequest, opts ...grpc.CallOption) (*CreateSnapshotResponse, error)
	// releases a snapshot previously created with @createSnapshot.
	ReleaseSnapshot(ctx context.Context, in *ReleaseSnapshotRequest, opts ...grpc.CallOption) (*ReleaseSnapshotResponse, error)
	// backs up a resource (index) and it associated metadata e.g. settings, schema to s3
	BackupIndex(ctx context.Context, in *BackupIndexRequest, opts ...grpc.CallOption) (*BackupIndexResponse, error)
	// metrics
	Metrics(ctx context.Context, in *MetricsRequest, opts ...grpc.CallOption) (*MetricsResponse, error)
	// indices
	Indices(ctx context.Context, in *IndicesRequest, opts ...grpc.CallOption) (*IndicesResponse, error)
}

type luceneServerClient struct {
	cc grpc.ClientConnInterface
}

func NewLuceneServerClient(cc grpc.ClientConnInterface) LuceneServerClient {
	return &luceneServerClient{cc}
}

func (c *luceneServerClient) CreateIndex(ctx context.Context, in *CreateIndexRequest, opts ...grpc.CallOption) (*CreateIndexResponse, error) {
	out := new(CreateIndexResponse)
	err := c.cc.Invoke(ctx, "/luceneserver.LuceneServer/createIndex", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *luceneServerClient) LiveSettings(ctx context.Context, in *LiveSettingsRequest, opts ...grpc.CallOption) (*LiveSettingsResponse, error) {
	out := new(LiveSettingsResponse)
	err := c.cc.Invoke(ctx, "/luceneserver.LuceneServer/liveSettings", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *luceneServerClient) RegisterFields(ctx context.Context, in *FieldDefRequest, opts ...grpc.CallOption) (*FieldDefResponse, error) {
	out := new(FieldDefResponse)
	err := c.cc.Invoke(ctx, "/luceneserver.LuceneServer/registerFields", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *luceneServerClient) UpdateFields(ctx context.Context, in *FieldDefRequest, opts ...grpc.CallOption) (*FieldDefResponse, error) {
	out := new(FieldDefResponse)
	err := c.cc.Invoke(ctx, "/luceneserver.LuceneServer/updateFields", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *luceneServerClient) Settings(ctx context.Context, in *SettingsRequest, opts ...grpc.CallOption) (*SettingsResponse, error) {
	out := new(SettingsResponse)
	err := c.cc.Invoke(ctx, "/luceneserver.LuceneServer/settings", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *luceneServerClient) StartIndex(ctx context.Context, in *StartIndexRequest, opts ...grpc.CallOption) (*StartIndexResponse, error) {
	out := new(StartIndexResponse)
	err := c.cc.Invoke(ctx, "/luceneserver.LuceneServer/startIndex", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *luceneServerClient) StopIndex(ctx context.Context, in *StopIndexRequest, opts ...grpc.CallOption) (*DummyResponse, error) {
	out := new(DummyResponse)
	err := c.cc.Invoke(ctx, "/luceneserver.LuceneServer/stopIndex", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *luceneServerClient) AddDocuments(ctx context.Context, opts ...grpc.CallOption) (LuceneServer_AddDocumentsClient, error) {
	stream, err := c.cc.NewStream(ctx, &_LuceneServer_serviceDesc.Streams[0], "/luceneserver.LuceneServer/addDocuments", opts...)
	if err != nil {
		return nil, err
	}
	x := &luceneServerAddDocumentsClient{stream}
	return x, nil
}

type LuceneServer_AddDocumentsClient interface {
	Send(*AddDocumentRequest) error
	CloseAndRecv() (*AddDocumentResponse, error)
	grpc.ClientStream
}

type luceneServerAddDocumentsClient struct {
	grpc.ClientStream
}

func (x *luceneServerAddDocumentsClient) Send(m *AddDocumentRequest) error {
	return x.ClientStream.SendMsg(m)
}

func (x *luceneServerAddDocumentsClient) CloseAndRecv() (*AddDocumentResponse, error) {
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	m := new(AddDocumentResponse)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func (c *luceneServerClient) Refresh(ctx context.Context, in *RefreshRequest, opts ...grpc.CallOption) (*RefreshResponse, error) {
	out := new(RefreshResponse)
	err := c.cc.Invoke(ctx, "/luceneserver.LuceneServer/refresh", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *luceneServerClient) Commit(ctx context.Context, in *CommitRequest, opts ...grpc.CallOption) (*CommitResponse, error) {
	out := new(CommitResponse)
	err := c.cc.Invoke(ctx, "/luceneserver.LuceneServer/commit", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *luceneServerClient) Stats(ctx context.Context, in *StatsRequest, opts ...grpc.CallOption) (*StatsResponse, error) {
	out := new(StatsResponse)
	err := c.cc.Invoke(ctx, "/luceneserver.LuceneServer/stats", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *luceneServerClient) Search(ctx context.Context, in *SearchRequest, opts ...grpc.CallOption) (*SearchResponse, error) {
	out := new(SearchResponse)
	err := c.cc.Invoke(ctx, "/luceneserver.LuceneServer/search", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *luceneServerClient) Delete(ctx context.Context, in *AddDocumentRequest, opts ...grpc.CallOption) (*AddDocumentResponse, error) {
	out := new(AddDocumentResponse)
	err := c.cc.Invoke(ctx, "/luceneserver.LuceneServer/delete", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *luceneServerClient) DeleteAll(ctx context.Context, in *DeleteAllDocumentsRequest, opts ...grpc.CallOption) (*DeleteAllDocumentsResponse, error) {
	out := new(DeleteAllDocumentsResponse)
	err := c.cc.Invoke(ctx, "/luceneserver.LuceneServer/deleteAll", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *luceneServerClient) DeleteIndex(ctx context.Context, in *DeleteIndexRequest, opts ...grpc.CallOption) (*DeleteIndexResponse, error) {
	out := new(DeleteIndexResponse)
	err := c.cc.Invoke(ctx, "/luceneserver.LuceneServer/deleteIndex", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *luceneServerClient) Status(ctx context.Context, in *HealthCheckRequest, opts ...grpc.CallOption) (*HealthCheckResponse, error) {
	out := new(HealthCheckResponse)
	err := c.cc.Invoke(ctx, "/luceneserver.LuceneServer/status", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *luceneServerClient) BuildSuggest(ctx context.Context, in *BuildSuggestRequest, opts ...grpc.CallOption) (*BuildSuggestResponse, error) {
	out := new(BuildSuggestResponse)
	err := c.cc.Invoke(ctx, "/luceneserver.LuceneServer/buildSuggest", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *luceneServerClient) SuggestLookup(ctx context.Context, in *SuggestLookupRequest, opts ...grpc.CallOption) (*SuggestLookupResponse, error) {
	out := new(SuggestLookupResponse)
	err := c.cc.Invoke(ctx, "/luceneserver.LuceneServer/suggestLookup", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *luceneServerClient) UpdateSuggest(ctx context.Context, in *BuildSuggestRequest, opts ...grpc.CallOption) (*BuildSuggestResponse, error) {
	out := new(BuildSuggestResponse)
	err := c.cc.Invoke(ctx, "/luceneserver.LuceneServer/updateSuggest", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *luceneServerClient) CreateSnapshot(ctx context.Context, in *CreateSnapshotRequest, opts ...grpc.CallOption) (*CreateSnapshotResponse, error) {
	out := new(CreateSnapshotResponse)
	err := c.cc.Invoke(ctx, "/luceneserver.LuceneServer/createSnapshot", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *luceneServerClient) ReleaseSnapshot(ctx context.Context, in *ReleaseSnapshotRequest, opts ...grpc.CallOption) (*ReleaseSnapshotResponse, error) {
	out := new(ReleaseSnapshotResponse)
	err := c.cc.Invoke(ctx, "/luceneserver.LuceneServer/releaseSnapshot", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *luceneServerClient) BackupIndex(ctx context.Context, in *BackupIndexRequest, opts ...grpc.CallOption) (*BackupIndexResponse, error) {
	out := new(BackupIndexResponse)
	err := c.cc.Invoke(ctx, "/luceneserver.LuceneServer/backupIndex", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *luceneServerClient) Metrics(ctx context.Context, in *MetricsRequest, opts ...grpc.CallOption) (*MetricsResponse, error) {
	out := new(MetricsResponse)
	err := c.cc.Invoke(ctx, "/luceneserver.LuceneServer/metrics", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *luceneServerClient) Indices(ctx context.Context, in *IndicesRequest, opts ...grpc.CallOption) (*IndicesResponse, error) {
	out := new(IndicesResponse)
	err := c.cc.Invoke(ctx, "/luceneserver.LuceneServer/indices", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// LuceneServerServer is the server API for LuceneServer service.
type LuceneServerServer interface {
	// Create an Index
	CreateIndex(context.Context, *CreateIndexRequest) (*CreateIndexResponse, error)
	// Change global offline or online settings for this index.
	LiveSettings(context.Context, *LiveSettingsRequest) (*LiveSettingsResponse, error)
	// Registers one or more fields.  Fields must be registered before they can be added in a document (via @addDocument).
	//Pass a list of Fields and an indexName. Any number of fields may be registered in a single request,
	//and once a field is registered it cannot be changed (write-once).
	//This returns the full set of fields currently registered.
	RegisterFields(context.Context, *FieldDefRequest) (*FieldDefResponse, error)
	// Adds one or more fields.  Fields must be registered before they can be added in a document (via @addDocument).
	//Pass a list of Fields and an indexName. Any number of fields may be registered in a single request,
	//and once a field is registered it cannot be changed (write-once).
	//This returns the full set of fields currently registered.
	UpdateFields(context.Context, *FieldDefRequest) (*FieldDefResponse, error)
	// Change global offline settings for this index.
	//This returns the currently set settings; pass no settings changes to retrieve current settings.
	Settings(context.Context, *SettingsRequest) (*SettingsResponse, error)
	// Starts an index
	StartIndex(context.Context, *StartIndexRequest) (*StartIndexResponse, error)
	// Stops an index
	StopIndex(context.Context, *StopIndexRequest) (*DummyResponse, error)
	// Adds a stream of Documents
	AddDocuments(LuceneServer_AddDocumentsServer) error
	// Refresh the latest searcher for an index
	Refresh(context.Context, *RefreshRequest) (*RefreshResponse, error)
	// Commits all pending changes to durable storage
	Commit(context.Context, *CommitRequest) (*CommitResponse, error)
	// Retrieve index statistics
	Stats(context.Context, *StatsRequest) (*StatsResponse, error)
	// Search
	Search(context.Context, *SearchRequest) (*SearchResponse, error)
	// Delete documents
	Delete(context.Context, *AddDocumentRequest) (*AddDocumentResponse, error)
	// Delete all documents for index
	DeleteAll(context.Context, *DeleteAllDocumentsRequest) (*DeleteAllDocumentsResponse, error)
	// Delete index
	DeleteIndex(context.Context, *DeleteIndexRequest) (*DeleteIndexResponse, error)
	// healthcheck
	Status(context.Context, *HealthCheckRequest) (*HealthCheckResponse, error)
	// Builds a new auto-suggester, loading suggestions via the provided local file path.
	BuildSuggest(context.Context, *BuildSuggestRequest) (*BuildSuggestResponse, error)
	// Perform an auto-suggest lookup.
	SuggestLookup(context.Context, *SuggestLookupRequest) (*SuggestLookupResponse, error)
	// Updates existing suggestions, if the suggester supports near-real-time changes.
	UpdateSuggest(context.Context, *BuildSuggestRequest) (*BuildSuggestResponse, error)
	//
	//Creates a snapshot in the index, which is saved point-in-time view of the last commit
	//in the index such that no files referenced by that snapshot will be deleted by ongoing
	//indexing until the snapshot is released with @releaseSnapshot.  Note that this will
	//reference the last commit, so be sure to call commit first if you have pending changes
	//that you'd like to be included in the snapshot.
	//This can be used for backup purposes, i.e. after creating the snapshot you can copy
	//all referenced files to backup storage, and then release the snapshot once complete.
	//To restore the backup, just copy all the files back and restart the server.
	//It can also be used for transactional purposes, i.e. if you sometimes need to search a
	//specific snapshot instead of the current live index. Creating a snapshot is very fast
	//(does not require any file copying), but over time it will consume extra disk space as
	//old segments are merged in the index.  Be sure to release the snapshot once you're done.
	//Snapshots survive shutdown and restart of the server.  Returns all protected filenames
	//referenced by this snapshot: these files will not change and will not be deleted until
	//the snapshot is released.  This returns the directories and files referenced by the snapshot.
	CreateSnapshot(context.Context, *CreateSnapshotRequest) (*CreateSnapshotResponse, error)
	// releases a snapshot previously created with @createSnapshot.
	ReleaseSnapshot(context.Context, *ReleaseSnapshotRequest) (*ReleaseSnapshotResponse, error)
	// backs up a resource (index) and it associated metadata e.g. settings, schema to s3
	BackupIndex(context.Context, *BackupIndexRequest) (*BackupIndexResponse, error)
	// metrics
	Metrics(context.Context, *MetricsRequest) (*MetricsResponse, error)
	// indices
	Indices(context.Context, *IndicesRequest) (*IndicesResponse, error)
}

// UnimplementedLuceneServerServer can be embedded to have forward compatible implementations.
type UnimplementedLuceneServerServer struct {
}

func (*UnimplementedLuceneServerServer) CreateIndex(ctx context.Context, req *CreateIndexRequest) (*CreateIndexResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateIndex not implemented")
}
func (*UnimplementedLuceneServerServer) LiveSettings(ctx context.Context, req *LiveSettingsRequest) (*LiveSettingsResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method LiveSettings not implemented")
}
func (*UnimplementedLuceneServerServer) RegisterFields(ctx context.Context, req *FieldDefRequest) (*FieldDefResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method RegisterFields not implemented")
}
func (*UnimplementedLuceneServerServer) UpdateFields(ctx context.Context, req *FieldDefRequest) (*FieldDefResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UpdateFields not implemented")
}
func (*UnimplementedLuceneServerServer) Settings(ctx context.Context, req *SettingsRequest) (*SettingsResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Settings not implemented")
}
func (*UnimplementedLuceneServerServer) StartIndex(ctx context.Context, req *StartIndexRequest) (*StartIndexResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method StartIndex not implemented")
}
func (*UnimplementedLuceneServerServer) StopIndex(ctx context.Context, req *StopIndexRequest) (*DummyResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method StopIndex not implemented")
}
func (*UnimplementedLuceneServerServer) AddDocuments(srv LuceneServer_AddDocumentsServer) error {
	return status.Errorf(codes.Unimplemented, "method AddDocuments not implemented")
}
func (*UnimplementedLuceneServerServer) Refresh(ctx context.Context, req *RefreshRequest) (*RefreshResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Refresh not implemented")
}
func (*UnimplementedLuceneServerServer) Commit(ctx context.Context, req *CommitRequest) (*CommitResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Commit not implemented")
}
func (*UnimplementedLuceneServerServer) Stats(ctx context.Context, req *StatsRequest) (*StatsResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Stats not implemented")
}
func (*UnimplementedLuceneServerServer) Search(ctx context.Context, req *SearchRequest) (*SearchResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Search not implemented")
}
func (*UnimplementedLuceneServerServer) Delete(ctx context.Context, req *AddDocumentRequest) (*AddDocumentResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Delete not implemented")
}
func (*UnimplementedLuceneServerServer) DeleteAll(ctx context.Context, req *DeleteAllDocumentsRequest) (*DeleteAllDocumentsResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DeleteAll not implemented")
}
func (*UnimplementedLuceneServerServer) DeleteIndex(ctx context.Context, req *DeleteIndexRequest) (*DeleteIndexResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DeleteIndex not implemented")
}
func (*UnimplementedLuceneServerServer) Status(ctx context.Context, req *HealthCheckRequest) (*HealthCheckResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Status not implemented")
}
func (*UnimplementedLuceneServerServer) BuildSuggest(ctx context.Context, req *BuildSuggestRequest) (*BuildSuggestResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method BuildSuggest not implemented")
}
func (*UnimplementedLuceneServerServer) SuggestLookup(ctx context.Context, req *SuggestLookupRequest) (*SuggestLookupResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SuggestLookup not implemented")
}
func (*UnimplementedLuceneServerServer) UpdateSuggest(ctx context.Context, req *BuildSuggestRequest) (*BuildSuggestResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UpdateSuggest not implemented")
}
func (*UnimplementedLuceneServerServer) CreateSnapshot(ctx context.Context, req *CreateSnapshotRequest) (*CreateSnapshotResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateSnapshot not implemented")
}
func (*UnimplementedLuceneServerServer) ReleaseSnapshot(ctx context.Context, req *ReleaseSnapshotRequest) (*ReleaseSnapshotResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ReleaseSnapshot not implemented")
}
func (*UnimplementedLuceneServerServer) BackupIndex(ctx context.Context, req *BackupIndexRequest) (*BackupIndexResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method BackupIndex not implemented")
}
func (*UnimplementedLuceneServerServer) Metrics(ctx context.Context, req *MetricsRequest) (*MetricsResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Metrics not implemented")
}
func (*UnimplementedLuceneServerServer) Indices(ctx context.Context, req *IndicesRequest) (*IndicesResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Indices not implemented")
}

func RegisterLuceneServerServer(s *grpc.Server, srv LuceneServerServer) {
	s.RegisterService(&_LuceneServer_serviceDesc, srv)
}

func _LuceneServer_CreateIndex_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateIndexRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(LuceneServerServer).CreateIndex(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/luceneserver.LuceneServer/CreateIndex",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(LuceneServerServer).CreateIndex(ctx, req.(*CreateIndexRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _LuceneServer_LiveSettings_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(LiveSettingsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(LuceneServerServer).LiveSettings(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/luceneserver.LuceneServer/LiveSettings",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(LuceneServerServer).LiveSettings(ctx, req.(*LiveSettingsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _LuceneServer_RegisterFields_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(FieldDefRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(LuceneServerServer).RegisterFields(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/luceneserver.LuceneServer/RegisterFields",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(LuceneServerServer).RegisterFields(ctx, req.(*FieldDefRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _LuceneServer_UpdateFields_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(FieldDefRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(LuceneServerServer).UpdateFields(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/luceneserver.LuceneServer/UpdateFields",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(LuceneServerServer).UpdateFields(ctx, req.(*FieldDefRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _LuceneServer_Settings_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SettingsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(LuceneServerServer).Settings(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/luceneserver.LuceneServer/Settings",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(LuceneServerServer).Settings(ctx, req.(*SettingsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _LuceneServer_StartIndex_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(StartIndexRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(LuceneServerServer).StartIndex(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/luceneserver.LuceneServer/StartIndex",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(LuceneServerServer).StartIndex(ctx, req.(*StartIndexRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _LuceneServer_StopIndex_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(StopIndexRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(LuceneServerServer).StopIndex(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/luceneserver.LuceneServer/StopIndex",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(LuceneServerServer).StopIndex(ctx, req.(*StopIndexRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _LuceneServer_AddDocuments_Handler(srv interface{}, stream grpc.ServerStream) error {
	return srv.(LuceneServerServer).AddDocuments(&luceneServerAddDocumentsServer{stream})
}

type LuceneServer_AddDocumentsServer interface {
	SendAndClose(*AddDocumentResponse) error
	Recv() (*AddDocumentRequest, error)
	grpc.ServerStream
}

type luceneServerAddDocumentsServer struct {
	grpc.ServerStream
}

func (x *luceneServerAddDocumentsServer) SendAndClose(m *AddDocumentResponse) error {
	return x.ServerStream.SendMsg(m)
}

func (x *luceneServerAddDocumentsServer) Recv() (*AddDocumentRequest, error) {
	m := new(AddDocumentRequest)
	if err := x.ServerStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func _LuceneServer_Refresh_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RefreshRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(LuceneServerServer).Refresh(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/luceneserver.LuceneServer/Refresh",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(LuceneServerServer).Refresh(ctx, req.(*RefreshRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _LuceneServer_Commit_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CommitRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(LuceneServerServer).Commit(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/luceneserver.LuceneServer/Commit",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(LuceneServerServer).Commit(ctx, req.(*CommitRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _LuceneServer_Stats_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(StatsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(LuceneServerServer).Stats(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/luceneserver.LuceneServer/Stats",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(LuceneServerServer).Stats(ctx, req.(*StatsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _LuceneServer_Search_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SearchRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(LuceneServerServer).Search(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/luceneserver.LuceneServer/Search",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(LuceneServerServer).Search(ctx, req.(*SearchRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _LuceneServer_Delete_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(AddDocumentRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(LuceneServerServer).Delete(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/luceneserver.LuceneServer/Delete",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(LuceneServerServer).Delete(ctx, req.(*AddDocumentRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _LuceneServer_DeleteAll_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DeleteAllDocumentsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(LuceneServerServer).DeleteAll(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/luceneserver.LuceneServer/DeleteAll",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(LuceneServerServer).DeleteAll(ctx, req.(*DeleteAllDocumentsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _LuceneServer_DeleteIndex_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DeleteIndexRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(LuceneServerServer).DeleteIndex(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/luceneserver.LuceneServer/DeleteIndex",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(LuceneServerServer).DeleteIndex(ctx, req.(*DeleteIndexRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _LuceneServer_Status_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(HealthCheckRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(LuceneServerServer).Status(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/luceneserver.LuceneServer/Status",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(LuceneServerServer).Status(ctx, req.(*HealthCheckRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _LuceneServer_BuildSuggest_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(BuildSuggestRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(LuceneServerServer).BuildSuggest(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/luceneserver.LuceneServer/BuildSuggest",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(LuceneServerServer).BuildSuggest(ctx, req.(*BuildSuggestRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _LuceneServer_SuggestLookup_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SuggestLookupRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(LuceneServerServer).SuggestLookup(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/luceneserver.LuceneServer/SuggestLookup",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(LuceneServerServer).SuggestLookup(ctx, req.(*SuggestLookupRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _LuceneServer_UpdateSuggest_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(BuildSuggestRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(LuceneServerServer).UpdateSuggest(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/luceneserver.LuceneServer/UpdateSuggest",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(LuceneServerServer).UpdateSuggest(ctx, req.(*BuildSuggestRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _LuceneServer_CreateSnapshot_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateSnapshotRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(LuceneServerServer).CreateSnapshot(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/luceneserver.LuceneServer/CreateSnapshot",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(LuceneServerServer).CreateSnapshot(ctx, req.(*CreateSnapshotRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _LuceneServer_ReleaseSnapshot_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ReleaseSnapshotRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(LuceneServerServer).ReleaseSnapshot(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/luceneserver.LuceneServer/ReleaseSnapshot",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(LuceneServerServer).ReleaseSnapshot(ctx, req.(*ReleaseSnapshotRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _LuceneServer_BackupIndex_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(BackupIndexRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(LuceneServerServer).BackupIndex(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/luceneserver.LuceneServer/BackupIndex",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(LuceneServerServer).BackupIndex(ctx, req.(*BackupIndexRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _LuceneServer_Metrics_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MetricsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(LuceneServerServer).Metrics(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/luceneserver.LuceneServer/Metrics",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(LuceneServerServer).Metrics(ctx, req.(*MetricsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _LuceneServer_Indices_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(IndicesRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(LuceneServerServer).Indices(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/luceneserver.LuceneServer/Indices",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(LuceneServerServer).Indices(ctx, req.(*IndicesRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _LuceneServer_serviceDesc = grpc.ServiceDesc{
	ServiceName: "luceneserver.LuceneServer",
	HandlerType: (*LuceneServerServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "createIndex",
			Handler:    _LuceneServer_CreateIndex_Handler,
		},
		{
			MethodName: "liveSettings",
			Handler:    _LuceneServer_LiveSettings_Handler,
		},
		{
			MethodName: "registerFields",
			Handler:    _LuceneServer_RegisterFields_Handler,
		},
		{
			MethodName: "updateFields",
			Handler:    _LuceneServer_UpdateFields_Handler,
		},
		{
			MethodName: "settings",
			Handler:    _LuceneServer_Settings_Handler,
		},
		{
			MethodName: "startIndex",
			Handler:    _LuceneServer_StartIndex_Handler,
		},
		{
			MethodName: "stopIndex",
			Handler:    _LuceneServer_StopIndex_Handler,
		},
		{
			MethodName: "refresh",
			Handler:    _LuceneServer_Refresh_Handler,
		},
		{
			MethodName: "commit",
			Handler:    _LuceneServer_Commit_Handler,
		},
		{
			MethodName: "stats",
			Handler:    _LuceneServer_Stats_Handler,
		},
		{
			MethodName: "search",
			Handler:    _LuceneServer_Search_Handler,
		},
		{
			MethodName: "delete",
			Handler:    _LuceneServer_Delete_Handler,
		},
		{
			MethodName: "deleteAll",
			Handler:    _LuceneServer_DeleteAll_Handler,
		},
		{
			MethodName: "deleteIndex",
			Handler:    _LuceneServer_DeleteIndex_Handler,
		},
		{
			MethodName: "status",
			Handler:    _LuceneServer_Status_Handler,
		},
		{
			MethodName: "buildSuggest",
			Handler:    _LuceneServer_BuildSuggest_Handler,
		},
		{
			MethodName: "suggestLookup",
			Handler:    _LuceneServer_SuggestLookup_Handler,
		},
		{
			MethodName: "updateSuggest",
			Handler:    _LuceneServer_UpdateSuggest_Handler,
		},
		{
			MethodName: "createSnapshot",
			Handler:    _LuceneServer_CreateSnapshot_Handler,
		},
		{
			MethodName: "releaseSnapshot",
			Handler:    _LuceneServer_ReleaseSnapshot_Handler,
		},
		{
			MethodName: "backupIndex",
			Handler:    _LuceneServer_BackupIndex_Handler,
		},
		{
			MethodName: "metrics",
			Handler:    _LuceneServer_Metrics_Handler,
		},
		{
			MethodName: "indices",
			Handler:    _LuceneServer_Indices_Handler,
		},
	},
	Streams: []grpc.StreamDesc{
		{
			StreamName:    "addDocuments",
			Handler:       _LuceneServer_AddDocuments_Handler,
			ClientStreams: true,
		},
	},
	Metadata: "yelp/nrtsearch/luceneserver.proto",
}

// ReplicationServerClient is the client API for ReplicationServer service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type ReplicationServerClient interface {
	// Issued by replica on primary node when it comes up
	AddReplicas(ctx context.Context, in *AddReplicaRequest, opts ...grpc.CallOption) (*AddReplicaResponse, error)
	// Issued by replica to receive CopyState from primary
	RecvCopyState(ctx context.Context, in *CopyStateRequest, opts ...grpc.CallOption) (*CopyState, error)
	// Send a file as a stream in chunks
	SendRawFile(ctx context.Context, opts ...grpc.CallOption) (ReplicationServer_SendRawFileClient, error)
	// Receives a file as a stream in chunks. Typically issued by replica on primary
	RecvRawFile(ctx context.Context, in *FileInfo, opts ...grpc.CallOption) (ReplicationServer_RecvRawFileClient, error)
	// Issued by primary on replica to inform it to start copying files either pre-warming (new merged segments) or when replica comes up first time
	CopyFiles(ctx context.Context, in *CopyFiles, opts ...grpc.CallOption) (ReplicationServer_CopyFilesClient, error)
	// Invoked externally to replica, to notify it that a new NRT point was just created on the primary
	NewNRTPoint(ctx context.Context, in *NewNRTPoint, opts ...grpc.CallOption) (*TransferStatus, error)
	//* Invoked externally to primary, to make all recent index operations searchable on the primary and, once copying is done, on the replicas
	WriteNRTPoint(ctx context.Context, in *IndexName, opts ...grpc.CallOption) (*SearcherVersion, error)
	//* Invoked externally to replica, to get the current Searcher version on replica. Typically used to check i
	GetCurrentSearcherVersion(ctx context.Context, in *IndexName, opts ...grpc.CallOption) (*SearcherVersion, error)
}

type replicationServerClient struct {
	cc grpc.ClientConnInterface
}

func NewReplicationServerClient(cc grpc.ClientConnInterface) ReplicationServerClient {
	return &replicationServerClient{cc}
}

func (c *replicationServerClient) AddReplicas(ctx context.Context, in *AddReplicaRequest, opts ...grpc.CallOption) (*AddReplicaResponse, error) {
	out := new(AddReplicaResponse)
	err := c.cc.Invoke(ctx, "/luceneserver.ReplicationServer/addReplicas", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *replicationServerClient) RecvCopyState(ctx context.Context, in *CopyStateRequest, opts ...grpc.CallOption) (*CopyState, error) {
	out := new(CopyState)
	err := c.cc.Invoke(ctx, "/luceneserver.ReplicationServer/recvCopyState", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *replicationServerClient) SendRawFile(ctx context.Context, opts ...grpc.CallOption) (ReplicationServer_SendRawFileClient, error) {
	stream, err := c.cc.NewStream(ctx, &_ReplicationServer_serviceDesc.Streams[0], "/luceneserver.ReplicationServer/sendRawFile", opts...)
	if err != nil {
		return nil, err
	}
	x := &replicationServerSendRawFileClient{stream}
	return x, nil
}

type ReplicationServer_SendRawFileClient interface {
	Send(*RawFileChunk) error
	CloseAndRecv() (*TransferStatus, error)
	grpc.ClientStream
}

type replicationServerSendRawFileClient struct {
	grpc.ClientStream
}

func (x *replicationServerSendRawFileClient) Send(m *RawFileChunk) error {
	return x.ClientStream.SendMsg(m)
}

func (x *replicationServerSendRawFileClient) CloseAndRecv() (*TransferStatus, error) {
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	m := new(TransferStatus)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func (c *replicationServerClient) RecvRawFile(ctx context.Context, in *FileInfo, opts ...grpc.CallOption) (ReplicationServer_RecvRawFileClient, error) {
	stream, err := c.cc.NewStream(ctx, &_ReplicationServer_serviceDesc.Streams[1], "/luceneserver.ReplicationServer/recvRawFile", opts...)
	if err != nil {
		return nil, err
	}
	x := &replicationServerRecvRawFileClient{stream}
	if err := x.ClientStream.SendMsg(in); err != nil {
		return nil, err
	}
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	return x, nil
}

type ReplicationServer_RecvRawFileClient interface {
	Recv() (*RawFileChunk, error)
	grpc.ClientStream
}

type replicationServerRecvRawFileClient struct {
	grpc.ClientStream
}

func (x *replicationServerRecvRawFileClient) Recv() (*RawFileChunk, error) {
	m := new(RawFileChunk)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func (c *replicationServerClient) CopyFiles(ctx context.Context, in *CopyFiles, opts ...grpc.CallOption) (ReplicationServer_CopyFilesClient, error) {
	stream, err := c.cc.NewStream(ctx, &_ReplicationServer_serviceDesc.Streams[2], "/luceneserver.ReplicationServer/copyFiles", opts...)
	if err != nil {
		return nil, err
	}
	x := &replicationServerCopyFilesClient{stream}
	if err := x.ClientStream.SendMsg(in); err != nil {
		return nil, err
	}
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	return x, nil
}

type ReplicationServer_CopyFilesClient interface {
	Recv() (*TransferStatus, error)
	grpc.ClientStream
}

type replicationServerCopyFilesClient struct {
	grpc.ClientStream
}

func (x *replicationServerCopyFilesClient) Recv() (*TransferStatus, error) {
	m := new(TransferStatus)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func (c *replicationServerClient) NewNRTPoint(ctx context.Context, in *NewNRTPoint, opts ...grpc.CallOption) (*TransferStatus, error) {
	out := new(TransferStatus)
	err := c.cc.Invoke(ctx, "/luceneserver.ReplicationServer/newNRTPoint", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *replicationServerClient) WriteNRTPoint(ctx context.Context, in *IndexName, opts ...grpc.CallOption) (*SearcherVersion, error) {
	out := new(SearcherVersion)
	err := c.cc.Invoke(ctx, "/luceneserver.ReplicationServer/writeNRTPoint", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *replicationServerClient) GetCurrentSearcherVersion(ctx context.Context, in *IndexName, opts ...grpc.CallOption) (*SearcherVersion, error) {
	out := new(SearcherVersion)
	err := c.cc.Invoke(ctx, "/luceneserver.ReplicationServer/getCurrentSearcherVersion", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// ReplicationServerServer is the server API for ReplicationServer service.
type ReplicationServerServer interface {
	// Issued by replica on primary node when it comes up
	AddReplicas(context.Context, *AddReplicaRequest) (*AddReplicaResponse, error)
	// Issued by replica to receive CopyState from primary
	RecvCopyState(context.Context, *CopyStateRequest) (*CopyState, error)
	// Send a file as a stream in chunks
	SendRawFile(ReplicationServer_SendRawFileServer) error
	// Receives a file as a stream in chunks. Typically issued by replica on primary
	RecvRawFile(*FileInfo, ReplicationServer_RecvRawFileServer) error
	// Issued by primary on replica to inform it to start copying files either pre-warming (new merged segments) or when replica comes up first time
	CopyFiles(*CopyFiles, ReplicationServer_CopyFilesServer) error
	// Invoked externally to replica, to notify it that a new NRT point was just created on the primary
	NewNRTPoint(context.Context, *NewNRTPoint) (*TransferStatus, error)
	//* Invoked externally to primary, to make all recent index operations searchable on the primary and, once copying is done, on the replicas
	WriteNRTPoint(context.Context, *IndexName) (*SearcherVersion, error)
	//* Invoked externally to replica, to get the current Searcher version on replica. Typically used to check i
	GetCurrentSearcherVersion(context.Context, *IndexName) (*SearcherVersion, error)
}

// UnimplementedReplicationServerServer can be embedded to have forward compatible implementations.
type UnimplementedReplicationServerServer struct {
}

func (*UnimplementedReplicationServerServer) AddReplicas(ctx context.Context, req *AddReplicaRequest) (*AddReplicaResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method AddReplicas not implemented")
}
func (*UnimplementedReplicationServerServer) RecvCopyState(ctx context.Context, req *CopyStateRequest) (*CopyState, error) {
	return nil, status.Errorf(codes.Unimplemented, "method RecvCopyState not implemented")
}
func (*UnimplementedReplicationServerServer) SendRawFile(srv ReplicationServer_SendRawFileServer) error {
	return status.Errorf(codes.Unimplemented, "method SendRawFile not implemented")
}
func (*UnimplementedReplicationServerServer) RecvRawFile(req *FileInfo, srv ReplicationServer_RecvRawFileServer) error {
	return status.Errorf(codes.Unimplemented, "method RecvRawFile not implemented")
}
func (*UnimplementedReplicationServerServer) CopyFiles(req *CopyFiles, srv ReplicationServer_CopyFilesServer) error {
	return status.Errorf(codes.Unimplemented, "method CopyFiles not implemented")
}
func (*UnimplementedReplicationServerServer) NewNRTPoint(ctx context.Context, req *NewNRTPoint) (*TransferStatus, error) {
	return nil, status.Errorf(codes.Unimplemented, "method NewNRTPoint not implemented")
}
func (*UnimplementedReplicationServerServer) WriteNRTPoint(ctx context.Context, req *IndexName) (*SearcherVersion, error) {
	return nil, status.Errorf(codes.Unimplemented, "method WriteNRTPoint not implemented")
}
func (*UnimplementedReplicationServerServer) GetCurrentSearcherVersion(ctx context.Context, req *IndexName) (*SearcherVersion, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetCurrentSearcherVersion not implemented")
}

func RegisterReplicationServerServer(s *grpc.Server, srv ReplicationServerServer) {
	s.RegisterService(&_ReplicationServer_serviceDesc, srv)
}

func _ReplicationServer_AddReplicas_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(AddReplicaRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ReplicationServerServer).AddReplicas(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/luceneserver.ReplicationServer/AddReplicas",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ReplicationServerServer).AddReplicas(ctx, req.(*AddReplicaRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ReplicationServer_RecvCopyState_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CopyStateRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ReplicationServerServer).RecvCopyState(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/luceneserver.ReplicationServer/RecvCopyState",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ReplicationServerServer).RecvCopyState(ctx, req.(*CopyStateRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ReplicationServer_SendRawFile_Handler(srv interface{}, stream grpc.ServerStream) error {
	return srv.(ReplicationServerServer).SendRawFile(&replicationServerSendRawFileServer{stream})
}

type ReplicationServer_SendRawFileServer interface {
	SendAndClose(*TransferStatus) error
	Recv() (*RawFileChunk, error)
	grpc.ServerStream
}

type replicationServerSendRawFileServer struct {
	grpc.ServerStream
}

func (x *replicationServerSendRawFileServer) SendAndClose(m *TransferStatus) error {
	return x.ServerStream.SendMsg(m)
}

func (x *replicationServerSendRawFileServer) Recv() (*RawFileChunk, error) {
	m := new(RawFileChunk)
	if err := x.ServerStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func _ReplicationServer_RecvRawFile_Handler(srv interface{}, stream grpc.ServerStream) error {
	m := new(FileInfo)
	if err := stream.RecvMsg(m); err != nil {
		return err
	}
	return srv.(ReplicationServerServer).RecvRawFile(m, &replicationServerRecvRawFileServer{stream})
}

type ReplicationServer_RecvRawFileServer interface {
	Send(*RawFileChunk) error
	grpc.ServerStream
}

type replicationServerRecvRawFileServer struct {
	grpc.ServerStream
}

func (x *replicationServerRecvRawFileServer) Send(m *RawFileChunk) error {
	return x.ServerStream.SendMsg(m)
}

func _ReplicationServer_CopyFiles_Handler(srv interface{}, stream grpc.ServerStream) error {
	m := new(CopyFiles)
	if err := stream.RecvMsg(m); err != nil {
		return err
	}
	return srv.(ReplicationServerServer).CopyFiles(m, &replicationServerCopyFilesServer{stream})
}

type ReplicationServer_CopyFilesServer interface {
	Send(*TransferStatus) error
	grpc.ServerStream
}

type replicationServerCopyFilesServer struct {
	grpc.ServerStream
}

func (x *replicationServerCopyFilesServer) Send(m *TransferStatus) error {
	return x.ServerStream.SendMsg(m)
}

func _ReplicationServer_NewNRTPoint_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(NewNRTPoint)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ReplicationServerServer).NewNRTPoint(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/luceneserver.ReplicationServer/NewNRTPoint",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ReplicationServerServer).NewNRTPoint(ctx, req.(*NewNRTPoint))
	}
	return interceptor(ctx, in, info, handler)
}

func _ReplicationServer_WriteNRTPoint_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(IndexName)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ReplicationServerServer).WriteNRTPoint(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/luceneserver.ReplicationServer/WriteNRTPoint",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ReplicationServerServer).WriteNRTPoint(ctx, req.(*IndexName))
	}
	return interceptor(ctx, in, info, handler)
}

func _ReplicationServer_GetCurrentSearcherVersion_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(IndexName)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ReplicationServerServer).GetCurrentSearcherVersion(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/luceneserver.ReplicationServer/GetCurrentSearcherVersion",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ReplicationServerServer).GetCurrentSearcherVersion(ctx, req.(*IndexName))
	}
	return interceptor(ctx, in, info, handler)
}

var _ReplicationServer_serviceDesc = grpc.ServiceDesc{
	ServiceName: "luceneserver.ReplicationServer",
	HandlerType: (*ReplicationServerServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "addReplicas",
			Handler:    _ReplicationServer_AddReplicas_Handler,
		},
		{
			MethodName: "recvCopyState",
			Handler:    _ReplicationServer_RecvCopyState_Handler,
		},
		{
			MethodName: "newNRTPoint",
			Handler:    _ReplicationServer_NewNRTPoint_Handler,
		},
		{
			MethodName: "writeNRTPoint",
			Handler:    _ReplicationServer_WriteNRTPoint_Handler,
		},
		{
			MethodName: "getCurrentSearcherVersion",
			Handler:    _ReplicationServer_GetCurrentSearcherVersion_Handler,
		},
	},
	Streams: []grpc.StreamDesc{
		{
			StreamName:    "sendRawFile",
			Handler:       _ReplicationServer_SendRawFile_Handler,
			ClientStreams: true,
		},
		{
			StreamName:    "recvRawFile",
			Handler:       _ReplicationServer_RecvRawFile_Handler,
			ServerStreams: true,
		},
		{
			StreamName:    "copyFiles",
			Handler:       _ReplicationServer_CopyFiles_Handler,
			ServerStreams: true,
		},
	},
	Metadata: "yelp/nrtsearch/luceneserver.proto",
}
